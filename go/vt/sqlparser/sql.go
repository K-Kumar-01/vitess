// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const BUCKETS = 57820
const CLONE = 57821
const COMPONENT = 57822
const DEFINITION = 57823
const ENFORCED = 57824
const EXCLUDE = 57825
const FOLLOWING = 57826
const GEOMCOLLECTION = 57827
const GET_MASTER_PUBLIC_KEY = 57828
const HISTOGRAM = 57829
const HISTORY = 57830
const INACTIVE = 57831
const INVISIBLE = 57832
const LOCKED = 57833
const MASTER_COMPRESSION_ALGORITHMS = 57834
const MASTER_PUBLIC_KEY_PATH = 57835
const MASTER_TLS_CIPHERSUITES = 57836
const MASTER_ZSTD_COMPRESSION_LEVEL = 57837
const NESTED = 57838
const NETWORK_NAMESPACE = 57839
const NOWAIT = 57840
const NULLS = 57841
const OJ = 57842
const OLD = 57843
const OPTIONAL = 57844
const ORDINALITY = 57845
const ORGANIZATION = 57846
const OTHERS = 57847
const PATH = 57848
const PERSIST = 57849
const PERSIST_ONLY = 57850
const PRECEDING = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const RANDOM = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const REUSE = 57861
const ROLE = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const SRID = 57868
const THREAD_PRIORITY = 57869
const TIES = 57870
const UNBOUNDED = 57871
const VCPU = 57872
const VISIBLE = 57873
const FORMAT = 57874
const TREE = 57875
const VITESS = 57876
const TRADITIONAL = 57877
const LOCAL = 57878
const LOW_PRIORITY = 57879
const NO_WRITE_TO_BINLOG = 57880
const LOGS = 57881
const ERROR = 57882
const GENERAL = 57883
const HOSTS = 57884
const OPTIMIZER_COSTS = 57885
const USER_RESOURCES = 57886
const SLOW = 57887
const CHANNEL = 57888
const RELAY = 57889
const EXPORT = 57890
const CURRENT = 57891
const ROW = 57892
const ROWS = 57893
const AVG_ROW_LENGTH = 57894
const CONNECTION = 57895
const CHECKSUM = 57896
const DELAY_KEY_WRITE = 57897
const ENCRYPTION = 57898
const ENGINE = 57899
const INSERT_METHOD = 57900
const MAX_ROWS = 57901
const MIN_ROWS = 57902
const PACK_KEYS = 57903
const PASSWORD = 57904
const FIXED = 57905
const DYNAMIC = 57906
const COMPRESSED = 57907
const REDUNDANT = 57908
const COMPACT = 57909
const ROW_FORMAT = 57910
const STATS_AUTO_RECALC = 57911
const STATS_PERSISTENT = 57912
const STATS_SAMPLE_PAGES = 57913
const STORAGE = 57914
const MEMORY = 57915
const DISK = 57916
const PARTITIONS = 57917
const LINEAR = 57918
const RANGE = 57919
const LIST = 57920
const SUBPARTITION = 57921
const SUBPARTITIONS = 57922
const HASH = 57923

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	599, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 455,
	-1, 55,
	35, 670,
	231, 670,
	242, 670,
	277, 684,
	278, 684,
	-2, 672,
	-1, 60,
	233, 697,
	-2, 695,
	-1, 114,
	230, 1268,
	-2, 119,
	-1, 116,
	1, 146,
	599, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 449,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 464,
	-1, 691,
	215, 1289,
	-2, 1285,
	-1, 692,
	215, 1290,
	-2, 1286,
	-1, 767,
	59, 765,
	-2, 780,
	-1, 804,
	147, 1690,
	-2, 112,
	-1, 805,
	147, 1536,
	-2, 113,
	-1, 811,
	147, 1619,
	-2, 1262,
	-1, 961,
	147, 1466,
	-2, 1259,
	-1, 999,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1076,
	1, 503,
	599, 503,
	-2, 151,
	-1, 1319,
	59, 766,
	-2, 785,
	-1, 1320,
	59, 767,
	-2, 786,
	-1, 1373,
	131, 151,
	171, 151,
	327, 151,
	-2, 399,
	-1, 1450,
	132, 358,
	236, 358,
	-2, 449,
	-1, 1459,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1765,
	215, 1294,
	-2, 1288,
	-1, 1849,
	131, 151,
	171, 151,
	327, 151,
	-2, 400,
	-1, 1856,
	25, 170,
	-2, 172,
	-1, 2099,
	86, 39,
	-2, 822,
	-1, 2151,
	77, 94,
	86, 94,
	-2, 842,
	-1, 2215,
	574, 598,
	-2, 585,
	-1, 2365,
	49, 1229,
	-2, 1223,
	-1, 2586,
	86, 39,
	-2, 823,
	-1, 2624,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 814,
	-1, 2966,
	22, 1621,
	32, 1621,
	172, 1621,
	253, 1621,
	307, 1621,
	308, 1621,
	309, 1621,
	310, 1621,
	311, 1621,
	312, 1621,
	313, 1621,
	315, 1621,
	316, 1621,
	317, 1621,
	318, 1621,
	319, 1621,
	320, 1621,
	321, 1621,
	322, 1621,
	323, 1621,
	324, 1621,
	325, 1621,
	326, 1621,
	328, 1621,
	330, 1621,
	331, 1621,
	332, 1621,
	333, 1621,
	334, 1621,
	335, 1621,
	336, 1621,
	337, 1621,
	338, 1621,
	341, 1621,
	342, 1621,
	343, 1621,
	344, 1621,
	345, 1621,
	346, 1621,
	347, 1621,
	348, 1621,
	349, 1621,
	461, 1621,
	-2, 543,
}

const yyPrivate = 57344

const yyLast = 44251

var yyAct = [...]int{
	691, 2307, 3035, 700, 3034, 3017, 2883, 693, 3011, 1846,
	2691, 2968, 1376, 2964, 2503, 2942, 2912, 2418, 2425, 1800,
	2827, 2459, 2043, 1780, 782, 2845, 3, 760, 1139, 2735,
	2376, 2379, 1782, 676, 2859, 2087, 2326, 675, 37, 1297,
	2486, 2427, 599, 1909, 2377, 2485, 1334, 595, 2380, 2740,
	2595, 182, 2717, 2567, 182, 674, 560, 182, 2305, 1804,
	1029, 2589, 575, 592, 182, 621, 2306, 673, 694, 2488,
	1819, 2114, 182, 2615, 2374, 2145, 2183, 2212, 2366, 2576,
	2581, 1879, 593, 1899, 2252, 1884, 2184, 182, 2122, 2185,
	1430, 36, 1835, 2134, 964, 591, 154, 1824, 783, 809,
	2106, 2089, 1728, 762, 1321, 1759, 38, 587, 1668, 575,
	1823, 140, 575, 182, 575, 764, 1918, 768, 2269, 1088,
	1616, 1898, 1727, 1886, 1658, 1951, 1457, 2177, 989, 994,
	1365, 1473, 2153, 1826, 1343, 785, 95, 806, 604, 1301,
	1224, 96, 1680, 1635, 1160, 1561, 1565, 1464, 968, 971,
	1896, 997, 91, 1000, 2063, 1811, 995, 1547, 996, 1364,
	1137, 1362, 1007, 1348, 972, 774, 1724, 1131, 1570, 117,
	157, 769, 1425, 1875, 118, 1072, 796, 123, 124, 772,
	76, 582, 97, 85, 1117, 2892, 770, 2205, 89, 1227,
	98, 1449, 3018, 2477, 2456, 1231, 1911, 1912, 1913, 1805,
	1911, 2231, 2230, 1031, 2203, 1949, 2474, 771, 77, 1772,
	8, 790, 1533, 795, 2674, 7, 1045, 1046, 119, 1049,
	1050, 1051, 1052, 2848, 6, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	125, 965, 1034, 776, 2957, 87, 90, 583, 87, 2849,
	2475, 87, 2260, 2261, 3045, 532, 3038, 1623, 763, 761,
	1622, 3044, 102, 1621, 1620, 1638, 184, 185, 186, 1619,
	803, 1618, 2481, 1762, 1777, 1778, 1601, 1161, 585, 1010,
	586, 784, 1610, 2983, 2085, 2362, 986, 119, 2116, 2330,
	1011, 985, 2959, 980, 975, 3031, 2994, 3008, 1035, 1036,
	1037, 777, 2571, 104, 105, 2570, 108, 2650, 810, 114,
	2442, 2064, 179, 1161, 1177, 527, 1042, 2958, 1628, 987,
	2823, 2822, 2684, 78, 1033, 2685, 178, 1032, 1891, 78,
	3030, 2952, 80, 78, 78, 756, 757, 758, 759, 1989,
	3037, 767, 184, 185, 186, 3045, 3005, 2125, 3021, 2909,
	120, 119, 1889, 2692, 2943, 1937, 2951, 1047, 2908, 2268,
	178, 2537, 1439, 162, 2239, 2415, 2416, 2086, 2238, 798,
	799, 2414, 2126, 1124, 984, 1126, 1081, 1082, 1841, 1842,
	2478, 2259, 1171, 2753, 120, 564, 2162, 1986, 1075, 2161,
	1840, 979, 2163, 1107, 981, 754, 1366, 162, 1367, 1134,
	87, 1112, 1113, 1987, 1095, 2167, 87, 753, 1084, 1096,
	87, 87, 2206, 1123, 1125, 2174, 1095, 1094, 1171, 1093,
	159, 1096, 160, 2884, 1108, 2897, 561, 1101, 1859, 1858,
	2505, 2592, 982, 564, 2295, 564, 1779, 2528, 573, 1193,
	2526, 1609, 177, 577, 1553, 1174, 1305, 1175, 1176, 564,
	1963, 1960, 1962, 1961, 159, 564, 160, 571, 1303, 2213,
	2832, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1201,
	1203, 1204, 548, 1071, 1919, 1048, 177, 1167, 2498, 1523,
	1159, 2852, 2234, 2853, 546, 1957, 2499, 1952, 984, 988,
	976, 1888, 1114, 3020, 1611, 1612, 1613, 978, 977, 1548,
	1128, 1133, 1115, 1110, 1111, 1109, 1121, 1077, 1102, 2247,
	1122, 2506, 529, 1167, 1965, 1116, 1966, 2676, 1967, 2675,
	1127, 1968, 578, 1524, 543, 1525, 1054, 182, 1956, 182,
	755, 1053, 182, 556, 2810, 2507, 1954, 984, 1070, 1922,
	1958, 2568, 1308, 1120, 1820, 983, 982, 1018, 553, 2672,
	163, 990, 991, 1027, 1026, 991, 2984, 1025, 1024, 168,
	1023, 575, 1141, 575, 575, 1022, 1016, 1021, 2431, 3003,
	1955, 970, 1020, 1015, 1442, 1028, 969, 969, 575, 575,
	967, 565, 1003, 3025, 163, 1205, 2296, 969, 2329, 1987,
	1205, 1002, 1562, 168, 1897, 797, 2248, 2251, 1943, 1558,
	1463, 3015, 1074, 1147, 1038, 2449, 1153, 2090, 2092, 1009,
	1105, 2233, 1437, 533, 1436, 535, 549, 37, 567, 1009,
	566, 539, 1435, 537, 541, 550, 542, 2223, 536, 565,
	547, 565, 1559, 538, 551, 552, 554, 557, 558, 559,
	555, 1044, 545, 568, 1939, 565, 1433, 1554, 531, 2880,
	2891, 565, 2204, 1091, 1552, 1097, 1098, 1099, 1100, 983,
	2671, 1166, 1163, 1164, 1165, 1170, 1172, 1169, 2264, 1168,
	2441, 526, 155, 2001, 1806, 1807, 2631, 1135, 1136, 1162,
	1206, 1207, 2236, 1208, 1209, 1210, 1211, 2207, 2611, 2246,
	1019, 1847, 2245, 1216, 1073, 1219, 2270, 1166, 1163, 1164,
	1165, 1170, 1172, 1169, 1462, 1168, 155, 1008, 983, 1017,
	2593, 2158, 1012, 1002, 1890, 1162, 2121, 1008, 116, 2076,
	1771, 1009, 1013, 1143, 1144, 2479, 2480, 703, 1352, 1276,
	703, 1086, 1205, 703, 1142, 1204, 2413, 1129, 2482, 779,
	1295, 1132, 1014, 1290, 111, 1212, 2907, 2254, 2903, 1009,
	81, 1030, 2253, 2667, 182, 2254, 2605, 1009, 575, 575,
	2253, 1535, 1534, 1536, 1537, 1538, 2833, 2091, 184, 185,
	186, 1118, 1660, 1571, 182, 1090, 1953, 2272, 86, 1555,
	1988, 1368, 3036, 1157, 86, 1309, 2288, 77, 86, 86,
	1156, 1312, 1681, 575, 1296, 1154, 1549, 182, 1550, 1311,
	2196, 1551, 575, 1315, 1155, 1009, 1104, 569, 575, 764,
	1229, 2956, 1230, 3013, 112, 2988, 3014, 1106, 3012, 1008,
	1233, 1083, 1080, 1092, 1176, 1002, 1005, 1006, 562, 969,
	806, 2749, 1938, 999, 1003, 1681, 2955, 2015, 1177, 2282,
	2281, 2280, 2274, 563, 2278, 2642, 2273, 1008, 2271, 1043,
	1640, 1936, 1661, 2276, 998, 1008, 2641, 1296, 1175, 1176,
	1012, 1002, 2275, 1313, 1641, 1642, 1639, 95, 1314, 1926,
	1013, 1472, 96, 1282, 1283, 1284, 1285, 1286, 1471, 2277,
	2279, 1199, 1200, 1202, 1201, 1203, 1204, 1302, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 1076,
	1177, 1461, 1934, 1008, 173, 174, 175, 176, 1018, 1002,
	1005, 1006, 1931, 969, 1119, 1089, 1572, 999, 1003, 2974,
	1016, 98, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 2972, 1299, 1630, 1632, 1633, 173, 174,
	175, 176, 2976, 2977, 1931, 1310, 761, 2928, 2999, 1935,
	2429, 2430, 763, 1333, 2873, 3026, 2632, 2973, 1363, 1631,
	1353, 3028, 2421, 1177, 182, 1993, 1994, 1995, 1426, 1174,
	2818, 1175, 1176, 1177, 1542, 1358, 1359, 1434, 2290, 1330,
	2817, 1933, 2843, 1328, 2808, 1079, 1328, 1085, 1540, 2929,
	1087, 2534, 1530, 1685, 2707, 2706, 2874, 1686, 575, 2649,
	1459, 810, 1177, 706, 707, 708, 1177, 2422, 1468, 184,
	185, 186, 1470, 2639, 2648, 575, 575, 2457, 575, 1341,
	575, 575, 2447, 575, 575, 575, 575, 575, 575, 1316,
	1177, 1174, 2424, 1175, 1176, 2181, 2006, 1541, 575, 3027,
	2180, 1894, 182, 1506, 1543, 2005, 2419, 1177, 1440, 1441,
	1528, 1539, 1527, 1469, 2428, 1529, 1328, 1526, 182, 184,
	185, 186, 1517, 2429, 2430, 2338, 2431, 801, 1511, 575,
	2420, 182, 1508, 1507, 184, 185, 186, 1482, 1501, 1502,
	2334, 3000, 1560, 2900, 1340, 575, 701, 182, 2532, 1328,
	1519, 2899, 1455, 1177, 1174, 2877, 1175, 1176, 2876, 2875,
	1710, 701, 2426, 182, 1174, 1448, 1175, 1176, 1509, 1510,
	182, 1177, 2071, 1328, 1515, 1516, 1812, 1813, 2502, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 575, 2052,
	1328, 2813, 1503, 1174, 1467, 1175, 1176, 1174, 2748, 1175,
	1176, 2746, 575, 575, 184, 185, 186, 1475, 2165, 1476,
	1432, 1478, 1480, 2703, 1466, 1484, 1486, 1488, 1490, 1492,
	182, 1174, 2646, 1175, 1176, 2638, 2190, 2428, 1465, 1465,
	1446, 1444, 1458, 184, 185, 186, 1337, 1907, 1174, 2431,
	1175, 1176, 2178, 1292, 1445, 1947, 1567, 1702, 1691, 1692,
	1693, 1694, 1704, 1695, 1696, 1697, 1709, 1705, 1698, 1699,
	1706, 1707, 1708, 1700, 1701, 1703, 1659, 1946, 1662, 1666,
	1665, 1665, 1803, 1785, 1663, 1663, 184, 185, 186, 1671,
	575, 1575, 1636, 1602, 1174, 1338, 1175, 1176, 1579, 1563,
	1581, 1582, 1583, 1584, 1568, 575, 575, 1588, 1504, 1531,
	1518, 1514, 1174, 1438, 1175, 1176, 986, 119, 1513, 1600,
	1328, 985, 1512, 1339, 1643, 1357, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1682,
	1130, 1146, 1577, 1755, 1644, 2840, 1634, 2839, 1573, 1574,
	92, 184, 185, 186, 2423, 1905, 1725, 1177, 1598, 2112,
	3019, 93, 1578, 2802, 1193, 2801, 1599, 2032, 2690, 1585,
	1586, 1587, 1606, 1607, 182, 1763, 2990, 1328, 2154, 575,
	2112, 2949, 1177, 2112, 2936, 692, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1202, 1201, 1203, 1204, 1637, 1756, 184,
	185, 186, 2604, 182, 2214, 1754, 575, 1790, 1774, 1791,
	2112, 2932, 2924, 1328, 1725, 1328, 182, 2112, 2893, 2408,
	575, 1177, 101, 2682, 2890, 182, 701, 182, 1987, 182,
	182, 575, 2193, 100, 575, 99, 183, 2551, 1328, 183,
	1328, 2155, 183, 94, 94, 575, 1765, 576, 2375, 183,
	2157, 1763, 1855, 1177, 1767, 1768, 1856, 183, 2604, 806,
	2112, 2809, 806, 2606, 95, 3001, 2682, 1328, 1173, 96,
	2112, 2680, 183, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1202, 1201, 1203, 1204, 95, 1931, 1328, 2902, 1174, 96,
	1175, 1176, 1375, 1764, 576, 2123, 1796, 576, 183, 576,
	575, 1328, 1328, 2044, 1822, 2112, 1900, 1901, 1902, 1177,
	101, 1904, 1906, 1174, 2131, 1175, 1176, 1865, 1866, 1867,
	1868, 100, 1765, 99, 2577, 575, 2609, 1328, 1173, 1328,
	2024, 575, 1468, 2037, 1328, 1468, 2888, 1468, 1177, 1851,
	1850, 1784, 1860, 1930, 1861, 1862, 1863, 1864, 2011, 2551,
	1833, 2123, 1174, 776, 1175, 1176, 2437, 1667, 2439, 2438,
	1871, 1872, 1873, 1874, 1673, 1674, 2131, 1920, 1798, 1817,
	1505, 2435, 2436, 575, 1854, 1659, 1881, 2435, 2434, 100,
	1659, 1659, 1887, 1815, 1174, 2108, 1175, 1176, 2131, 1328,
	1328, 1838, 1837, 2002, 1328, 1987, 2232, 1429, 2217, 1546,
	94, 1853, 2350, 1852, 1195, 1196, 1197, 1198, 1199, 1200,
	1202, 1201, 1203, 1204, 2210, 2211, 182, 2112, 2111, 1917,
	2010, 1766, 2604, 182, 1769, 1770, 1429, 1428, 182, 182,
	810, 1576, 182, 810, 182, 1374, 1373, 1839, 1580, 2130,
	1174, 182, 1175, 1176, 1882, 2002, 1932, 2002, 182, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1893, 2002, 1925, 1903,
	1895, 1928, 1795, 1929, 1892, 1877, 1878, 1940, 2037, 1174,
	2154, 1175, 1176, 2021, 182, 1010, 1177, 1882, 2020, 575,
	1924, 1927, 1923, 1177, 1931, 1914, 1011, 1177, 1617, 1193,
	1941, 1177, 1189, 2131, 1190, 1810, 1465, 1332, 1775, 1942,
	1193, 1614, 2263, 1931, 1944, 1945, 2980, 1177, 1191, 1192,
	1188, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1201,
	1203, 1204, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202,
	1201, 1203, 1204, 2155, 2504, 1557, 1950, 1360, 766, 993,
	992, 2651, 1987, 1636, 1197, 1198, 1199, 1200, 1202, 1201,
	1203, 1204, 2939, 87, 92, 2829, 1193, 2830, 2000, 1328,
	1177, 94, 1335, 1978, 1979, 93, 2806, 1177, 1981, 2799,
	2668, 2760, 2460, 2626, 1997, 1971, 1999, 1982, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204, 2553,
	1177, 2652, 2653, 2654, 1998, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1179, 2666, 1177, 1497, 2663, 1174, 2644, 1175,
	1176, 1177, 2543, 2542, 1174, 87, 1175, 1176, 1174, 1328,
	1175, 1176, 1174, 1177, 1175, 1176, 1431, 1177, 1880, 1985,
	2500, 2462, 2004, 2458, 2218, 1876, 1870, 1869, 1174, 1545,
	1175, 1176, 2549, 1460, 1177, 1456, 182, 1427, 1637, 2540,
	1177, 113, 2187, 1996, 182, 1498, 1499, 1500, 2096, 575,
	1665, 2186, 1075, 2655, 1663, 575, 2616, 2617, 1891, 1788,
	2082, 3043, 2539, 1177, 1814, 3041, 575, 2996, 2100, 2969,
	2619, 1604, 2454, 1818, 2453, 1821, 2094, 2182, 1617, 2452,
	2375, 1174, 2014, 1175, 1176, 2622, 2197, 1972, 1174, 182,
	1175, 1176, 2397, 182, 1494, 2069, 2986, 2398, 2187, 2061,
	2656, 2657, 183, 2621, 183, 2395, 2127, 183, 2164, 2394,
	2396, 1174, 2393, 1175, 1176, 2950, 2060, 37, 2030, 1177,
	1802, 1336, 2059, 2113, 1794, 1174, 2147, 1175, 1176, 1177,
	2610, 1765, 1174, 1605, 1175, 1176, 576, 2355, 576, 576,
	2354, 1495, 1496, 2872, 1174, 2058, 1175, 1176, 1174, 2739,
	1175, 1176, 575, 576, 576, 2597, 2399, 182, 2140, 2141,
	2600, 2109, 2741, 2596, 182, 1174, 2364, 1175, 1176, 1302,
	1556, 1174, 792, 1175, 1176, 2084, 575, 752, 1764, 2433,
	2146, 2175, 2176, 575, 1326, 1322, 2172, 1468, 1468, 2730,
	2191, 2729, 575, 1177, 1174, 2209, 1175, 1176, 2110, 1323,
	1677, 2057, 1040, 1039, 2229, 2120, 2168, 2514, 2105, 2189,
	2012, 2056, 2228, 2152, 1678, 182, 182, 182, 182, 182,
	2186, 2257, 2367, 2369, 1792, 1793, 1325, 2156, 1324, 1887,
	2159, 2370, 182, 182, 780, 92, 92, 2166, 1145, 2728,
	588, 2169, 781, 94, 101, 2602, 93, 93, 182, 2225,
	1174, 2224, 1175, 1176, 120, 100, 94, 99, 2179, 3023,
	1174, 2450, 1175, 1176, 1617, 1975, 94, 1659, 2889, 2188,
	2825, 1959, 786, 1812, 1813, 2055, 1969, 1970, 2432, 2227,
	1974, 2194, 2198, 2199, 2200, 2144, 1448, 1799, 1964, 1977,
	788, 789, 2582, 2353, 2073, 2074, 1980, 1991, 1177, 2864,
	2287, 2352, 99, 2863, 2747, 2745, 1665, 2744, 1665, 2737,
	1663, 1665, 1663, 2219, 2220, 1663, 1665, 2226, 2716, 2664,
	1663, 2601, 1983, 1177, 1174, 575, 1175, 1176, 101, 183,
	2335, 1177, 2339, 576, 576, 2599, 2463, 575, 100, 100,
	101, 99, 1177, 1915, 2266, 2308, 2590, 2308, 1443, 183,
	2308, 100, 2249, 787, 575, 2308, 2265, 2736, 2320, 2321,
	2322, 2323, 2123, 2310, 2720, 2344, 2108, 2337, 576, 182,
	2297, 2267, 183, 575, 2313, 2998, 2997, 576, 2022, 2314,
	2054, 1786, 575, 576, 2283, 2336, 1177, 2340, 1354, 575,
	575, 2284, 182, 182, 182, 182, 182, 1345, 106, 107,
	2301, 2998, 2878, 2637, 182, 2053, 778, 2372, 103, 182,
	2344, 88, 182, 2047, 182, 1177, 1, 182, 182, 182,
	2381, 2387, 2255, 2971, 2046, 2256, 768, 544, 2378, 1174,
	1776, 1175, 1176, 2378, 1300, 2407, 2315, 2316, 2317, 2318,
	2319, 2343, 2967, 1177, 2358, 1532, 1315, 2147, 1177, 1522,
	2345, 2693, 2448, 1726, 1174, 2357, 1175, 1176, 182, 2826,
	2468, 2466, 1174, 1921, 1175, 1176, 2356, 2662, 2045, 1885,
	1001, 575, 145, 1174, 2359, 1175, 1176, 1848, 1849, 575,
	769, 2331, 2332, 2333, 182, 2349, 2945, 110, 962, 2409,
	2389, 2390, 2410, 2392, 182, 770, 2400, 2042, 2484, 109,
	2404, 2405, 2388, 2473, 1004, 2391, 95, 2445, 2446, 182,
	2411, 96, 182, 2346, 2347, 2348, 2465, 1174, 1567, 1175,
	1176, 2386, 2515, 1177, 2417, 2041, 1103, 1326, 1322, 1916,
	2040, 2683, 2444, 2173, 2443, 1857, 2470, 2469, 2467, 183,
	1380, 2491, 1323, 1378, 1379, 1377, 1174, 1382, 1175, 1176,
	1177, 2151, 1381, 2492, 2023, 1608, 572, 2143, 180, 1369,
	1346, 1887, 1041, 2483, 2495, 2464, 534, 1319, 1320, 1325,
	2440, 1324, 1948, 576, 1174, 540, 1175, 1176, 1217, 1174,
	1603, 1175, 1176, 2351, 2160, 575, 2548, 2510, 1177, 807,
	576, 576, 800, 576, 2509, 576, 576, 1787, 576, 576,
	576, 576, 576, 576, 2098, 2038, 2383, 2518, 2594, 2363,
	2365, 575, 182, 576, 2115, 2195, 2524, 183, 2368, 2517,
	2361, 2521, 2522, 2871, 2523, 2738, 2937, 2525, 2170, 2527,
	1342, 2529, 2034, 183, 2013, 2512, 2513, 1679, 1827, 1629,
	597, 596, 594, 2101, 576, 2124, 183, 1180, 695, 2088,
	1355, 2135, 2133, 2132, 1174, 1973, 1175, 1176, 1834, 2618,
	576, 2614, 183, 3033, 2963, 1829, 1825, 2107, 605, 182,
	2033, 598, 590, 2240, 2241, 2242, 2243, 2244, 183, 2578,
	2579, 1174, 2634, 1175, 1176, 183, 2490, 2640, 2583, 2584,
	1617, 2250, 182, 2591, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 576, 2598, 2588, 2258, 2235, 2623, 2501,
	182, 2603, 2237, 182, 182, 182, 2171, 576, 576, 1174,
	2497, 1175, 1176, 575, 575, 2620, 2136, 2139, 2140, 2141,
	2137, 1158, 2138, 2142, 1318, 183, 2613, 2491, 2627, 584,
	974, 2569, 2669, 2670, 2628, 1676, 2831, 2635, 2895, 2492,
	1990, 2636, 2575, 2536, 2645, 1317, 2647, 1689, 2629, 2630,
	1690, 2455, 1178, 2215, 1908, 575, 575, 575, 575, 2136,
	2139, 2140, 2141, 2137, 63, 2138, 2142, 41, 665, 2616,
	2617, 662, 2718, 2719, 2327, 2328, 2565, 2846, 661, 2914,
	1225, 2847, 1717, 579, 2982, 576, 2673, 1149, 794, 32,
	2677, 2678, 2679, 2689, 31, 30, 29, 28, 23, 22,
	576, 576, 21, 1665, 666, 1665, 20, 1663, 19, 1663,
	25, 2702, 2687, 2688, 18, 17, 16, 2476, 2993, 3022,
	115, 50, 47, 45, 122, 121, 48, 44, 1078, 42,
	27, 26, 2699, 2698, 15, 14, 182, 13, 12, 11,
	10, 9, 2308, 5, 2308, 2715, 4, 35, 34, 33,
	1152, 24, 2, 2472, 2471, 2202, 1910, 0, 2710, 2733,
	575, 0, 575, 0, 0, 588, 574, 0, 2711, 183,
	2714, 0, 0, 0, 576, 0, 2721, 2722, 2762, 0,
	1665, 0, 0, 0, 1663, 2754, 0, 0, 0, 0,
	2381, 2758, 2756, 2742, 2381, 2743, 37, 2378, 183, 2750,
	2734, 576, 0, 0, 0, 2752, 2451, 0, 0, 0,
	0, 183, 0, 808, 0, 576, 966, 575, 973, 0,
	183, 0, 183, 0, 183, 183, 576, 0, 0, 576,
	182, 0, 2487, 0, 0, 2766, 2807, 0, 0, 0,
	576, 0, 2496, 575, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 2803, 2811, 2508, 2805, 2804,
	2511, 0, 2819, 0, 0, 0, 2763, 2764, 0, 0,
	0, 2828, 2820, 2821, 0, 0, 0, 0, 575, 0,
	0, 0, 575, 575, 0, 2814, 2815, 2816, 0, 0,
	0, 0, 2844, 0, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 2851, 0, 2850, 0, 2854, 2855,
	2856, 575, 2857, 2858, 2868, 0, 2865, 2866, 0, 2867,
	576, 0, 0, 0, 0, 0, 576, 2870, 0, 0,
	2882, 0, 0, 2881, 0, 2879, 0, 2381, 0, 0,
	0, 2885, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2587, 0, 0, 0, 0, 182, 0, 0, 576, 2887,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	575, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2894, 0, 0, 2898, 0, 2904,
	0, 0, 2901, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 37, 0, 0, 0, 0, 183, 0,
	2911, 0, 0, 183, 183, 0, 0, 183, 0, 183,
	0, 575, 0, 0, 0, 0, 183, 0, 0, 0,
	2643, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 575, 0, 0, 0, 2658, 2930,
	2935, 2659, 2660, 2661, 2940, 0, 2938, 0, 0, 183,
	0, 2378, 0, 2944, 576, 575, 0, 37, 0, 0,
	2954, 2828, 2946, 2953, 182, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2978, 2970, 2975, 2962, 0, 0,
	0, 0, 0, 0, 2985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2992, 2995,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 0, 3010, 3004, 1665, 0, 0,
	3002, 1663, 3009, 1569, 3007, 3006, 2918, 3016, 0, 2919,
	2920, 2921, 2922, 2923, 0, 0, 0, 3024, 0, 0,
	0, 0, 0, 0, 0, 3029, 0, 0, 0, 0,
	0, 0, 0, 3032, 0, 1665, 3040, 0, 3039, 1663,
	3042, 0, 1665, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 808, 0, 808, 808, 0,
	0, 576, 0, 0, 0, 0, 0, 1669, 1670, 0,
	0, 0, 1148, 1150, 0, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 183, 0,
	1711, 1712, 1713, 1714, 1715, 1716, 1718, 1722, 1723, 588,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 0, 1753, 0, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 588, 183, 0, 0, 0, 0, 588, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 1808, 1809, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 183, 183, 183, 183, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 183, 183, 2905,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2208, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 1307, 120, 0, 142, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 1447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 120, 0, 142, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 162, 0, 808, 0, 152, 0,
	0, 0, 1370, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 159, 152, 160, 0, 0, 0,
	141, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1451, 1452, 151, 150, 177, 0, 0, 576,
	0, 159, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 576, 1451,
	1452, 151, 150, 177, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 576, 576, 0, 183, 183, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 183, 0, 0, 183, 0, 183,
	0, 0, 183, 183, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 1453, 153, 0, 1450, 0, 147, 148,
	0, 0, 0, 183, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 576, 0, 0, 146,
	1453, 153, 0, 1450, 576, 147, 148, 0, 0, 183,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 183,
	168, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 1293, 0, 183, 0, 1474,
	1474, 0, 1474, 0, 1474, 1474, 0, 1483, 1474, 1474,
	1474, 1474, 1474, 0, 0, 0, 0, 0, 0, 0,
	1293, 1293, 966, 0, 2016, 1329, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 0, 0, 155, 0, 0, 1564,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 576, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 143, 183, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 183, 183,
	183, 0, 0, 143, 1672, 0, 144, 0, 576, 576,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 1687,
	1688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 576, 576, 576, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 1789, 0, 0, 0, 0, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	1801, 0, 0, 0, 0, 173, 174, 175, 176, 0,
	0, 183, 0, 0, 1350, 2262, 0, 808, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 808, 0,
	0, 0, 0, 2285, 2286, 576, 0, 576, 2289, 966,
	0, 0, 0, 2291, 2292, 2293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2298, 2299, 2300, 0, 0,
	1729, 2302, 0, 2303, 2304, 0, 0, 0, 2311, 2312,
	0, 0, 0, 0, 0, 0, 1729, 1729, 1729, 1729,
	1729, 588, 588, 588, 588, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 966,
	0, 0, 0, 0, 0, 973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2373, 0, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 576, 576, 0,
	0, 0, 0, 0, 1683, 0, 0, 966, 1684, 0,
	0, 0, 0, 2406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 2461,
	0, 0, 1329, 1773, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 1984, 0, 78, 39, 40, 80, 0,
	704, 705, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 43,
	69, 70, 0, 67, 71, 0, 576, 0, 0, 0,
	0, 0, 68, 2538, 0, 0, 0, 0, 0, 0,
	2544, 0, 0, 0, 0, 0, 0, 0, 576, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 87, 0, 0, 0, 0, 0, 0, 183,
	576, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 0, 667, 0, 588, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 181, 0, 0, 530, 0, 2102,
	570, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	2117, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 2665, 0, 0, 0, 46, 49, 52, 51, 54,
	775, 66, 0, 0, 75, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 793, 0, 793, 0,
	0, 0, 2686, 0, 0, 0, 530, 55, 83, 82,
	0, 0, 64, 65, 53, 0, 0, 0, 0, 0,
	73, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2700, 2192, 2701, 0, 0,
	0, 0, 2704, 2705, 0, 0, 57, 58, 0, 59,
	60, 61, 62, 0, 0, 0, 2712, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 2221, 0, 0, 0,
	2724, 0, 0, 2003, 0, 0, 0, 2007, 0, 2008,
	2009, 0, 0, 0, 0, 0, 0, 0, 2017, 0,
	0, 2018, 2019, 0, 0, 0, 0, 0, 2751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2759,
	0, 0, 2761, 0, 0, 0, 0, 0, 2025, 2026,
	2027, 2028, 2029, 0, 2031, 0, 2765, 0, 0, 0,
	2035, 0, 2036, 0, 0, 0, 2039, 2800, 0, 0,
	0, 0, 0, 0, 2048, 2049, 2050, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 2065,
	2066, 2067, 2068, 0, 2070, 2072, 81, 0, 0, 0,
	0, 0, 2077, 2078, 2079, 2080, 2081, 1293, 1797, 1293,
	2083, 0, 1293, 0, 0, 0, 0, 1293, 0, 0,
	2095, 0, 0, 0, 0, 0, 0, 0, 0, 2325,
	86, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 2869,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2360, 0, 0,
	0, 0, 0, 178, 0, 0, 808, 0, 0, 0,
	1293, 0, 0, 2385, 1474, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2910, 0, 0, 0,
	2915, 0, 0, 0, 0, 966, 0, 159, 1293, 160,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 130, 151, 150, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 530, 0, 0, 530, 2915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	0, 0, 2979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2566,
	0, 0, 0, 0, 0, 146, 127, 153, 134, 126,
	0, 147, 148, 0, 0, 0, 0, 163, 0, 2341,
	2342, 2915, 0, 0, 0, 2360, 168, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 136, 131, 132, 133, 137, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2402, 2403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1801, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2694,
	2695, 2696, 2697, 0, 0, 0, 0, 775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2516, 0,
	530, 0, 0, 0, 0, 2520, 149, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 1293, 0, 0, 2530,
	2531, 2533, 2535, 0, 0, 0, 0, 0, 0, 2541,
	0, 0, 0, 0, 2545, 2546, 2547, 0, 0, 143,
	0, 2550, 144, 0, 0, 0, 0, 2552, 0, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1293,
	2572, 2573, 2574, 0, 2755, 0, 2757, 0, 0, 2580,
	0, 0, 0, 0, 0, 2585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2607, 2608,
	0, 0, 2612, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	2624, 2625, 0, 0, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 0, 808, 0, 0,
	0, 173, 174, 175, 176, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2861, 0, 0, 0, 2861, 2861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 2681, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	1294, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 702, 79, 0,
	2708, 0, 0, 0, 2709, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 2713, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 2723, 530, 2725, 2726, 0, 0, 0, 0,
	0, 0, 1589, 1590, 530, 530, 530, 530, 530, 530,
	530, 0, 0, 0, 0, 0, 0, 2991, 0, 0,
	0, 0, 0, 1293, 0, 2931, 0, 1397, 0, 0,
	0, 0, 0, 0, 0, 765, 0, 79, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 808, 808, 0,
	0, 0, 0, 0, 0, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 793, 0, 0,
	0, 0, 2824, 0, 793, 793, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 2834, 2835, 2836, 0,
	2837, 2838, 0, 0, 0, 1801, 2841, 0, 2842, 0,
	0, 0, 0, 0, 0, 2965, 0, 0, 0, 0,
	0, 0, 0, 2860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	1566, 793, 793, 793, 793, 793, 0, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2886, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 1566, 0, 530, 0,
	530, 0, 530, 1836, 0, 0, 0, 2906, 1398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2925, 0, 0, 0, 0,
	0, 2926, 2927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2933,
	0, 0, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 0,
	1420, 1421, 1422, 1423, 1424, 1399, 1400, 1401, 1402, 1383,
	1384, 1412, 0, 1386, 0, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 0, 0, 1396, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2768, 2770,
	2769, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 530, 530, 0, 0, 530, 0, 1976, 0, 0,
	0, 0, 0, 0, 530, 0, 1413, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1138, 0,
	1138, 1138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	793, 0, 0, 0, 765, 1213, 1214, 1215, 0, 1218,
	0, 1220, 1221, 1222, 1223, 0, 1226, 1228, 1228, 0,
	1228, 1232, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 0, 1277, 1278, 1279, 1280,
	1281, 0, 0, 2774, 2775, 1232, 1232, 1232, 1232, 1232,
	0, 0, 0, 0, 793, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 530,
	0, 1298, 1397, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 677, 0, 622, 681, 624, 678, 679,
	0, 620, 623, 680, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 1304, 0, 0, 530, 0, 0, 765,
	0, 0, 0, 765, 0, 0, 0, 0, 0, 765,
	625, 626, 2767, 2771, 2772, 2773, 2776, 2777, 2778, 2786,
	2788, 650, 2787, 2789, 2790, 2791, 2794, 2795, 2796, 2797,
	2792, 2793, 2798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 682, 0, 683, 0, 0, 687,
	0, 0, 0, 689, 688, 0, 690, 664, 663, 0,
	530, 684, 685, 0, 686, 0, 0, 2201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 530,
	530, 530, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1398, 0, 0, 793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 1294, 0,
	0, 1294, 0, 0, 0, 0, 1294, 1411, 1414, 1415,
	1416, 1417, 1418, 1419, 0, 1420, 1421, 1422, 1423, 1424,
	1399, 1400, 1401, 1402, 1383, 1384, 1412, 0, 1386, 793,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 0,
	0, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	0, 0, 0, 0, 1294, 530, 530, 530, 530, 530,
	0, 0, 0, 0, 0, 0, 0, 2401, 0, 0,
	0, 0, 530, 0, 0, 1520, 0, 530, 0, 0,
	530, 2412, 1566, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 696, 704, 705, 706, 707, 708,
	697, 699, 0, 0, 0, 698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 709,
	710, 530, 0, 0, 0, 1138, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 1294, 0, 1138,
	1138, 2097, 0, 0, 704, 705, 0, 530, 0, 0,
	1664, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 2493, 2494, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 530, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 530, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 1828, 701, 709, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 530, 530, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 677, 2493, 2494, 681, 0, 678, 679, 0,
	0, 0, 680, 0, 0, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2128, 2129, 0,
	0, 0, 0, 0, 0, 0, 2148, 0, 2149, 2150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2382, 0, 79, 0, 0, 1828,
	1828, 1828, 1828, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2148, 765, 0, 0,
	0, 1828, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2727,
	0, 2731, 2732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2382, 0, 79, 0, 2382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 353, 0, 0, 944,
	929, 450, 0, 873, 947, 842, 861, 957, 864, 867,
	909, 821, 887, 371, 858, 813, 846, 816, 853, 817,
	844, 875, 245, 841, 931, 891, 946, 326, 242, 823,
	847, 385, 863, 193, 911, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 953,
	330, 897, 2934, 435, 356, 0, 0, 79, 877, 935,
	885, 923, 872, 910, 831, 896, 948, 859, 906, 949,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 2947, 0, 2948, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 855, 903, 943, 856,
	905, 240, 286, 247, 239, 454, 954, 934, 820, 884,
	942, 0, 0, 209, 945, 879, 0, 908, 0, 960,
	815, 899, 0, 818, 822, 956, 938, 850, 250, 0,
	0, 0, 0, 0, 0, 0, 876, 886, 920, 870,
	0, 0, 0, 0, 0, 0, 0, 848, 0, 895,
	0, 0, 0, 827, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	830, 0, 849, 921, 0, 812, 269, 824, 357, 232,
	0, 927, 937, 871, 488, 941, 869, 868, 915, 828,
	933, 862, 325, 826, 294, 188, 205, 0, 860, 367,
	408, 414, 932, 845, 854, 230, 852, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 894, 913, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 1140,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 840, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 928, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 918, 959, 380, 413, 219, 474,
	434, 835, 839, 833, 900, 834, 889, 890, 836, 950,
	951, 952, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 922, 829, 0, 837, 838, 0, 930, 939, 940,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 893, 187, 202, 328, 955, 402, 262, 503, 482,
	478, 814, 832, 237, 843, 851, 0, 857, 865, 866,
	878, 880, 881, 882, 883, 901, 902, 904, 912, 914,
	917, 919, 924, 936, 958, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 892, 898, 339, 255,
	274, 285, 907, 481, 439, 207, 409, 263, 228, 925,
	926, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 888, 916, 335, 451, 452,
	281, 353, 0, 0, 944, 929, 450, 0, 873, 947,
	842, 861, 957, 864, 867, 909, 821, 887, 371, 858,
	813, 846, 816, 853, 817, 844, 875, 245, 841, 931,
	891, 946, 326, 242, 823, 847, 385, 863, 193, 911,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 953, 330, 897, 0, 435, 356,
	0, 0, 0, 877, 935, 885, 923, 872, 910, 831,
	896, 948, 859, 906, 949, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 855, 903, 943, 856, 905, 240, 286, 247, 239,
	454, 954, 934, 820, 884, 942, 0, 0, 209, 945,
	879, 0, 908, 0, 960, 815, 899, 0, 818, 822,
	956, 938, 850, 250, 0, 0, 0, 0, 0, 0,
	0, 876, 886, 920, 870, 0, 0, 0, 0, 0,
	2413, 0, 848, 0, 895, 0, 0, 0, 827, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 830, 0, 849, 921, 0,
	812, 269, 824, 357, 232, 0, 927, 937, 871, 488,
	941, 869, 868, 915, 828, 933, 862, 325, 826, 294,
	188, 205, 0, 860, 367, 408, 414, 932, 845, 854,
	230, 852, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 894, 913, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 1140, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 840, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 928, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 918,
	959, 380, 413, 219, 474, 434, 835, 839, 833, 900,
	834, 889, 890, 836, 950, 951, 952, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 922, 829, 0, 837,
	838, 0, 930, 939, 940, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 893, 187, 202, 328,
	955, 402, 262, 503, 482, 478, 814, 832, 237, 843,
	851, 0, 857, 865, 866, 878, 880, 881, 882, 883,
	901, 902, 904, 912, 914, 917, 919, 924, 936, 958,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 892, 898, 339, 255, 274, 285, 907, 481, 439,
	207, 409, 263, 228, 925, 926, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	888, 916, 335, 451, 452, 281, 353, 0, 0, 944,
	929, 450, 0, 873, 947, 842, 861, 957, 864, 867,
	909, 821, 887, 371, 858, 813, 846, 816, 853, 817,
	844, 875, 245, 841, 931, 891, 946, 326, 242, 823,
	847, 385, 863, 193, 911, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 953,
	330, 897, 0, 435, 356, 0, 0, 0, 877, 935,
	885, 923, 872, 910, 831, 896, 948, 859, 906, 949,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 855, 903, 943, 856,
	905, 240, 286, 247, 239, 454, 954, 934, 820, 884,
	942, 0, 0, 209, 945, 879, 0, 908, 0, 960,
	815, 899, 0, 818, 822, 956, 938, 850, 250, 0,
	0, 0, 0, 0, 0, 0, 876, 886, 920, 870,
	0, 0, 0, 0, 0, 2371, 0, 848, 0, 895,
	0, 0, 0, 827, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	830, 0, 849, 921, 0, 812, 269, 824, 357, 232,
	0, 927, 937, 871, 488, 941, 869, 868, 915, 828,
	933, 862, 325, 826, 294, 188, 205, 0, 860, 367,
	408, 414, 932, 845, 854, 230, 852, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 894, 913, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 1140,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 840, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 928, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 918, 959, 380, 413, 219, 474,
	434, 835, 839, 833, 900, 834, 889, 890, 836, 950,
	951, 952, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 922, 829, 0, 837, 838, 0, 930, 939, 940,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 893, 187, 202, 328, 955, 402, 262, 503, 482,
	478, 814, 832, 237, 843, 851, 0, 857, 865, 866,
	878, 880, 881, 882, 883, 901, 902, 904, 912, 914,
	917, 919, 924, 936, 958, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 892, 898, 339, 255,
	274, 285, 907, 481, 439, 207, 409, 263, 228, 925,
	926, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 888, 916, 335, 451, 452,
	281, 353, 0, 0, 944, 929, 450, 0, 873, 947,
	842, 861, 957, 864, 867, 909, 821, 887, 371, 858,
	813, 846, 816, 853, 817, 844, 875, 245, 841, 931,
	891, 946, 326, 242, 823, 847, 385, 863, 193, 911,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 953, 330, 897, 0, 435, 356,
	0, 0, 0, 877, 935, 885, 923, 872, 910, 831,
	896, 948, 859, 906, 949, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 855, 903, 943, 856, 905, 240, 286, 247, 239,
	454, 954, 934, 820, 884, 942, 0, 0, 209, 945,
	879, 0, 908, 0, 960, 815, 899, 0, 818, 822,
	956, 938, 850, 250, 0, 0, 0, 0, 0, 0,
	0, 876, 886, 920, 870, 0, 0, 0, 0, 0,
	1816, 0, 848, 0, 895, 0, 0, 0, 827, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 830, 0, 849, 921, 0,
	812, 269, 824, 357, 232, 0, 927, 937, 871, 488,
	941, 869, 868, 915, 828, 933, 862, 325, 826, 294,
	188, 205, 0, 860, 367, 408, 414, 932, 845, 854,
	230, 852, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 894, 913, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 1140, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 840, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 928, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 918,
	959, 380, 413, 219, 474, 434, 835, 839, 833, 900,
	834, 889, 890, 836, 950, 951, 952, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 922, 829, 0, 837,
	838, 0, 930, 939, 940, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 893, 187, 202, 328,
	955, 402, 262, 503, 482, 478, 814, 832, 237, 843,
	851, 0, 857, 865, 866, 878, 880, 881, 882, 883,
	901, 902, 904, 912, 914, 917, 919, 924, 936, 958,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 892, 898, 339, 255, 274, 285, 907, 481, 439,
	207, 409, 263, 228, 925, 926, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	888, 916, 335, 451, 452, 281, 353, 0, 0, 944,
	929, 450, 0, 873, 947, 842, 861, 957, 864, 867,
	909, 821, 887, 371, 858, 813, 846, 816, 853, 817,
	844, 875, 245, 841, 931, 891, 946, 326, 242, 823,
	847, 385, 863, 193, 911, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 953,
	330, 897, 0, 435, 356, 0, 0, 0, 877, 935,
	885, 923, 872, 910, 831, 896, 948, 859, 906, 949,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 855, 903, 943, 856,
	905, 240, 286, 247, 239, 454, 954, 934, 820, 884,
	942, 0, 0, 209, 945, 879, 0, 908, 0, 960,
	815, 899, 0, 818, 822, 956, 938, 850, 250, 0,
	0, 0, 0, 0, 0, 0, 876, 886, 920, 870,
	0, 0, 0, 0, 0, 0, 0, 848, 0, 895,
	0, 0, 0, 827, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	830, 0, 849, 921, 0, 812, 269, 824, 357, 232,
	0, 927, 937, 871, 488, 941, 869, 868, 915, 828,
	933, 862, 325, 826, 294, 188, 205, 0, 860, 367,
	408, 414, 932, 845, 854, 230, 852, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 894, 913, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 1140,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 840, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 928, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 918, 959, 380, 413, 219, 474,
	434, 835, 839, 833, 900, 834, 889, 890, 836, 950,
	951, 952, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 922, 829, 0, 837, 838, 0, 930, 939, 940,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 893, 187, 202, 328, 955, 402, 262, 503, 482,
	478, 814, 832, 237, 843, 851, 0, 857, 865, 866,
	878, 880, 881, 882, 883, 901, 902, 904, 912, 914,
	917, 919, 924, 936, 958, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 892, 898, 339, 255,
	274, 285, 907, 481, 439, 207, 409, 263, 228, 925,
	926, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 888, 916, 335, 451, 452,
	281, 353, 0, 0, 944, 929, 450, 0, 873, 947,
	842, 861, 957, 864, 867, 909, 821, 887, 371, 858,
	813, 846, 816, 853, 817, 844, 875, 245, 841, 931,
	891, 946, 326, 242, 823, 847, 385, 863, 193, 911,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 953, 330, 897, 0, 435, 356,
	0, 0, 0, 877, 935, 885, 923, 872, 910, 831,
	896, 948, 859, 906, 949, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 855, 903, 943, 856, 905, 240, 286, 247, 239,
	454, 954, 934, 820, 884, 942, 0, 0, 209, 945,
	879, 0, 908, 0, 960, 815, 899, 0, 818, 822,
	956, 938, 850, 250, 0, 0, 0, 0, 0, 0,
	0, 876, 886, 920, 870, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 895, 0, 0, 0, 827, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 830, 0, 849, 921, 0,
	812, 269, 824, 357, 232, 0, 927, 937, 871, 488,
	941, 869, 868, 915, 828, 933, 862, 325, 826, 294,
	188, 205, 0, 860, 367, 408, 414, 932, 845, 854,
	230, 852, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 894, 913, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 1140, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 840, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 928, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 918,
	959, 380, 413, 219, 474, 434, 835, 839, 833, 900,
	834, 889, 890, 836, 950, 951, 952, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 922, 829, 0, 837,
	838, 0, 930, 939, 940, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 893, 187, 202, 328,
	955, 402, 262, 503, 482, 478, 814, 832, 237, 843,
	851, 0, 857, 865, 866, 878, 880, 881, 882, 883,
	901, 902, 904, 912, 914, 917, 919, 924, 936, 958,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 892, 898, 339, 255, 274, 285, 907, 481, 439,
	207, 409, 263, 228, 925, 926, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	888, 916, 335, 451, 452, 281, 353, 0, 0, 944,
	929, 450, 0, 873, 947, 842, 861, 957, 864, 867,
	909, 821, 887, 371, 858, 813, 846, 816, 853, 817,
	844, 875, 245, 841, 931, 891, 946, 326, 242, 823,
	847, 385, 863, 193, 911, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 953,
	330, 897, 0, 435, 356, 0, 0, 0, 877, 935,
	885, 923, 872, 910, 831, 896, 948, 859, 906, 949,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 855, 903, 943, 856,
	905, 240, 286, 247, 239, 454, 954, 934, 820, 884,
	942, 0, 0, 961, 945, 879, 0, 908, 0, 960,
	815, 899, 0, 818, 822, 956, 938, 850, 250, 0,
	0, 0, 0, 0, 0, 0, 876, 886, 920, 870,
	0, 0, 0, 0, 0, 0, 0, 848, 0, 895,
	0, 0, 0, 827, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	830, 0, 849, 921, 0, 812, 269, 824, 357, 232,
	0, 927, 937, 871, 488, 941, 869, 868, 915, 828,
	933, 862, 325, 826, 294, 188, 205, 0, 860, 367,
	408, 414, 932, 845, 854, 230, 852, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 894, 913, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 825,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 840, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 928, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 811,
	805, 804, 295, 332, 918, 959, 380, 413, 219, 474,
	434, 835, 839, 833, 900, 834, 889, 890, 836, 950,
	951, 952, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 922, 829, 0, 837, 838, 0, 930, 939, 940,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 893, 187, 202, 328, 955, 402, 262, 503, 482,
	478, 814, 832, 237, 843, 851, 0, 857, 865, 866,
	878, 880, 881, 882, 883, 901, 902, 904, 912, 914,
	917, 919, 924, 936, 958, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 892, 898, 339, 255,
	274, 285, 907, 481, 439, 207, 409, 263, 228, 925,
	926, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 888, 916, 335, 451, 452,
	281, 353, 0, 0, 944, 929, 450, 0, 873, 947,
	842, 861, 957, 864, 867, 909, 821, 887, 371, 858,
	813, 846, 816, 853, 817, 844, 875, 245, 841, 931,
	891, 946, 326, 242, 823, 847, 385, 863, 193, 911,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 953, 330, 897, 0, 435, 356,
	0, 0, 0, 877, 935, 885, 923, 872, 910, 831,
	896, 948, 859, 906, 949, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 855, 903, 943, 856, 905, 240, 286, 247, 239,
	454, 954, 934, 820, 884, 942, 0, 0, 961, 945,
	879, 0, 908, 0, 960, 815, 899, 0, 818, 822,
	956, 938, 850, 250, 0, 0, 0, 0, 0, 0,
	0, 876, 886, 920, 870, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 895, 0, 0, 0, 827, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 830, 0, 849, 921, 0,
	812, 269, 824, 357, 232, 0, 927, 937, 871, 488,
	941, 869, 868, 915, 828, 933, 862, 325, 826, 294,
	188, 205, 0, 860, 367, 408, 414, 932, 845, 854,
	230, 852, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 894, 913, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 1361, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 825, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 840, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 928, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 811, 805, 804, 295, 332, 918,
	959, 380, 413, 219, 474, 434, 835, 839, 833, 900,
	834, 889, 890, 836, 950, 951, 952, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 922, 829, 0, 837,
	838, 0, 930, 939, 940, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 893, 187, 202, 328,
	955, 402, 262, 503, 482, 478, 814, 832, 237, 843,
	851, 0, 857, 865, 866, 878, 880, 881, 882, 883,
	901, 902, 904, 912, 914, 917, 919, 924, 936, 958,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 892, 898, 339, 255, 274, 285, 907, 481, 439,
	207, 409, 263, 228, 925, 926, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	888, 916, 335, 451, 452, 281, 353, 0, 0, 944,
	929, 450, 0, 873, 947, 842, 861, 957, 864, 867,
	909, 821, 887, 371, 858, 813, 846, 816, 853, 817,
	844, 875, 245, 841, 931, 891, 946, 326, 242, 823,
	847, 385, 863, 193, 911, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 953,
	330, 897, 0, 435, 356, 0, 0, 0, 877, 935,
	885, 923, 872, 910, 831, 896, 948, 859, 906, 949,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 855, 903, 943, 856,
	905, 240, 286, 247, 239, 454, 954, 934, 820, 884,
	942, 0, 0, 961, 945, 879, 0, 908, 0, 960,
	815, 899, 0, 818, 822, 956, 938, 850, 250, 0,
	0, 0, 0, 0, 0, 0, 876, 886, 920, 870,
	0, 0, 0, 0, 0, 0, 0, 848, 0, 895,
	0, 0, 0, 827, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	830, 0, 849, 921, 0, 812, 269, 824, 357, 232,
	0, 927, 937, 871, 488, 941, 869, 868, 915, 828,
	933, 862, 325, 826, 294, 188, 205, 0, 860, 367,
	408, 414, 932, 845, 854, 230, 852, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 894, 913, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 802, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 825,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 840, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 928, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 811,
	805, 804, 295, 332, 918, 959, 380, 413, 219, 474,
	434, 835, 839, 833, 900, 834, 889, 890, 836, 950,
	951, 952, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 922, 829, 0, 837, 838, 0, 930, 939, 940,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 893, 187, 202, 328, 955, 402, 262, 503, 482,
	478, 814, 832, 237, 843, 851, 0, 857, 865, 866,
	878, 880, 881, 882, 883, 901, 902, 904, 912, 914,
	917, 919, 924, 936, 958, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 892, 898, 339, 255,
	274, 285, 907, 481, 439, 207, 409, 263, 228, 925,
	926, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 888, 916, 335, 451, 452,
	281, 353, 0, 0, 0, 0, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 1760, 0, 606, 0, 0, 0, 245, 611, 0,
	0, 0, 326, 242, 0, 1761, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 618, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 87, 0, 0, 184, 185, 186, 696, 704,
	705, 706, 707, 708, 697, 699, 0, 0, 217, 698,
	224, 629, 631, 630, 640, 641, 642, 643, 644, 645,
	646, 627, 701, 709, 710, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 589, 603, 0, 617,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	791, 0, 0, 0, 671, 0, 602, 0, 0, 610,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 670, 0, 0, 488,
	0, 0, 668, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 635, 636, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 677, 669, 622, 681,
	624, 678, 679, 619, 620, 623, 680, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 672, 609, 608, 0,
	615, 616, 0, 625, 626, 628, 632, 633, 634, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 607, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 682, 237, 683,
	0, 0, 687, 0, 0, 0, 689, 688, 0, 690,
	664, 663, 0, 0, 684, 685, 0, 686, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 703, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 606, 0, 0, 0, 245, 611, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 618, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 87, 0, 0, 184, 185, 186, 696, 704,
	705, 706, 707, 708, 697, 699, 0, 0, 217, 698,
	224, 629, 631, 630, 640, 641, 642, 643, 644, 645,
	646, 627, 701, 709, 710, 0, 240, 286, 247, 239,
	454, 0, 0, 1719, 1720, 1721, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 589, 603, 0, 617,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	0, 0, 0, 0, 671, 0, 602, 0, 0, 610,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 670, 0, 0, 488,
	0, 0, 668, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 635, 636, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 677, 669, 622, 681,
	624, 678, 679, 619, 620, 623, 680, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 672, 609, 608, 0,
	615, 616, 0, 625, 626, 628, 632, 633, 634, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 607, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 682, 237, 683,
	0, 0, 687, 0, 0, 0, 689, 688, 0, 690,
	664, 663, 0, 0, 684, 685, 0, 686, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 703, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 606, 0, 0, 0, 245, 611, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 618, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 0, 0, 1843, 0, 288, 226, 192, 368, 436,
	260, 0, 87, 0, 0, 184, 185, 186, 696, 704,
	705, 706, 707, 708, 697, 699, 0, 0, 217, 698,
	224, 629, 631, 630, 640, 641, 642, 643, 644, 645,
	646, 627, 701, 709, 710, 1844, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 589, 603, 0, 617,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	0, 0, 0, 0, 671, 0, 602, 0, 0, 610,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 670, 0, 0, 488,
	0, 0, 668, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 635, 636, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 677, 669, 622, 681,
	624, 678, 679, 619, 620, 623, 680, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 672, 609, 608, 0,
	615, 616, 0, 625, 626, 628, 632, 633, 634, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 607, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 682, 237, 683,
	0, 0, 687, 0, 0, 0, 689, 688, 0, 690,
	664, 663, 0, 0, 684, 685, 0, 686, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 703, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 0, 335, 451, 452, 281, 353, 0, 0, 0,
	78, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 86, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 2941, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 2913, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 2917, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 2916, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 1328,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 791, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 2917, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 2916, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 704, 705, 0, 0, 0, 0,
	1664, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 1009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 1008, 488, 0, 0, 0, 0, 0,
	1005, 1006, 325, 969, 294, 188, 205, 999, 1003, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 0, 335, 451, 452,
	281, 353, 0, 0, 0, 78, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 87, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	86, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 1347, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 1349, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 1174, 0, 1175, 1176, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 1289, 1292,
	0, 0, 0, 0, 1288, 1291, 0, 0, 217, 1287,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 0, 335, 451, 452, 281, 353, 0, 0, 0,
	78, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 1328,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 86, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 1783, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 1781, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 969, 294, 188, 205, 967, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 1783, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 1328,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 2862, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 2103, 0, 0, 0,
	2104, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 1372, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 1371, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 2961, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 2862, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 2568, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 1615, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1493, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1491, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1489, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1487, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1485, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1481, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1479, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1477, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 1454, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 1356, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 1151, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 580, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 528, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 2966, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 2586, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 2099, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 0, 335, 451, 452,
	281,
}

var yyPact = [...]int{
	4157, -1000, -411, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1954, 1977, -1000, -1000,
	-1000, -1000, 2126, -1000, 659, 1696, -1000, 1963, 4666, -1000,
	42472, 441, -1000, 41292, 418, 254, 42472, -1000, 156, -1000,
	132, 42472, 139, 40702, -1000, -1000, -275, 18862, 1873, 32,
	20, 42472, -1000, -1000, -1000, -1000, 2073, 1660, -1000, 325,
	-1000, -1000, -1000, -1000, -1000, -1000, 40112, -1000, -1000, -1000,
	1967, 1953, 2134, 582, 1932, -1000, 2022, 1660, -1000, 18862,
	2074, 2007, 17682, -1000, 17682, 361, -1000, -1000, 12952, -1000,
	-1000, 24772, 42472, 42472, 259, -1000, 1963, -1000, -1000, 318,
	-1000, 289, 1584, -1000, 1583, -1000, 588, 476, 307, 443,
	424, 306, 301, 299, 294, 292, 291, 288, 287, 314,
	-1000, 604, 604, -140, -143, 353, 354, 354, 354, 371,
	1908, 1907, -1000, 616, -1000, 604, 604, 304, 604, 604,
	604, 604, 257, 252, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 308,
	1963, 231, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42472, 145, 42472, -1000,
	516, 42472, 760, 760, 44, 760, 760, 760, 760, 150,
	575, 18, -1000, 147, 226, 124, 238, 757, 143, -1000,
	-1000, 222, 757, 1178, 586, 126, -1000, 760, 760, -1000,
	10572, 178, 10572, 10572, -1000, 1946, -1000, -1000, -1000, -1000,
	1182, -1000, 370, -1000, -1000, -1000, -1000, 42472, 39522, 321,
	636, -1000, -1000, -1000, 105, -1000, -1000, 1312, 1107, 18862,
	1578, -1000, 1483, 561, -1000, -1000, -1000, -1000, -1000, 464,
	19452, 19452, 19452, 19452, -1000, -1000, 1598, 1598, 1598, 1598,
	19452, 1598, 19452, 1598, 1598, 1598, 1598, 18862, 1598, 1598,
	1598, -1000, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 1598, 514, 1598, 1598,
	1598, 1598, 1598, -1000, -1000, -1000, -1000, 1598, 1598, 1598,
	1598, 1598, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22407, -1000, 15322, 1598, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 42472, -1000, 1598, 152, 42472, 42472, 279,
	2022, 1660, -1000, 2073, 2061, 325, -1000, 2244, 1345, 1662,
	1163, 1660, 1541, 42472, -1000, 1607, -1000, -1000, -1000, 1800,
	1133, 1161, -1000, -1000, -1000, -1000, 998, 18862, -1000, -1000,
	2123, -1000, 21817, 513, 860, 2114, 38932, -1000, 361, 361,
	1581, 12357, 6, -1000, -1000, -1000, 634, 27722, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1946, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1479, 42472, -1000, -1000, 6040, 1128, -1000, 1692,
	-1000, 1470, -1000, 1671, 1712, 416, 1128, 391, 383, 381,
	-1000, -67, -1000, -1000, -1000, -1000, -1000, 604, 604, -1000,
	313, 2069, 4666, 3310, -1000, -1000, -1000, 38342, 1690, 1128,
	-1000, 1688, -1000, 768, 468, 486, 486, 1128, -1000, -1000,
	42472, 1128, 745, 738, 42472, 42472, -1000, 37752, -1000, 37162,
	36572, 983, 42472, 35982, 35392, 34802, 34212, 33622, -1000, 1803,
	-1000, 1704, -1000, -1000, -1000, 42472, 42472, 42472, 302, -1000,
	-1000, 42472, 1128, -1000, -1000, 979, 978, 604, 604, 974,
	1160, 1156, 1149, 604, 604, 968, 1148, 28902, 232, 963,
	958, 956, 961, 1147, 181, 957, 943, 950, 42472, 1684,
	42472, -1000, 218, 578, 352, 632, 1963, 1866, 1579, 366,
	402, 1128, 357, 357, 42472, -1000, 11167, -1000, -1000, 1142,
	18862, -1000, 759, 757, 757, -1000, -1000, -1000, -1000, -1000,
	-1000, 760, 42472, 759, -1000, -1000, -1000, 757, 760, 42472,
	760, 760, 760, 760, 757, 757, 757, 760, 42472, 42472,
	42472, 42472, 42472, 42472, 42472, 42472, 42472, 10572, 586, 760,
	-280, -1000, 1131, -1000, 1797, -1000, -1000, -1000, -1000, -1000,
	-1000, 10572, 10572, -1000, -1000, -1000, -1000, 137, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -56, 1545, 33032,
	-1000, -285, -287, -292, -293, -1000, -1000, -1000, -296, -299,
	-1000, -1000, -1000, 18862, 18862, 18862, 18862, -167, -1000, 820,
	19452, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 166, 709,
	19452, 19452, 19452, 19452, 19452, 19452, 19452, 19452, 19452, 19452,
	19452, 19452, 19452, 19452, 19452, 680, 4078, 4078, 561, 561,
	561, 561, -1000, 17682, 18862, 18862, 561, -1000, 1128, 32442,
	17682, 17682, 18862, 1916, 649, 1107, 42472, -1000, 1163, -1000,
	-1000, -1000, 899, -1000, 42472, 42472, 777, 18862, 18862, 18862,
	18862, 18862, 18862, 14137, 18862, 18862, 18862, 18862, 18862, 18862,
	18862, 18862, 18862, 18862, 18862, 18862, 18862, 18862, 18862, 18862,
	18862, 18862, 18862, 18862, 18862, 18862, 18862, 18862, 18862, 18862,
	1163, 18862, 1241, 18862, 18862, 13547, 11167, 17682, 17682, 17682,
	17682, 17682, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 505, 1433, 1258, 1372, 18862, -1000,
	1542, -1000, -118, 24182, 18862, 1121, 2107, 1722, 42472, -1000,
	-1000, -1000, 2022, -1000, 2022, 1433, 1901, 1805, 17682, -1000,
	-1000, 1901, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1344, -1000, 42472, 1541, 2002, 42472, 1798, 1120, 324, -1000,
	18862, 18862, 1539, -1000, 1089, 42472, -1000, -167, -1000, 31852,
	-1000, -1000, 9977, -1000, 42472, 278, 42472, -1000, 23592, 31262,
	11762, 6, -1000, 11762, 1481, -1000, -1, -15, 14727, 520,
	-1000, -1000, -1000, 353, 20632, 1295, 520, 73, -1000, -1000,
	-1000, 1671, -1000, 1671, 1671, 1671, 1671, 324, 324, 324,
	324, -1000, -1000, -1000, -1000, -1000, 1682, 1681, -1000, 1671,
	1671, 1671, 1671, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1680, 1680, 1680, 1673, 1673, 346, -1000, 18862, 251, 42472,
	1986, 947, 218, 359, 1721, 1128, 1128, 1128, 359, -1000,
	1193, 1085, -1000, -397, 1529, -1000, -1000, 2064, -1000, -1000,
	672, 797, 785, 624, 42472, 183, 273, -1000, 336, -1000,
	42472, 1128, 736, 486, 1128, -1000, 1128, -1000, -1000, -1000,
	-1000, -1000, 1128, 1528, -1000, 1547, 858, 779, 826, 728,
	1528, -1000, -1000, -108, 1528, -1000, 1528, -1000, 1528, -1000,
	1528, -1000, 1528, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 612, 42472, 183, 680, -1000, 365, -1000, -1000, 680,
	680, -1000, -1000, -1000, -1000, 1115, 1093, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -384, 42472, -1000, 204, 629, 264,
	298, 255, 42472, 155, 2005, 230, 247, 42472, 42472, 357,
	1751, 42472, 1979, 42472, -1000, -1000, -1000, -1000, -1000, 1107,
	42472, -1000, -1000, 760, 760, -1000, -1000, 42472, 760, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 760, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 42472, -1000, -1000, -1000, -1000, 42472, -1000,
	-1000, -1000, -1000, -1000, 141, -5, 317, -1000, -1000, -1000,
	-1000, -1000, 2015, -1000, 1107, 721, 686, -1000, 1598, -1000,
	-1000, 850, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 166,
	19452, 19452, 19452, 1550, 419, 1158, 1245, 1375, 1513, 1513,
	718, 718, 567, 567, 567, 567, 567, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1091, -1000, 1437, -1000, 1737,
	959, 1163, -1000, 1437, 1437, 1464, 17682, -1000, -1000, 692,
	-1000, 18862, 1163, -1000, -1000, 1163, 1163, 1522, 1517, 2104,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1435, 1602, 1602, 1602, 1602, 1602, 18862, 1283, -1000,
	-1000, -1000, 2324, 2286, 1163, 1312, 1163, 1512, -1000, 2259,
	1602, 2184, 2179, 2151, 1347, 2122, 2078, 2067, 1602, 1602,
	1602, 1043, 2059, 2034, 1929, 1865, 1855, 1799, 1776, 1770,
	1753, 1602, -175, 1602, 1163, 1163, 1163, 1749, 1026, 1163,
	17682, 17682, 1489, 1598, 504, -1000, 1437, 1163, 1163, 1437,
	1437, 11167, 1163, -1000, 1372, 42472, -1000, -269, -1000, -26,
	533, 1598, -1000, 28902, 1163, -1000, 6422, -1000, 43652, -1000,
	-1000, -1000, -1000, -1000, 27132, 1501, 1901, -1000, -1000, 1598,
	1461, -1000, -1000, 324, 56, 26542, -1000, -1000, 1107, 1107,
	18862, -1000, -1000, -1000, -1000, -1000, -1000, 501, 2087, 315,
	1598, -1000, 1537, 2400, -1000, -1000, -1000, 2000, 21227, -1000,
	1598, 1598, 42472, 1586, 1294, -1000, 496, -1000, 1481, 6,
	-6, -1000, -1000, -1000, -1000, 1107, -1000, 1056, 286, 319,
	-1000, 335, -1000, -1000, -1000, -1000, 1886, 58, -1000, -1000,
	-1000, 324, 324, -1000, -1000, -1000, -1000, -1000, -1000, 1090,
	1090, -1000, -1000, -1000, -1000, -1000, 946, -1000, -1000, -1000,
	941, -1000, -1000, 1730, 1758, 251, -1000, -1000, 604, 1074,
	1891, 42472, -1000, -1000, 1275, 204, 42472, 661, 1750, -1000,
	1721, 1721, 1721, 42472, -1000, -1000, -1000, -1000, -388, 54,
	327, -1000, -1000, -1000, 3283, 42472, 1458, -1000, 167, -1000,
	1247, -1000, 42472, -1000, 1441, 1679, 1128, 1128, -1000, -1000,
	-1000, 42472, 1598, -1000, -1000, -1000, -1000, 397, 1960, 1958,
	183, 167, 520, 1128, -1000, -1000, -1000, -1000, -1000, -389,
	1439, 379, 192, 276, 42472, 42472, 42472, 42472, 42472, 469,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 234, 363,
	-1000, 42472, 42472, 511, -1000, -1000, -1000, 757, -1000, -1000,
	757, -1000, -1000, -1000, -1000, -1000, 1928, 42472, -11, -313,
	-1000, -310, 18862, -1000, -1000, -1000, -1000, 1494, 414, 1158,
	19452, 19452, 17682, -101, 524, 524, 680, -1000, -1000, -1000,
	18862, 18862, 1491, 640, -1000, 18862, 834, -1000, -1000, -1000,
	18862, 18862, 18862, 1163, 262, -1000, -1000, -1000, -1000, -1000,
	2096, -1000, 18862, 18862, 18862, -1000, -1000, 18862, 18862, -1000,
	18862, 18862, 20042, 1163, 20042, 18862, 18862, 20042, -1000, -1000,
	-1000, -1000, 20042, 18862, 18862, 18862, 18862, 18862, 18862, 18862,
	18862, 18862, -1000, -1000, 30672, 55, -175, -175, -175, 986,
	55, 971, -1000, 1437, 1437, 17682, 11167, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 533, -1000,
	486, 486, 486, 42472, -1000, -1000, -1000, -1000, -1000, -1000,
	1446, 2019, -1000, 1823, 1820, 2092, 2087, -1000, 23592, 1901,
	-1000, -1000, 42472, -264, -1000, 1860, 1915, -1000, -1000, -1000,
	-1000, 9382, 2022, 18862, 1744, 42472, 163, -1000, 23002, 42472,
	42472, 23592, 23592, 23592, 23592, 23592, -1000, 1786, 1783, -1000,
	1779, 1766, 1830, 42472, -1000, 1432, 1163, 2061, 21227, 325,
	18862, 25362, 1272, 23592, -1000, -1000, 23592, 42472, 8787, -1000,
	-1000, -21, -31, -1000, -1000, -1000, -1000, 353, -1000, -1000,
	931, 1993, 1878, -1000, -1000, -1000, -1000, 1421, -1000, 1415,
	1400, 1402, 171, -1000, 1702, 1927, 604, 604, -1000, 928,
	-1000, 1128, -1000, -1000, 373, -1000, 1975, 42472, 1743, 1738,
	1736, -1000, -402, 923, 1678, 1622, 18862, 1676, 2057, 1349,
	42472, -1000, -1000, 42472, -1000, 149, -1000, 251, 42472, -1000,
	-1000, -1000, 273, 42472, -1000, 6612, 167, -1000, -1000, -1000,
	-1000, -1000, -1000, 42472, 197, -1000, 1675, 1029, -1000, -1000,
	1587, -1000, -1000, -1000, -1000, 158, 263, -1000, 42472, 503,
	1758, 42472, -1000, -1000, -1000, 760, 760, -1000, -1000, 1914,
	-1000, 1128, 1602, 19452, 19452, -1000, 561, -1000, 1598, 1163,
	1671, 1671, -1000, 1671, 1673, -1000, 1671, 128, 1671, 125,
	1671, -1000, -1000, 1163, 1163, 1002, 969, -74, -1000, 1107,
	18862, 1716, 1693, 1602, -1000, 1658, 1657, 18862, 1602, 1602,
	1602, -1000, 1107, 1347, 1686, 1281, -1000, -1000, -1000, -1000,
	1393, 1602, 1633, 1163, 1163, 1377, 1377, 1377, 1377, 1377,
	1372, 1372, 1372, 1372, 30082, -1000, -175, -1000, -1000, -211,
	-214, -1000, -1000, -1000, 1163, 1163, 1163, -175, 1368, 1368,
	1368, -1000, -1000, 1163, -1000, -1000, 2010, 2010, 2010, 1329,
	43062, 42472, -1000, -1000, -1000, -1000, 2087, 2070, 1358, -1000,
	-1000, 56, 380, -1000, 1848, 1915, -1000, 2056, 1851, 2042,
	-1000, -1000, -1000, 1107, -1000, 1955, 1302, -1000, 609, 1307,
	-1000, -1000, 17092, 1370, 1813, 473, 1329, 1466, 2400, 1720,
	1734, 2443, -1000, -1000, -1000, -1000, 1777, -1000, 1759, -1000,
	-1000, 1607, -1000, -1000, 1258, 1163, 1617, 278, 23592, 1410,
	1410, -1000, 461, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	841, 6373, 2131, -1000, 1073, -1000, 921, -1000, 723, 712,
	-1000, 42472, 1653, -1000, 324, 1070, 324, 920, -1000, 905,
	-1000, -1000, -192, -1000, -1000, 1640, 1762, -1000, -1000, 42472,
	-1000, -1000, 42472, 42472, 42472, 1651, 2040, -1000, 18862, 1648,
	606, 1613, 42472, 42472, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 392, 604, -360, 245, 243, 604,
	604, 604, -1000, -1000, 1314, 1310, -1000, -141, -1000, 18862,
	-1000, -1000, -1000, 909, 909, -1000, 1607, -1000, -1000, -1000,
	1211, -1000, -1000, -110, 42472, 42472, 42472, 42472, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 561, 19452,
	-1000, -1000, 324, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18862, -1000, 18862, -1000, 2022, 1061, 1107, 18862,
	18862, -1000, 901, 900, 1602, -1000, -1000, -1000, 1163, 20042,
	-1000, 20042, -1000, 18862, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1163, 275, 2060, 2039, -1000,
	-1000, -1000, 2090, 2090, 2090, -1000, 1163, 18862, 1163, 1163,
	-1000, 1598, 1913, 1598, 1598, 25362, -1000, -1000, 2070, 2080,
	2030, 1836, 1850, 1850, 1848, -1000, 2028, 2026, -1000, 1049,
	2025, 1046, 698, -1000, 42472, 18862, 163, -1000, 326, 42472,
	163, 42472, -1000, 2060, -1000, -1000, 18862, 1616, -1000, 18862,
	-1000, -1000, -1000, -1000, -1000, -1000, 4078, 2087, 1410, -1000,
	-1000, 573, -1000, 18862, -1000, -1000, -1000, 5704, -1000, -1000,
	-1000, -1000, -1000, 1614, 18862, -1000, -1000, -1000, 1208, 1206,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1607, -1000,
	-1000, -1000, -1000, 273, -393, 1609, 42472, 890, -1000, 1304,
	1349, 265, 163, 1039, 604, 604, 604, 886, 876, 28902,
	320, -1000, 273, -1000, -146, -147, 1602, -1000, -1000, 1985,
	-1000, -1000, 11167, -1000, -1000, 1600, 1610, -1000, 303, -1000,
	1602, 1602, 1163, -1000, 1602, 1602, 1190, 1188, -1000, -1000,
	1281, -1000, 896, -1000, 2060, -345, 18862, 55, -1000, -1000,
	190, 55, 55, 55, 1107, 55, 55, 25952, -1000, 2024,
	2020, 29492, 29492, 533, 2080, -1000, 18862, 18862, 1829, 878,
	-1000, -1000, -1000, -1000, 1007, 1006, -1000, 1003, -1000, 2130,
	-1000, 1107, -1000, 163, -1000, 434, 1307, -1000, 2022, 1107,
	42472, 1107, 63, 2060, -1000, 1602, -1000, 1598, 1598, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
	1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 42472,
	1379, -1000, -1000, 1983, 1267, 52, -1000, 1261, -1000, -1000,
	160, -1000, 18862, -1000, 28902, 999, 991, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 325, 1331, -1000, 601, 42472,
	42472, 1163, 285, -115, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18862, -345, -1000, -1000, 16502, -1000, -1000,
	1312, -175, -1000, -1000, -175, -175, -175, -175, -175, 1256,
	-1000, -1000, -1000, -1000, -1000, 1256, 1256, -1000, -1000, 1107,
	1312, -1000, 871, -1000, -1000, -1000, -1000, -1000, 42472, 1307,
	42472, -1000, 1254, 1163, 1598, 2022, -1000, 1227, -1000, 325,
	-1000, 1597, 1622, -1000, -1000, -1000, 15912, -1000, -1000, -1000,
	-1000, -109, 11167, 8192, 1224, -1000, -1000, 1793, -106, -134,
	1347, -1000, -1000, 18272, -1000, 310, -323, -209, -1000, -1000,
	-1000, -1000, -1000, -1000, 28312, -1000, -1000, -1000, -1000, -1000,
	1246, -1000, -1000, 25362, 41882, -1000, 1733, 818, -109, 18862,
	1551, 1163, -1000, 3, -1000, -1000, -1000, -1000, -1000, 1587,
	-1000, 1774, -1000, 1163, 677, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1220, -1000, 5405, -227, 1731, -1000, 2103,
	-1000, -1000, -1000, 833, 989, -1000, -1000, -1000, -1000, 1308,
	42472, -1000, 328, -1000, -1000, -110, -117, -1000, 18272, -1000,
	41882, -223, 520, 4078, -1000, -1000, 2129, 569, 569, -1000,
	-1000, -405, 1203, 211, -1000, -116, -1000, -1000, -1000, 1973,
	63, -1000, -1000, -1000, 340, 924, -1000, -1000, 867, -405,
	-1000, -135, -228, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4078, 225, 225, -1000, 1729, -1000, -1000, 4078, -1000,
	1725, -212, -1000, -303, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2606, 2605, 21, 5, 2604, 2603, 2602, 37, 91,
	180, 26, 183, 106, 2601, 2600, 2599, 2598, 2597, 2596,
	2593, 224, 215, 210, 2591, 2590, 2589, 2588, 2587, 2585,
	2584, 2581, 2580, 2579, 207, 165, 179, 2578, 2577, 2576,
	111, 191, 86, 89, 178, 2575, 2574, 76, 2573, 2572,
	2571, 174, 169, 718, 2570, 170, 116, 43, 2569, 2568,
	2567, 2566, 2565, 2564, 2560, 2558, 2556, 2552, 2549, 2548,
	2547, 2546, 2545, 2544, 2539, 262, 2538, 2537, 15, 2534,
	84, 2533, 2532, 2531, 2529, 2528, 16, 2527, 25, 2526,
	154, 2525, 2524, 36, 2523, 2522, 52, 2521, 2518, 2517,
	2514, 128, 2504, 2503, 2501, 2500, 2497, 2495, 2493, 144,
	2490, 2488, 2486, 2485, 182, 2480, 2479, 273, 105, 108,
	2474, 2471, 104, 175, 2460, 125, 2456, 2452, 2449, 157,
	2447, 1912, 2426, 69, 55, 2422, 63, 82, 67, 68,
	7, 1, 2412, 2411, 65, 95, 2408, 100, 75, 2407,
	110, 97, 2406, 2405, 13, 6, 2404, 4, 2403, 2,
	73, 2401, 2399, 120, 2398, 2395, 2393, 93, 2392, 2391,
	458, 2390, 92, 133, 101, 80, 2389, 35, 88, 2388,
	2387, 2385, 2383, 2382, 47, 2381, 2380, 2379, 143, 39,
	166, 53, 31, 33, 48, 138, 2378, 42, 77, 2377,
	142, 140, 2374, 79, 61, 29, 27, 2370, 103, 134,
	155, 24, 98, 152, 2368, 2366, 49, 71, 2365, 2363,
	2360, 2358, 2354, 2350, 78, 2349, 50, 2348, 209, 2346,
	19, 2344, 46, 34, 2337, 70, 131, 74, 30, 2332,
	199, 2329, 44, 161, 130, 159, 2324, 2323, 2320, 2318,
	176, 288, 2315, 2312, 119, 167, 145, 150, 2310, 294,
	2306, 2302, 99, 1315, 2554, 28, 163, 2300, 2299, 4293,
	146, 32, 23, 2298, 184, 2297, 2296, 2295, 181, 160,
	124, 958, 118, 2294, 12, 2292, 2287, 2285, 2284, 2283,
	2280, 90, 2278, 2277, 2276, 195, 59, 9, 173, 81,
	2275, 2273, 2271, 127, 94, 2269, 158, 156, 129, 162,
	2266, 168, 147, 126, 2244, 60, 2243, 2239, 2228, 2227,
	2226, 96, 2218, 2217, 2212, 2210, 164, 149, 123, 83,
	2209, 85, 121, 153, 148, 45, 2207, 40, 2203, 2201,
	2200, 177, 20, 2199, 10, 66, 58, 22, 102, 122,
	2193, 0, 2191, 14, 172, 293, 151, 2189, 2185, 8,
	2182, 11, 2174, 139, 2170, 2167, 2163, 18, 41, 17,
	3, 2156, 2151, 5367, 2825, 132, 2148, 189,
}

//line sql.y:7002
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 371, 372, 372, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 351, 351,
	351, 354, 354, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 99, 99, 22, 23, 23, 23, 23,
	375, 375, 165, 165, 163, 163, 164, 164, 235, 235,
	24, 25, 25, 245, 245, 244, 244, 244, 246, 246,
	246, 246, 281, 281, 26, 26, 26, 26, 26, 115,
	115, 353, 353, 352, 344, 344, 343, 343, 342, 350,
	350, 349, 349, 348, 38, 39, 48, 48, 48, 48,
	49, 50, 355, 355, 317, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 319, 319, 305,
	305, 318, 318, 318, 318, 318, 318, 318, 304, 304,
	126, 126, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 366, 366, 215, 215, 215, 215, 215,
	215, 135, 135, 144, 144, 144, 144, 144, 133, 133,
	134, 132, 132, 132, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 143, 143, 139,
	139, 139, 140, 140, 140, 141, 141, 367, 367, 367,
	367, 284, 284, 284, 284, 287, 287, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 286, 286, 286, 286,
	286, 288, 288, 288, 288, 288, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 290, 290, 290, 290, 290, 290, 290, 290, 303,
	303, 291, 291, 298, 298, 299, 299, 299, 300, 300,
	300, 301, 301, 296, 296, 296, 296, 296, 296, 297,
	297, 297, 306, 331, 331, 330, 330, 328, 328, 328,
	328, 315, 315, 325, 325, 325, 325, 325, 314, 314,
	310, 310, 310, 311, 311, 312, 312, 309, 309, 313,
	313, 327, 327, 326, 307, 307, 308, 308, 333, 368,
	368, 368, 368, 369, 369, 334, 360, 361, 359, 359,
	359, 359, 359, 80, 80, 80, 258, 258, 258, 323,
	323, 322, 322, 322, 324, 324, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 253, 253, 253, 358, 358, 358,
	358, 358, 358, 357, 357, 357, 320, 320, 320, 356,
	356, 56, 56, 198, 198, 45, 45, 45, 45, 45,
	45, 44, 44, 44, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 101, 101,
	102, 102, 102, 102, 104, 104, 104, 336, 336, 57,
	57, 3, 3, 153, 155, 156, 156, 154, 154, 154,
	154, 154, 154, 59, 59, 58, 58, 158, 157, 159,
	159, 159, 1, 1, 2, 2, 4, 4, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	302, 302, 302, 335, 335, 337, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 339, 339, 339, 60, 60,
	340, 292, 293, 294, 5, 6, 316, 338, 111, 111,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 61,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	252, 252, 260, 260, 251, 251, 274, 274, 274, 254,
	254, 254, 255, 255, 365, 365, 365, 248, 248, 63,
	63, 63, 65, 65, 66, 67, 67, 276, 276, 277,
	277, 68, 69, 81, 81, 81, 81, 81, 81, 100,
	100, 100, 15, 15, 15, 15, 77, 77, 77, 14,
	14, 64, 64, 71, 362, 362, 363, 364, 364, 364,
	364, 72, 74, 31, 31, 31, 31, 31, 31, 121,
	121, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 116, 116, 116, 110, 110, 376, 75,
	76, 76, 114, 114, 114, 107, 107, 107, 113, 113,
	113, 16, 16, 17, 234, 234, 18, 18, 118, 118,
	120, 120, 120, 120, 120, 122, 122, 122, 122, 122,
	122, 122, 117, 117, 119, 119, 119, 119, 267, 267,
	267, 266, 266, 147, 147, 149, 148, 148, 150, 150,
	151, 151, 151, 151, 196, 196, 173, 173, 232, 232,
	230, 230, 231, 231, 233, 233, 233, 233, 236, 236,
	152, 152, 152, 152, 160, 160, 161, 161, 162, 162,
	275, 275, 272, 272, 272, 271, 271, 166, 166, 166,
	168, 167, 167, 167, 167, 169, 169, 171, 171, 170,
	170, 172, 177, 177, 176, 176, 174, 174, 174, 174,
	175, 175, 175, 175, 178, 178, 131, 131, 131, 131,
	131, 131, 131, 142, 142, 142, 142, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 82, 82, 82, 83, 83, 84,
	84, 84, 85, 85, 85, 85, 85, 86, 86, 86,
	88, 88, 87, 87, 191, 191, 89, 89, 90, 90,
	93, 93, 92, 91, 91, 97, 97, 94, 94, 96,
	96, 95, 98, 98, 249, 249, 179, 179, 187, 187,
	187, 187, 180, 180, 180, 180, 180, 180, 180, 188,
	188, 188, 195, 189, 189, 185, 185, 185, 185, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 203, 203, 347, 347,
	346, 346, 345, 345, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 377, 377, 295, 295, 295,
	295, 186, 186, 186, 186, 186, 112, 112, 112, 112,
	112, 280, 280, 280, 283, 283, 283, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 201, 201, 108, 108, 199, 199, 200, 202,
	202, 197, 197, 197, 182, 182, 182, 204, 204, 205,
	205, 206, 206, 208, 207, 207, 209, 210, 210, 210,
	211, 211, 212, 212, 212, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 123, 123, 123,
	123, 125, 125, 124, 124, 78, 78, 79, 79, 79,
	129, 129, 130, 130, 130, 127, 127, 128, 128, 228,
	228, 213, 213, 213, 220, 220, 220, 216, 216, 218,
	218, 218, 219, 219, 219, 217, 225, 225, 227, 227,
	226, 226, 222, 222, 223, 223, 224, 224, 224, 221,
	221, 181, 181, 181, 181, 181, 229, 229, 229, 229,
	237, 237, 192, 192, 194, 194, 193, 193, 146, 238,
	238, 242, 239, 239, 243, 243, 243, 243, 243, 240,
	240, 241, 241, 268, 268, 268, 247, 247, 259, 259,
	256, 256, 257, 257, 250, 250, 261, 261, 261, 73,
	190, 190, 332, 332, 329, 264, 264, 265, 265, 269,
	269, 273, 273, 270, 270, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 373, 374, 278, 279, 279, 279,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 1, 2, 5, 0, 3, 4, 3, 4, 2,
	0, 1, 1, 2, 2, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 6, 6, 6, 4, 4,
	4, 7, 8, 6, 5, 6, 8, 11, 6, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 6, 5, 5, 5, 9,
	9, 9, 6, 9, 9, 9, 0, 2, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 4, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -371, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -99, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -100, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -373,
	11, 429, 252, 251, 28, -12, 463, 85, -372, 599,
	-228, -213, 22, 33, 29, -212, -208, -114, -213, 20,
	18, 7, -75, -376, -75, -75, 12, 13, -75, -317,
	-319, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -341, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 463, 466, -324, 219, 225, 226, 430,
	122, 121, 75, 221, -321, 353, 569, -55, 571, 101,
	103, 570, 44, 231, 572, 573, 574, 575, 240, 576,
	577, 578, 579, 585, 586, 587, 588, 123, 7, -75,
	-273, -269, -351, -263, 88, 89, 90, 460, 243, 493,
	494, 292, 80, 41, 350, 353, 569, 299, 313, 307,
	334, 326, 461, 495, 295, 244, 280, 563, 324, 131,
	571, 298, 496, 258, 358, 359, 360, 101, 302, 396,
	584, 297, 497, 582, 103, 570, 79, 51, 566, 44,
	253, 322, 227, 318, 572, 281, 498, 471, 274, 122,
	119, 591, 36, 316, 50, 30, 581, 121, 49, 573,
	146, 499, 574, 362, 341, 557, 48, 363, 259, 500,
	83, 264, 465, 565, 364, 317, 365, 291, 580, 224,
	501, 549, 366, 367, 558, 502, 342, 346, 503, 388,
	368, 598, 52, 504, 505, 559, 120, 506, 78, 575,
	311, 312, 507, 289, 242, 390, 338, 442, 449, 450,
	107, 108, 445, 109, 451, 110, 452, 453, 454, 443,
	111, 104, 444, 455, 456, 339, 340, 112, 457, 106,
	105, 446, 448, 113, 458, 240, 35, 369, 462, 293,
	58, 268, 391, 46, 344, 595, 45, 553, 508, 556,
	337, 333, 439, 53, 509, 510, 511, 512, 576, 336,
	310, 332, 590, 4, 286, 577, 62, 226, 348, 347,
	349, 275, 387, 329, 513, 514, 515, 247, 81, 516,
	319, 21, 517, 518, 370, 282, 519, 56, 520, 521,
	394, 256, 522, 54, 578, 39, 261, 592, 579, 523,
	524, 525, 526, 263, 527, 372, 528, 371, 343, 345,
	270, 373, 464, 529, 315, 260, 583, 530, 248, 564,
	262, 267, 255, 395, 249, 531, 532, 533, 534, 535,
	296, 536, 537, 303, 585, 440, 43, 538, 539, 540,
	541, 290, 285, 389, 398, 61, 82, 355, 542, 562,
	309, 283, 543, 300, 55, 586, 587, 588, 277, 589,
	9, 596, 597, 375, 123, 287, 288, 47, 330, 269,
	544, 545, 320, 321, 335, 308, 331, 301, 550, 271,
	376, 441, 257, 546, 397, 284, 351, 356, 468, 276,
	377, 561, 467, 328, 325, 278, 547, 378, 232, 272,
	273, 548, 551, 379, 380, 294, 381, 382, 383, 384,
	385, 386, 279, 466, 306, 323, 357, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 438, 230, -75, 230, -170,
	-269, 230, -240, 359, -260, 361, 374, 369, 379, 367,
	-252, 370, 372, 270, -365, 388, 230, 376, 218, 362,
	371, 380, 381, 294, 382, 386, 279, 383, 384, 385,
	-351, 172, 574, 589, 131, 327, 366, 364, 389, 553,
	-269, 301, -276, 306, -264, -351, -263, 304, -170, -81,
	549, 222, -278, -278, -116, 553, 555, -189, -131, 139,
	-142, -145, -136, -137, -183, -184, -185, -186, -143, -197,
	161, 162, 169, 140, -195, -146, 26, 459, 431, 430,
	172, 31, 214, 68, 69, 433, 434, 142, 57, 406,
	407, -144, 401, 408, 403, 436, 437, 114, 438, 104,
	106, 105, 439, 440, 441, 339, 340, 442, 443, 444,
	107, 108, 109, 110, 111, 112, 113, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -85, -97, 484, 483, -98, -264, -269, 235, 400,
	229, 167, 429, -138, -134, -8, -193, 399, 404, 405,
	409, 402, 470, 472, 487, 488, 490, 475, 480, 479,
	482, -351, -263, -140, -139, -179, 91, 97, 102, 98,
	-370, 115, -373, 567, 92, 93, 94, 95, 96, 116,
	117, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 44, 375, 375, -170, -75, -75, -75, -75,
	-206, -114, -208, -10, -8, -373, 8, -75, -8, -9,
	-13, -34, -36, 489, -35, -269, -213, -228, 12, 157,
	42, 50, -211, -212, -12, -8, -131, 19, 23, 24,
	-119, 163, -131, -269, -76, -119, -250, 234, -75, -75,
	-239, -281, 301, -243, 389, 388, -265, -241, -264, -262,
	-240, 387, 223, 23, 469, 138, 25, 27, 141, 172,
	126, 19, 142, 37, 225, 327, 241, 171, 237, 430,
	218, 72, 470, 401, 403, 399, 406, 432, 433, 400,
	361, 31, 13, 472, 28, 251, 24, 38, 165, 220,
	145, 473, 254, 26, 252, 114, 117, 475, 22, 75,
	246, 14, 239, 40, 16, 476, 477, 17, 235, 234,
	157, 231, 70, 11, 214, 29, 154, 66, 478, 133,
	479, 480, 481, 482, 127, 68, 155, 20, 593, 404,
	405, 33, 554, 459, 265, 167, 73, 59, 555, 139,
	402, 483, 484, 115, 485, 118, 76, 560, 135, 18,
	71, 42, 486, 266, 487, 236, 594, 488, 392, 489,
	156, 221, 429, 69, 490, 567, 568, 229, 374, 8,
	435, 32, 250, 238, 125, 67, 491, 230, 144, 436,
	437, 233, 128, 116, 7, 132, 34, 12, 74, 77,
	407, 408, 409, 57, 124, 463, 143, 15, 492, 393,
	137, 131, -318, 155, -304, -308, -264, 245, -334, 241,
	-170, -327, -326, -264, -115, -259, 231, 239, 238, 132,
	-355, 135, 287, 400, 229, -51, -52, -240, 171, -101,
	262, 266, 86, 86, -308, -307, -306, -356, 266, 245,
	-333, -325, 237, 246, -314, 238, 239, -309, 231, 133,
	-356, -309, 236, 246, 266, 266, 123, 266, 123, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 261, -315,
	147, -315, 467, 467, -321, -356, -356, -356, 233, 35,
	35, -261, -309, 233, 25, -315, -315, -240, 171, -315,
	-315, -315, -315, 274, 274, -315, -315, -315, -315, -315,
	-315, -315, -315, -315, -315, -315, -315, -315, -315, -315,
	230, -355, -123, 386, 294, 80, -53, 276, -37, -170,
	-259, 231, 232, -355, 263, -170, 215, -170, -254, 155,
	15, -254, -251, 375, 373, 360, 365, -254, -254, -254,
	-254, 277, 358, -310, 231, 35, 242, 375, 277, 358,
	277, 278, 277, 278, 368, 378, 277, -274, 14, 157,
	400, 363, 367, 270, 230, 271, 232, 377, 278, -274,
	92, -255, 155, 375, 273, -254, -254, -279, -373, -265,
	327, -351, 556, -279, -279, 32, 89, 233, -264, -77,
	-264, 92, -15, -11, -22, -21, -23, 147, -121, 375,
	-109, 172, 574, 557, 558, 559, 556, 372, 564, 562,
	560, 277, 561, 86, 135, 137, 138, 4, -131, 154,
	-180, 147, 148, 149, 150, 151, 152, 153, 157, 139,
	141, 155, 156, 136, 158, 159, 160, 161, 162, 163,
	164, 166, 165, 167, 168, 171, 216, 217, -137, -137,
	-137, -137, -195, -373, -373, -373, -137, -249, -373, -137,
	-373, -373, -373, -373, -201, -131, -373, -377, -373, -377,
	-377, -295, -373, -295, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, 215, -373, -373, -373,
	-373, -373, -295, -295, -295, -295, -295, 102, 97, 91,
	-197, 98, 92, -264, -269, -8, -9, -189, -373, -278,
	-362, -363, -173, -170, -373, 294, -264, -264, 263, -211,
	-12, -8, -206, -212, -208, -8, -75, -107, -120, 63,
	64, -122, 24, 38, 67, 65, 23, -374, 87, -374,
	-228, -374, 86, -36, -232, 85, 61, 43, 92, 92,
	86, 21, -207, -209, -131, 14, -267, 4, -266, 25,
	-264, 92, 215, 100, 14, -171, 29, -170, -250, -250,
	86, 301, -243, -281, -245, -244, 390, 392, 147, -268,
	-264, 92, 31, 87, 86, -170, -284, -287, -289, -288,
	-290, -285, -286, 324, 325, 172, 328, 330, 331, 332,
	333, 334, 335, 336, 337, 338, 341, 32, 253, 320,
	321, 322, 323, 342, 343, 344, 345, 346, 347, 348,
	349, 307, 326, 461, 308, 309, 310, 311, 312, 313,
	315, 316, 317, 318, 319, -354, -351, 85, 87, 86,
	-291, 85, -123, 230, -351, 231, 231, 231, -75, 429,
	-315, -315, 261, 19, -44, -41, -341, 18, -40, -41,
	223, 119, 120, 220, 85, -304, 85, -313, -354, -351,
	85, 133, 236, 132, -312, -309, -312, -313, -351, -197,
	-351, 133, 133, -236, -264, -236, -236, 23, -236, 23,
	-236, 23, 94, -264, -236, 23, -236, 23, -236, 23,
	-236, 23, -236, 23, 31, 78, 79, 31, 81, 82,
	83, -197, -197, -304, -240, -170, -351, 94, 94, -315,
	-315, 94, 92, 92, 92, -315, -315, 94, 92, -271,
	-269, 92, -357, 247, 291, 293, 94, 94, 94, 94,
	31, 92, -358, 31, 581, 580, 582, 583, 584, 94,
	31, 94, 31, 94, -264, 85, -170, -129, 281, 218,
	220, 223, 76, 92, 295, 147, 44, 86, 233, 230,
	-351, -256, 235, -256, -264, -270, -269, -262, 92, -131,
	-311, 14, 157, -274, -274, -254, -170, -311, -274, -254,
	-170, -254, -254, -254, -254, -274, -274, -274, -254, -269,
	-269, -170, -170, -170, -170, -170, -170, -170, -279, -255,
	-254, 556, 92, -248, 14, 76, -279, -279, -277, 304,
	338, 550, 551, 552, 86, 463, -163, -170, 556, 556,
	556, 556, 556, 556, -131, -131, -131, -131, 485, -187,
	115, 139, 116, 117, -145, -188, -193, -195, 99, 157,
	141, 155, 156, -136, -137, -136, -136, -136, -136, -136,
	-136, -136, -136, -136, -136, -136, -136, -136, -280, -351,
	92, 172, -141, -140, 98, -370, -141, -117, -119, -131,
	-131, -351, -264, -117, -117, -131, -113, 24, 38, -199,
	-200, 143, -197, -374, -374, 94, 98, -264, -264, -106,
	-105, 411, 412, 413, 414, 416, 417, 418, 421, 422,
	426, 427, 410, 428, 415, 420, 423, 424, 425, 419,
	323, -131, -131, -131, -131, -131, -131, -82, -131, 126,
	127, 128, -131, -131, -190, -189, -350, -349, -348, -131,
	-131, -131, -131, -131, -131, -131, -131, -131, -131, -131,
	-131, -131, -131, -131, -131, -131, -131, -131, -131, -131,
	-131, -131, -374, -131, 94, -351, -134, -131, -131, -118,
	24, 38, -117, -265, -270, -262, -117, -118, -118, -117,
	-117, 215, -228, -374, -189, 86, -364, 392, 393, 554,
	-272, 266, -271, 25, -190, 92, 14, -234, 77, -264,
	-211, -211, 63, 64, 59, -117, -122, -374, -35, 25,
	-230, -264, 62, 92, -296, -240, 350, 351, -131, -131,
	86, -210, 27, 28, -170, -266, 163, -270, -170, -235,
	266, -170, -148, -150, -151, -152, -173, -196, -373, -153,
	481, 478, 14, -163, -164, -172, -269, -243, -245, 86,
	391, 393, 394, 76, 118, -131, -297, 171, -323, -322,
	-321, -304, -306, -307, -308, 87, -297, -300, 356, 355,
	-291, -291, -291, -291, -291, -296, -296, -296, -296, 85,
	85, -291, -291, -291, -291, -298, 85, -298, -298, -299,
	85, -299, -334, -131, -331, -330, -328, -329, 240, 101,
	463, 77, -326, -210, 94, -129, -257, 235, -332, -329,
	-351, -351, -351, -257, -351, 92, -351, 92, -102, -57,
	-1, 593, 594, 595, 86, 19, -305, -304, -56, 291,
	-337, -338, 266, -333, -327, -313, 133, -312, -313, -313,
	-351, 86, 29, 123, 123, 123, 123, 463, 220, 32,
	-304, -56, -280, 233, -280, -280, 92, 92, -253, 589,
	-163, -125, 283, 147, 272, 272, 230, 230, 285, -170,
	296, 298, 297, 295, 23, 284, 286, 288, 274, -170,
	-170, -256, 76, -165, -170, 26, -269, -170, -254, -254,
	-170, -254, -254, -170, -264, -109, 392, 86, 463, 22,
	-110, 22, -373, 115, 116, 117, -188, -136, -137, -136,
	138, 254, 86, -374, 25, 86, 77, -374, -374, -374,
	86, 14, -117, -202, -200, 145, -131, -374, -374, -374,
	86, 86, 14, -283, 25, -374, -374, -374, -374, -374,
	-201, -374, 14, 86, 86, -374, -374, 86, 86, -374,
	86, 86, 86, -347, 86, 86, 86, 86, -374, -374,
	-374, -374, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, -374, -90, 486, -374, -374, -374, -374, 86,
	-374, 86, -374, -117, -117, -373, 215, -374, -374, -374,
	-374, -374, -265, -374, -363, 553, 393, -177, -176, -174,
	74, 234, 75, -373, -271, -374, -141, 89, -231, 89,
	-230, -182, -264, 94, 98, -213, -147, -149, 14, -122,
	-195, 87, 86, -296, -217, -222, -251, -264, 92, 172,
	-209, 215, -178, 15, -181, 32, 57, -11, -373, -373,
	32, 86, -166, -168, -167, -169, 66, 70, 72, 67,
	68, 69, 73, -275, 25, -148, -9, -8, -373, -373,
	-373, -170, -163, -375, 14, 77, -375, 86, 215, -244,
	-246, 395, 392, 398, -351, 92, -101, 86, -321, -308,
	-214, -126, 40, -301, 357, -296, -296, -303, 92, -303,
	94, 94, 87, -47, -42, -43, 33, 80, -328, -315,
	92, 39, -264, 87, -125, -170, 139, 76, -332, -332,
	-332, -269, -2, 592, 598, 133, 85, 360, 18, -230,
	86, 87, -198, 292, 87, -103, -264, 87, 85, -313,
	-313, -264, -373, 230, 31, 31, -56, -198, -297, -351,
	591, 590, 87, 232, 290, -130, 406, -127, 92, 88,
	-170, -170, -170, -170, -170, 223, 220, 275, 233, -163,
	-170, 86, -80, 249, 244, -274, -274, 33, -170, 392,
	565, 563, -131, 138, 254, -145, -137, -119, 460, -282,
	172, 324, 253, 322, 318, 338, 329, 355, 320, 356,
	317, 316, 315, -282, -280, -131, -131, -206, 146, -131,
	144, -131, -131, -131, -374, 172, 324, 14, -131, -131,
	-131, -348, -131, -131, -131, -346, -345, -141, -197, -374,
	-346, -131, -131, -345, -345, -349, -349, -349, -349, -349,
	-189, -189, -189, -189, -373, -264, -93, -92, -91, 533,
	234, -90, -90, -90, 94, -351, -134, -93, 94, -351,
	-134, -374, -374, -118, -265, -174, -309, -309, -309, -236,
	86, -247, 22, 14, 57, 57, -147, -178, -148, -122,
	-264, -220, 549, -225, 46, -223, -224, 47, -221, 48,
	56, 163, -211, -131, -237, 76, -238, -242, -197, -192,
	-194, -193, -373, -229, -374, -264, -236, -238, -150, -151,
	-151, -150, -151, 66, 66, 66, 71, 66, 71, 66,
	-167, -269, -374, -374, -9, -9, -131, -272, 77, -148,
	-148, -172, -269, 163, 392, 396, 397, -321, -369, 115,
	139, 31, 76, 353, 101, -367, 171, -368, 236, 132,
	133, 248, 25, 41, 87, 86, 87, 86, 87, 86,
	-258, 499, 139, -43, -42, -315, -315, 94, -351, 232,
	26, -170, 76, 76, 76, -104, 596, 94, 85, -3,
	80, -131, 85, 19, -304, -197, -339, -292, -340, -293,
	-294, -5, -6, -316, 57, 101, -60, 44, 231, 576,
	577, 123, 589, -331, -230, -335, -337, -170, -133, -373,
	-132, -134, -138, 161, 162, -198, -170, -124, 281, 289,
	85, -128, 89, -353, 77, 272, 353, 272, -170, -80,
	-47, -170, -254, -254, 33, -351, -374, -145, -137, -373,
	-374, -291, -291, -291, -299, -291, 312, -291, 312, -291,
	-374, -374, 86, -374, 22, -374, -108, 435, -131, 86,
	86, -374, 85, 85, -131, -374, -374, -374, -347, 86,
	-374, 86, -374, 86, -374, -374, -374, -374, -374, -374,
	-374, -374, -374, -374, -374, -89, -264, -191, 266, -90,
	516, 516, -374, -374, -374, -90, -203, 86, -203, -203,
	-374, -175, 22, -175, -175, -374, 89, -170, -178, -204,
	16, -217, 51, 330, -227, -226, 55, 47, -224, 19,
	49, 19, 30, -237, 86, 147, 86, -374, -374, 86,
	57, 215, -374, -178, -161, -160, 76, 77, -162, 76,
	-160, 66, 66, -232, -374, -374, 86, -235, -148, -178,
	-178, 215, 115, -373, -135, -144, -133, 12, 92, 92,
	-351, 133, 133, -170, 85, -296, 92, -296, 94, 94,
	499, 31, 81, 82, 83, 31, 78, 79, -170, -170,
	-170, -170, -336, 85, 19, -131, 85, 147, 87, -230,
	-230, 268, 157, -315, 574, 274, 274, -315, -315, -315,
	87, -374, 86, -302, 463, 466, -131, -139, -139, -232,
	87, -344, 463, -352, -264, -264, -264, -264, -136, -296,
	-131, -131, -211, 92, -131, -131, 94, 94, -374, -374,
	-346, -345, -131, -374, -191, -206, 19, -96, -95, -94,
	14, -96, -96, -374, -131, -374, -374, -373, 66, 18,
	16, -373, -373, -272, -204, -205, 17, 19, -218, 53,
	-216, 52, -216, -226, 19, 19, 92, 19, 92, 133,
	-242, -131, -194, 57, -11, -264, -192, -264, -206, -131,
	85, -131, -141, -178, -178, -131, -184, 438, 104, 106,
	105, 439, 440, 441, 339, 340, 442, 443, 444, 107,
	108, 109, 110, 111, 112, 113, 445, 448, 446, 449,
	450, 451, 456, 457, 452, 453, 454, 455, 458, 85,
	-131, 87, 87, -232, -335, -57, 87, -230, 94, 87,
	269, -193, -373, 92, -315, -315, -315, 94, 94, -271,
	-368, -337, 467, 467, -374, 25, -343, -342, -265, 85,
	77, -112, 157, 463, -374, -374, -374, -374, -374, 87,
	87, -374, -374, 86, -206, -88, -87, -83, 568, 594,
	-189, -93, 291, 293, -93, -93, -93, -93, -93, -233,
	-374, -264, 236, 19, 19, -233, -233, -177, -205, -131,
	-189, -219, 54, 76, 118, 92, 92, 92, 12, -192,
	215, -211, -230, -155, 360, -206, -374, -230, 87, 25,
	87, 598, 133, 87, -193, -111, -373, 265, -271, 92,
	92, -11, 86, 147, -230, -170, -374, 461, 73, 464,
	-131, -88, -86, 141, -84, -131, 566, 546, -90, -90,
	-90, -90, -90, -90, 86, -374, -374, -374, 76, 118,
	-238, -264, 87, -374, -373, -211, 87, -215, -11, 85,
	-3, 265, -78, 463, -342, -320, -265, 92, 94, 87,
	62, 462, 465, -347, -86, 526, 501, 567, 526, 501,
	-264, 236, -272, -156, -154, -264, 513, -360, -361, 76,
	-369, -366, 115, 139, 101, -367, 124, 125, -78, -131,
	85, -374, -79, 280, 553, -353, 62, -374, 138, -374,
	86, 22, -284, -59, 523, -361, 76, 13, 12, 115,
	92, 87, -230, 241, -344, 463, -86, -154, 520, -297,
	-141, -359, 249, 244, 247, 32, -359, -4, 597, 87,
	282, 464, -58, 26, -155, 243, 31, 115, 94, -4,
	465, 523, -141, -158, -157, -159, 557, 115, 31, -157,
	-159, 76, -141, 76, 473, 557,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 758,
	758, 758, 0, 758, 0, 0, 758, -2, -2, 758,
	1291, 0, 758, 0, 0, -2, 690, 692, 0, 694,
	-2, 0, 0, 703, 1785, 1785, 753, 0, 0, 0,
	0, 0, 758, 758, 758, 758, 1151, 48, 758, 0,
	83, 84, 709, 710, 711, 63, 0, 1783, 1, 3,
	69, 73, 0, 0, 0, 56, 1160, 0, 76, 0,
	0, 762, 0, 760, 0, 1274, 758, 758, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 518, 458, 501, 456, 487, -2, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 351, 351, 0, 0, -2, 449, 449, 449, 0,
	0, 0, 484, 1276, 404, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1177,
	151, 1292, 1289, 1290, 38, 39, 40, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 0, 1268, 0, 618,
	859, 0, 679, 679, 0, 679, 679, 679, 679, 0,
	0, 0, 630, 0, 0, 0, 0, 676, 0, 646,
	647, 0, 676, 0, 682, 0, 657, 679, 679, 660,
	1786, 0, 1786, 1786, 1259, 0, 673, 671, 685, 686,
	689, 693, 0, 698, 701, 1285, 1286, 0, 716, 47,
	1528, 708, 721, 722, 0, 754, 755, 43, 993, 0,
	881, 886, 897, 910, 911, 912, 913, 914, 916, 917,
	0, 0, 0, 0, 922, 923, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 1132, 0, 1095,
	1095, 1010, 1095, 1097, 1097, 0, 0, 0, 1782, 1568,
	1576, 1577, 1599, 1682, 1728, 1572, 1573, 1554, 1566, 1569,
	1557, 1558, 1560, 1562, 1567, 1574, 1580, 1559, 1579, 1578,
	0, 1555, 1556, 1561, 1571, 1575, 1563, 1564, 1565, 1570,
	1581, 0, 0, 0, 0, 0, 1141, 0, 0, 0,
	0, 0, 0, 257, 258, 992, 1248, 1097, 1097, 1097,
	1097, 1097, 942, 943, 944, 945, 946, 965, 966, 972,
	973, -2, -2, 204, 205, 206, 207, 208, 209, 210,
	0, 200, 0, 0, 262, 263, 259, 260, 261, 976,
	977, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 1785, 0, 731, 0, 0, 0, 0, 0,
	1160, 0, 1152, 1151, 61, 0, 758, -2, 0, 0,
	0, 0, 45, 0, 50, 818, 75, 74, 1199, 0,
	0, 0, 57, 1161, 65, 67, 1162, 0, 763, 764,
	0, 794, 798, 0, 759, 0, 0, 1275, 1274, 1274,
	100, 0, 1724, 1252, -2, -2, 0, 0, 1287, 1288,
	1261, -2, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, -2, 0, 0, 161, 162, 0, 41, 377, 0,
	157, 0, 371, 321, 1177, 0, 0, 0, 0, 0,
	758, 0, 1269, 142, 143, 149, 150, 351, 351, 498,
	0, 0, 151, 151, 465, 466, 467, 0, 0, -2,
	375, 0, 450, 0, 0, 365, 365, 369, 367, 368,
	0, 0, 0, 0, 0, 0, 478, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 0,
	352, 0, 496, 497, 405, 0, 0, 0, 0, 476,
	477, 0, 0, 1277, 1278, 0, 0, 351, 351, 0,
	0, 0, 0, 351, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 1190, 0, 0, 0, -2, 0, 610, 0,
	0, 0, 1270, 1270, 0, 617, 0, 619, 620, 0,
	0, 621, 0, 676, 676, 674, 675, 623, 624, 625,
	626, 679, 0, 0, 360, 361, 362, 676, 679, 0,
	679, 679, 679, 679, 676, 676, 676, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 682, 679,
	0, 653, 0, 654, 655, 658, 659, 661, 1787, 1788,
	1308, 1786, 1786, 665, 669, 1260, 691, 699, 702, 719,
	717, 718, 720, 712, 713, 714, 715, 0, 733, 734,
	739, 0, 0, 0, 0, 745, 746, 747, 0, 0,
	750, 751, 752, 0, 0, 0, 0, 0, 879, 0,
	0, 982, 983, 984, 985, 986, 987, 988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 918, 919,
	920, 921, 924, 0, 0, 0, 929, 930, 0, 0,
	0, 0, 0, 768, 0, 1133, 0, 1008, 0, 1009,
	1011, 1012, 0, 1013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 0, 0, 778, 778,
	0, 0, 193, 194, 195, 196, 197, 211, 212, 213,
	214, 215, 264, 1141, 0, 992, 0, 0, 0, 44,
	723, 724, 0, 842, 1280, 0, 0, 774, 0, 55,
	64, 66, 1160, 59, 1160, 0, 780, 0, 0, -2,
	-2, 781, 787, 788, 789, 790, 791, 52, 1784, 53,
	0, 72, 0, 46, 0, 0, 0, 0, 333, 1202,
	0, 0, 1153, 1154, 1157, 0, 795, 1610, 799, 0,
	801, 802, 0, 761, 0, 98, 0, 858, 0, 0,
	0, 1724, 1258, 0, 102, 103, 0, 0, 0, 339,
	1263, 1264, 1265, -2, 358, 0, 339, 328, 272, 273,
	274, 321, 276, 321, 321, 321, 321, 333, 333, 333,
	333, 304, 305, 306, 307, 308, 0, 0, 291, 321,
	321, 321, 321, 311, 312, 313, 314, 315, 316, 317,
	318, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	323, 323, 323, 325, 325, 0, 42, 0, 343, 0,
	1157, 0, 1190, 1272, 1282, 0, 0, 0, 1272, 120,
	0, 0, 499, 529, 459, 488, 500, 0, 462, 463,
	-2, 0, 0, 449, 0, 451, 0, 359, 0, -2,
	0, 369, 0, 365, 369, 366, 369, 357, 370, 480,
	481, 482, 0, 559, 828, 0, 0, 0, 0, 0,
	565, 566, 567, 0, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 489, 490, 491, 492, 493, 494,
	495, 0, 0, 451, 0, 485, 0, 406, 407, 0,
	0, 410, 411, 412, 413, 0, 0, 416, 417, 418,
	845, 846, 419, 443, 444, 445, 420, 421, 422, 423,
	424, 425, 426, 437, 438, 439, 440, 441, 442, 427,
	428, 429, 430, 431, 434, 0, 135, 1181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 777, 860, 1293, 1294, 680, 681,
	0, 363, 364, 679, 679, 627, 666, 0, 679, 631,
	667, 632, 634, 633, 635, 648, 649, 679, 638, 677,
	678, 639, 640, 641, 642, 643, 644, 645, 662, 650,
	651, 652, 683, 0, 687, 688, 663, 664, 0, 700,
	704, 705, 706, 707, 0, 0, 736, 94, 741, 742,
	743, 744, 756, 749, 994, 876, 877, 878, 0, 880,
	883, 0, 978, 980, 885, 887, 989, 990, 991, 0,
	0, 0, 0, 0, 891, 895, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 915, 1111,
	1112, 1113, 932, 265, 266, 0, 933, 0, 792, 0,
	0, 0, 931, 0, 0, 0, 0, 769, 770, 1139,
	1136, 0, 0, 1096, 1098, 0, 0, 0, 0, 0,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1114, 0, 0, 0, 0, 0, 1132, 0, 934,
	935, 936, 0, 0, 0, 1281, 0, 130, 131, 0,
	0, 0, 0, 0, 1068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 779, 1142, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1246, 0, 0, 726, 727, 729, 0,
	862, 0, 843, 0, 0, 732, 0, 773, 0, 776,
	58, 60, 785, 786, 0, 803, 782, 54, 49, 0,
	0, 820, 1200, 333, 1222, 0, 337, 338, 1163, 1164,
	0, 1156, 1158, 1159, 77, 800, 796, 0, 874, 0,
	0, 857, 0, 806, 808, 809, 810, 840, 0, 813,
	0, 0, 0, 0, 0, 96, 859, 1253, 101, 0,
	0, 106, 107, 1254, 1255, 1256, 1257, 0, 518, -2,
	401, 163, 165, 166, 167, 158, -2, 331, 329, 330,
	275, 333, 333, 298, 299, 300, 301, 302, 303, 0,
	0, 292, 293, 294, 295, 286, 0, 287, 288, 289,
	0, 290, 376, 0, 1165, 344, 345, 347, 351, 0,
	0, 0, 372, 373, 0, 1181, 0, 0, 0, 1283,
	1282, 1282, 1282, 0, 153, 154, 155, 156, 554, 0,
	0, 530, 552, 553, 151, 0, 0, 159, 453, 452,
	0, 586, 0, 374, 0, 0, 369, 369, 354, 355,
	483, 0, 0, 561, 562, 563, 564, 0, 0, 0,
	451, 453, 339, 0, 408, 409, 414, 415, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 1178, 1179, 1180, 0, 0,
	611, 0, 0, 393, 92, 1271, 616, 676, 637, 668,
	676, 629, 636, 656, 696, 740, 0, 0, 0, 0,
	748, 0, 0, 884, 979, 981, 888, 0, 892, 896,
	0, 0, 0, 0, 0, 0, 0, 975, 999, 1000,
	0, 0, 1151, 0, 1137, 0, 0, 1007, 1099, 1100,
	0, 0, 0, 0, 0, 1018, 1019, 1020, 1021, 1022,
	0, 1024, 0, 0, 0, 1028, 1029, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 1039, 1040,
	1041, 1042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1053, 1054, 0, 960, 0, 0, 0, 0,
	960, 0, 995, 0, 0, 778, 0, 1101, 1102, 1103,
	1104, 1105, 1142, 1247, 725, 728, 730, 816, 863, 864,
	0, 0, 0, 0, 844, 1279, 771, 772, 775, -2,
	0, 0, 1144, 0, 0, 803, 874, 804, 0, 783,
	51, 819, 0, 1204, 1203, 1216, 1229, 334, 335, 336,
	1155, 0, 1160, 0, 1240, 0, 0, 1232, 0, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 0, 850,
	0, 0, 0, 0, 841, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 90, 91, 0, 0, 0, 104,
	105, 0, 0, 111, 340, 341, 144, 151, 403, 164,
	383, 0, 0, 271, 332, 296, 297, 0, 319, 0,
	0, 0, 396, 116, 1169, 1168, 351, 351, 346, 0,
	349, 0, 1284, 322, 0, 134, 0, 0, 0, 0,
	0, 140, 524, 0, 0, 531, 0, 0, 0, 457,
	0, 468, 469, 0, 558, -2, 607, 343, 0, 353,
	356, 829, 0, 0, 470, 0, 453, 474, 475, 486,
	435, 436, 433, 0, 0, 1191, 1192, 1197, 1195, 1196,
	121, 506, 508, 507, 511, 0, 0, 504, 0, 393,
	1165, 0, 615, 394, 395, 679, 679, 735, 95, 0,
	738, 0, 0, 0, 0, 889, 893, 793, 0, 0,
	321, 321, 1119, 321, 325, 1122, 321, 1124, 321, 1127,
	321, 1130, 1131, 0, 0, 0, 0, 1134, 1006, 1140,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 132, 133, 1068, 0, 0, 1070, 1072, 1073, 1034,
	1069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 959, 0, 961, 962, 0,
	0, 1056, 1057, 1058, 0, 0, 0, 0, 1066, 1066,
	1066, 996, 997, 0, 1143, 865, 870, 870, 870, 0,
	0, 0, 1266, 1267, 1145, 1146, 874, 1147, 805, 784,
	821, 1222, 0, 1215, 0, -2, 1224, 0, 0, 0,
	1230, 797, 78, 875, 81, 0, 1240, 1249, 0, 1231,
	1242, 1244, 0, 0, 0, 1236, 0, 874, 807, 836,
	838, 0, 833, 848, 849, 851, 0, 853, 0, 855,
	856, 818, 812, 814, 0, 0, 0, 98, 0, 874,
	874, 97, 0, 861, 108, 109, 110, 402, 168, 173,
	0, 0, 0, 178, 0, 180, 0, 384, 0, 268,
	270, 0, 0, 171, 333, 0, 333, 0, 326, 0,
	385, 397, 0, 1166, 1167, 0, 0, 348, 350, 0,
	1273, 136, 0, 0, 0, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 160, 454, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 351, 0, 0, 0, 351,
	351, 351, 599, 342, 0, 0, 583, 580, 471, 0,
	198, 199, 201, 0, 0, 473, 818, 1182, 1183, 1184,
	0, 1194, 1198, 124, 0, 0, 0, 0, 612, 613,
	614, 93, 622, 628, 737, 757, 882, 890, 894, 0,
	926, 1117, 333, 1120, 1121, 1123, 1125, 1126, 1128, 1129,
	927, 928, 0, 1002, 0, 1004, 1160, 0, 1138, 0,
	0, 1016, 0, 0, 0, 1025, 1026, 1027, 0, 0,
	1033, 0, 1035, 0, 1038, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 0, 954, 1151, 0, 1055,
	963, 964, 969, 969, 969, 1062, 0, 0, 0, 0,
	998, 0, 0, 0, 0, 842, -2, 62, 1147, 1149,
	0, 1209, 1207, 1207, 1217, 1218, 0, 0, 1225, 0,
	0, 0, 0, 82, 0, 0, 0, 1245, 0, 0,
	0, 0, 99, 1151, 830, 837, 0, 0, 831, 0,
	832, 852, 854, 811, -2, 815, 0, 874, 874, 88,
	89, 0, 174, 0, 176, 191, 192, 0, 179, 181,
	182, 267, 269, 0, 0, 309, 320, 310, 0, 0,
	398, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 818, 137,
	138, 139, 519, 0, 529, 0, 0, 0, 522, 0,
	460, 0, 0, 0, 351, 351, 351, 0, 0, 0,
	0, 560, 0, 568, 0, 0, 0, 202, 203, 0,
	1193, 505, 0, 122, 123, 0, 0, 510, 1106, 1118,
	0, 0, 0, 1135, 0, 0, 0, 0, 1023, 1031,
	0, 1071, 0, 958, 1151, 950, 0, 960, 970, 971,
	0, 960, 960, 960, 1067, 960, 960, 0, 871, 0,
	0, 0, 0, 862, 1149, 80, 0, 0, 1212, 0,
	1205, 1208, 1206, 1219, 0, 0, 1226, 0, 1228, 0,
	1250, 1251, 1243, 0, 1235, 1238, 1234, 1237, 1160, 834,
	0, 839, 0, 1151, 87, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 327, 0, 0, 0, 520, 0, 532, 523,
	0, 597, 0, 601, 0, 0, 0, 604, 605, 606,
	378, 584, 581, 582, 472, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1001, 1003, 1005, 1014, 1015, 1115,
	1116, 1032, 1036, 0, 950, 957, 951, 0, 937, 938,
	955, 0, 967, 968, 0, 0, 0, 0, 0, 0,
	867, 824, 825, 872, 873, 0, 0, 817, 79, 1150,
	1148, 1201, 0, 1210, 1211, 1220, 1221, 1227, 0, 1233,
	0, 85, 0, 0, 0, 1160, 175, 0, 185, 0,
	528, 0, 531, 521, 595, 596, 0, 608, 600, 602,
	603, 1185, 0, 0, 0, 512, 925, 0, 0, 0,
	1068, 956, 952, 0, 947, 0, 1485, 1730, 1059, 1060,
	1061, 1063, 1064, 1065, 0, 866, 868, 869, 1213, 1214,
	1241, 1239, 835, 842, 0, 86, 379, 383, 1185, 0,
	0, 0, 502, 1187, 127, 128, 446, 447, 448, 121,
	1107, 0, 1110, 0, 0, 948, 949, 939, 940, 941,
	826, 827, 533, 0, 535, 0, -2, 380, 381, 0,
	169, 186, 187, 0, 0, 190, 183, 184, 117, 0,
	0, 609, 0, 1188, 1189, 124, 1108, 1037, 0, 534,
	0, 0, 339, 0, 544, 382, 0, 0, 0, 188,
	189, 556, 0, 0, 509, 0, 953, 536, 537, 545,
	0, 386, 388, 389, 0, 0, 387, 525, 0, 556,
	1186, 0, 0, 546, 542, 390, 391, 392, 557, 526,
	1109, 0, 538, 539, 540, 0, 549, 550, 0, 541,
	0, 0, 551, 0, 547, 548,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 599,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:546
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:551
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:556
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:592
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:606
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:611
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:615
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:621
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:627
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:633
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:637
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:646
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:656
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:662
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:865
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:869
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:875
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:885
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:889
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:898
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:899
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:903
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:913
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:917
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:923
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:927
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:936
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:958
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:962
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:968
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:972
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:976
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:982
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:986
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:990
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:994
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1000
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1004
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1010
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1016
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1023
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1032
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1036
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1052
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1067
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1072
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1078
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1098
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1104
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1120
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1134
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1139
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1144
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1149
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1156
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1163
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1174
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1185
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1191
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1195
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1213
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1223
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1229
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1233
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1240
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1244
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1250
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1260
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1265
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1298
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1307
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1386
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1390
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1395
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1410
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1416
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1421
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1469
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1473
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1508
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1512
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1516
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1520
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1524
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1740
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1744
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1748
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1752
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1983
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1988
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1992
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2000
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2004
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2010
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2067
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2082
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2087
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2091
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2097
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2107
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2111
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2116
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2120
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2136
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2140
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2144
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2148
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2152
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2191
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2220
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2230
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2236
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2240
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2246
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2250
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2256
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2262
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2266
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2270
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2274
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2283
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2289
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2295
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2301
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2307
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2311
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2315
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2319
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2323
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2341
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2358
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2364
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2378
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2440
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2444
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2448
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2452
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2456
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2460
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2464
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2468
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2472
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2476
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2480
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2484
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2488
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2492
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2496
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2547
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2551
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2560
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2569
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2573
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2577
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2581
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2585
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2591
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2645
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2685
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2689
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2693
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2699
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2709
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2721
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2725
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2729
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2733
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2737
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2741
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2774
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2778
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2804
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2814
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2818
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2822
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2835
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2867
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2874
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2881
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2888
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2899
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2908
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2916
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2925
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2932
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2944
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2953
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2968
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2973
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2977
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2982
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2986
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2992
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2998
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3004
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3008
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3014
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3018
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3024
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3030
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3036
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3042
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3048
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3052
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3056
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3060
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3066
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3072
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3078
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3082
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3086
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3092
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3096
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3101
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3105
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3110
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3114
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3120
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3124
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3128
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3132
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3136
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3140
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3144
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3148
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3152
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3156
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3160
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3164
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3168
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3172
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3176
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3180
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3184
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3188
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3192
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3196
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3200
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3204
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3213
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3217
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3224
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3234
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3239
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3243
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3248
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3253
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3258
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3263
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3268
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3274
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3280
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3287
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3294
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3301
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3309
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3313
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3319
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3325
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3331
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3337
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3343
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3349
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3361
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3383
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3387
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3416
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3499
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3503
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3583
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3610
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3622
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3626
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = "extended "
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3646
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3650
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3666
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3674
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3684
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3688
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3698
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3704
		{
			yyVAL.empty = struct{}{}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.empty = struct{}{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3728
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3752
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3767
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3772
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3790
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3794
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3798
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3802
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3806
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3810
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.str = yyDollar[1].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3887
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3891
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3897
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3903
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3907
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3911
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3915
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3981
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3997
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4001
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4026
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			setAllowComments(yylex, true)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4050
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4054
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4060
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4064
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4068
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.str = SQLCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4125
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4144
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4149
		{
			yyVAL.strs = nil
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4153
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4157
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4161
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4165
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = SQLCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = DistinctStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = DistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = StraightJoinHint
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4201
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4205
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4211
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4215
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4219
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4223
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4228
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4248
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4252
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4258
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4264
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4268
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4278
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4282
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4286
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4290
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4296
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4300
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4306
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4310
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4319
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4325
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4335
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4345
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4349
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4357
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4363
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4380
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4384
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4388
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4392
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4398
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4400
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4410
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4412
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4415
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4420
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4428
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4441
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4445
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4449
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4455
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4461
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4465
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4469
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4473
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4479
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4483
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4493
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4513
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4522
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4528
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4532
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4538
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4542
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4546
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4550
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4555
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4559
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4563
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4567
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4584
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4588
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4592
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4596
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4600
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4604
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4608
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4703
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4707
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4711
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4715
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4719
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4723
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4727
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4765
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4769
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4773
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4777
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4781
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4785
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4789
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4793
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4797
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4817
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4835
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4839
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4843
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4849
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4853
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4859
		{
			yyLOCAL = CurrentRowType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4863
		{
			yyLOCAL = UnboundedPrecedingType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4867
		{
			yyLOCAL = UnboundedFollowingType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4873
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4877
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4881
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4885
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4889
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4895
		{
			yyLOCAL = &FramePoint{Type: yyDollar[1].framePointTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4899
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4903
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4912
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4918
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4922
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion(), IsBetween: true}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4931
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4937
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent.String(), PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4942
		{
			yyLOCAL = &WindowSpecification{PartitionClause: yyDollar[1].exprsUnion(), OrderClause: yyDollar[2].orderByUnion(), FrameClause: yyDollar[3].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4948
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4952
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:4957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:4964
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:4970
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:4974
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:4980
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:4984
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:4990
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:4994
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:4999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5006
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5012
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5016
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = ""
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5033
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5037
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5044
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5048
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5052
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5056
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5062
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5066
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5070
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5074
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5078
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5082
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5086
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5092
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5096
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5100
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5107
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5113
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5117
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			val := convertStringToInt(yyDollar[3].str)
			yyLOCAL = &NtileExpr{IntValue: &val, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &NtileExpr{VarValue: yyDollar[3].colIdent, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &NtileExpr{IsNull: true, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IntValue: &val, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IsNull: true, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IntValue: &val, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IsNull: true, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5447
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5453
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5457
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5475
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5479
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5483
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5487
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5491
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5495
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5499
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5503
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5507
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5511
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5515
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5521
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5525
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5529
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5533
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5537
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5541
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5545
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5549
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5553
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5608
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5612
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5616
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5620
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5624
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5648
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5652
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5658
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5662
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5666
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5670
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5674
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5680
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5684
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5688
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5692
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5696
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5700
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5704
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5708
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5712
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5716
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5731
		{
			yyVAL.str = string("")
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5741
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5745
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5751
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5766
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5770
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5774
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5803
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5821
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5827
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5833
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5837
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5843
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5848
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5852
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5856
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5865
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5871
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5875
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5879
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5888
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5892
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5896
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5900
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5907
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5911
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5915
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5919
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5925
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5929
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5933
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = ""
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5942
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5950
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5955
		{
			yyVAL.str = ""
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5959
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5965
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5969
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5974
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5978
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5983
		{
			yyVAL.str = "cascaded"
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5991
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6000
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6006
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6012
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6018
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6027
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6031
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6036
		{
			yyVAL.str = ""
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6040
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6046
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6050
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6056
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6060
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6064
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6069
		{
			yyVAL.str = ""
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6073
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6077
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = ""
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = " header"
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6091
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6095
		{
			yyVAL.str = " manifest on"
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6099
		{
			yyVAL.str = " manifest off"
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6104
		{
			yyVAL.str = ""
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6108
		{
			yyVAL.str = " overwrite on"
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6112
		{
			yyVAL.str = " overwrite off"
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6118
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6123
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6127
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6133
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6137
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6152
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6162
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6166
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6172
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6176
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6180
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6185
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6189
		{
			yyVAL.str = " optionally"
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6202
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6206
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6210
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6214
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6218
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6224
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6228
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6232
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6236
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6245
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6251
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6255
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6261
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6265
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6271
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6275
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6290
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6294
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6300
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6306
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6310
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6316
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6320
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6324
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6328
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6332
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6340
		{
			yyVAL.str = "charset"
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6367
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6372
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6377
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6379
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6382
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6384
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6387
		{
			yyVAL.empty = struct{}{}
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6389
		{
			yyVAL.empty = struct{}{}
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6391
		{
			yyVAL.empty = struct{}{}
		}
	case 1279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6395
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6404
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6411
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6421
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6425
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6432
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6438
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6442
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6448
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6452
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6459
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6972
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6981
		{
			decNesting(yylex)
		}
	case 1785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6986
		{
			skipToEnd(yylex)
		}
	case 1786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6991
		{
			skipToEnd(yylex)
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6995
		{
			skipToEnd(yylex)
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6999
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
