// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VSCHEMA = 57710
const NAMES = 57711
const GLOBAL = 57712
const SESSION = 57713
const ISOLATION = 57714
const LEVEL = 57715
const READ = 57716
const WRITE = 57717
const ONLY = 57718
const REPEATABLE = 57719
const COMMITTED = 57720
const UNCOMMITTED = 57721
const SERIALIZABLE = 57722
const CURRENT_TIMESTAMP = 57723
const DATABASE = 57724
const CURRENT_DATE = 57725
const CURRENT_TIME = 57726
const LOCALTIME = 57727
const LOCALTIMESTAMP = 57728
const CURRENT_USER = 57729
const UTC_DATE = 57730
const UTC_TIME = 57731
const UTC_TIMESTAMP = 57732
const DAY = 57733
const DAY_HOUR = 57734
const DAY_MICROSECOND = 57735
const DAY_MINUTE = 57736
const DAY_SECOND = 57737
const HOUR = 57738
const HOUR_MICROSECOND = 57739
const HOUR_MINUTE = 57740
const HOUR_SECOND = 57741
const MICROSECOND = 57742
const MINUTE = 57743
const MINUTE_MICROSECOND = 57744
const MINUTE_SECOND = 57745
const MONTH = 57746
const QUARTER = 57747
const SECOND = 57748
const SECOND_MICROSECOND = 57749
const YEAR_MONTH = 57750
const WEEK = 57751
const REPLACE = 57752
const CONVERT = 57753
const CAST = 57754
const SUBSTR = 57755
const SUBSTRING = 57756
const GROUP_CONCAT = 57757
const SEPARATOR = 57758
const TIMESTAMPADD = 57759
const TIMESTAMPDIFF = 57760
const WEIGHT_STRING = 57761
const LTRIM = 57762
const RTRIM = 57763
const TRIM = 57764
const JSON_ARRAY = 57765
const JSON_OBJECT = 57766
const JSON_QUOTE = 57767
const JSON_DEPTH = 57768
const JSON_TYPE = 57769
const JSON_LENGTH = 57770
const JSON_VALID = 57771
const MATCH = 57772
const AGAINST = 57773
const BOOLEAN = 57774
const LANGUAGE = 57775
const WITH = 57776
const QUERY = 57777
const EXPANSION = 57778
const WITHOUT = 57779
const VALIDATION = 57780
const UNUSED = 57781
const ARRAY = 57782
const CUME_DIST = 57783
const DESCRIPTION = 57784
const DENSE_RANK = 57785
const EMPTY = 57786
const EXCEPT = 57787
const FIRST_VALUE = 57788
const GROUPING = 57789
const GROUPS = 57790
const JSON_TABLE = 57791
const LAG = 57792
const LAST_VALUE = 57793
const LATERAL = 57794
const LEAD = 57795
const NTH_VALUE = 57796
const NTILE = 57797
const OF = 57798
const OVER = 57799
const PERCENT_RANK = 57800
const RANK = 57801
const RECURSIVE = 57802
const ROW_NUMBER = 57803
const SYSTEM = 57804
const WINDOW = 57805
const ACTIVE = 57806
const ADMIN = 57807
const BUCKETS = 57808
const CLONE = 57809
const COMPONENT = 57810
const DEFINITION = 57811
const ENFORCED = 57812
const EXCLUDE = 57813
const FOLLOWING = 57814
const GEOMCOLLECTION = 57815
const GET_MASTER_PUBLIC_KEY = 57816
const HISTOGRAM = 57817
const HISTORY = 57818
const INACTIVE = 57819
const INVISIBLE = 57820
const LOCKED = 57821
const MASTER_COMPRESSION_ALGORITHMS = 57822
const MASTER_PUBLIC_KEY_PATH = 57823
const MASTER_TLS_CIPHERSUITES = 57824
const MASTER_ZSTD_COMPRESSION_LEVEL = 57825
const NESTED = 57826
const NETWORK_NAMESPACE = 57827
const NOWAIT = 57828
const NULLS = 57829
const OJ = 57830
const OLD = 57831
const OPTIONAL = 57832
const ORDINALITY = 57833
const ORGANIZATION = 57834
const OTHERS = 57835
const PATH = 57836
const PERSIST = 57837
const PERSIST_ONLY = 57838
const PRECEDING = 57839
const PRIVILEGE_CHECKS_USER = 57840
const PROCESS = 57841
const RANDOM = 57842
const REFERENCE = 57843
const REQUIRE_ROW_FORMAT = 57844
const RESOURCE = 57845
const RESPECT = 57846
const RESTART = 57847
const RETAIN = 57848
const REUSE = 57849
const ROLE = 57850
const SECONDARY = 57851
const SECONDARY_ENGINE = 57852
const SECONDARY_LOAD = 57853
const SECONDARY_UNLOAD = 57854
const SKIP = 57855
const SRID = 57856
const THREAD_PRIORITY = 57857
const TIES = 57858
const UNBOUNDED = 57859
const VCPU = 57860
const VISIBLE = 57861
const FORMAT = 57862
const TREE = 57863
const VITESS = 57864
const TRADITIONAL = 57865
const LOCAL = 57866
const LOW_PRIORITY = 57867
const NO_WRITE_TO_BINLOG = 57868
const LOGS = 57869
const ERROR = 57870
const GENERAL = 57871
const HOSTS = 57872
const OPTIMIZER_COSTS = 57873
const USER_RESOURCES = 57874
const SLOW = 57875
const CHANNEL = 57876
const RELAY = 57877
const EXPORT = 57878
const AVG_ROW_LENGTH = 57879
const CONNECTION = 57880
const CHECKSUM = 57881
const DELAY_KEY_WRITE = 57882
const ENCRYPTION = 57883
const ENGINE = 57884
const INSERT_METHOD = 57885
const MAX_ROWS = 57886
const MIN_ROWS = 57887
const PACK_KEYS = 57888
const PASSWORD = 57889
const FIXED = 57890
const DYNAMIC = 57891
const COMPRESSED = 57892
const REDUNDANT = 57893
const COMPACT = 57894
const ROW_FORMAT = 57895
const STATS_AUTO_RECALC = 57896
const STATS_PERSISTENT = 57897
const STATS_SAMPLE_PAGES = 57898
const STORAGE = 57899
const MEMORY = 57900
const DISK = 57901
const PARTITIONS = 57902
const LINEAR = 57903
const RANGE = 57904
const LIST = 57905
const SUBPARTITION = 57906
const SUBPARTITIONS = 57907
const HASH = 57908

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	584, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 454,
	-1, 55,
	35, 652,
	231, 652,
	242, 652,
	277, 666,
	278, 666,
	-2, 654,
	-1, 60,
	233, 677,
	-2, 675,
	-1, 114,
	230, 1186,
	-2, 119,
	-1, 116,
	1, 146,
	584, 146,
	-2, 151,
	-1, 126,
	132, 357,
	236, 357,
	-2, 448,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 463,
	-1, 654,
	215, 1207,
	-2, 1203,
	-1, 655,
	215, 1208,
	-2, 1204,
	-1, 729,
	59, 745,
	-2, 760,
	-1, 766,
	147, 1594,
	-2, 112,
	-1, 767,
	147, 1450,
	-2, 113,
	-1, 773,
	147, 1523,
	-2, 1180,
	-1, 920,
	147, 1381,
	-2, 1177,
	-1, 958,
	241, 41,
	246, 41,
	-2, 368,
	-1, 1035,
	1, 502,
	584, 502,
	-2, 151,
	-1, 1260,
	59, 746,
	-2, 765,
	-1, 1261,
	59, 747,
	-2, 766,
	-1, 1314,
	131, 151,
	171, 151,
	327, 151,
	-2, 398,
	-1, 1391,
	132, 357,
	236, 357,
	-2, 448,
	-1, 1400,
	241, 42,
	246, 42,
	-2, 369,
	-1, 1687,
	215, 1212,
	-2, 1206,
	-1, 1770,
	131, 151,
	171, 151,
	327, 151,
	-2, 399,
	-1, 1777,
	25, 170,
	-2, 172,
	-1, 2000,
	86, 39,
	-2, 802,
	-1, 2052,
	77, 94,
	86, 94,
	-2, 822,
	-1, 2241,
	49, 1148,
	-2, 1142,
	-1, 2423,
	86, 39,
	-2, 803,
	-1, 2461,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 794,
	-1, 2727,
	22, 1525,
	32, 1525,
	172, 1525,
	253, 1525,
	307, 1525,
	308, 1525,
	309, 1525,
	310, 1525,
	311, 1525,
	312, 1525,
	313, 1525,
	315, 1525,
	316, 1525,
	317, 1525,
	318, 1525,
	319, 1525,
	320, 1525,
	321, 1525,
	322, 1525,
	323, 1525,
	324, 1525,
	325, 1525,
	326, 1525,
	328, 1525,
	330, 1525,
	331, 1525,
	332, 1525,
	333, 1525,
	334, 1525,
	335, 1525,
	336, 1525,
	337, 1525,
	338, 1525,
	341, 1525,
	342, 1525,
	343, 1525,
	344, 1525,
	345, 1525,
	346, 1525,
	347, 1525,
	348, 1525,
	349, 1525,
	449, 1525,
	-2, 542,
}

const yyPrivate = 57344

const yyLast = 40223

var yyAct = [...]int{
	654, 663, 2793, 2209, 2775, 2792, 2669, 2769, 1767, 2725,
	2729, 2522, 2364, 1721, 1317, 2709, 656, 2294, 2301, 1701,
	1099, 2335, 2628, 1964, 744, 2252, 2255, 96, 2552, 1239,
	3, 1830, 722, 2645, 1988, 2346, 2303, 2347, 649, 648,
	37, 583, 2253, 2256, 1275, 2432, 2023, 2426, 2557, 2207,
	2208, 182, 657, 609, 182, 2452, 547, 182, 2349, 1725,
	2046, 646, 563, 647, 182, 2250, 1740, 2242, 2015, 2084,
	580, 2418, 182, 1800, 2154, 579, 2113, 1820, 587, 2085,
	1805, 2086, 1756, 745, 1371, 1745, 581, 182, 2007, 154,
	1262, 2171, 771, 2035, 38, 1744, 1607, 575, 1990, 923,
	1597, 1398, 1667, 1819, 724, 36, 988, 140, 1807, 563,
	1839, 2078, 563, 182, 563, 1872, 1681, 726, 953, 730,
	948, 95, 1306, 91, 1284, 2054, 1747, 1703, 1555, 768,
	1242, 1182, 1619, 1574, 1118, 1405, 592, 747, 959, 1506,
	1502, 927, 930, 1817, 1488, 1732, 954, 955, 1303, 931,
	1796, 1305, 1289, 1511, 1097, 1663, 1092, 1366, 736, 956,
	1390, 98, 734, 123, 1031, 124, 76, 758, 97, 157,
	570, 117, 1189, 2678, 732, 2106, 89, 966, 1694, 118,
	1185, 1726, 2776, 2332, 1832, 731, 2133, 2132, 1047, 2104,
	1870, 85, 1832, 1833, 1834, 2162, 2163, 733, 77, 752,
	2803, 757, 1562, 1474, 8, 1561, 7, 6, 2796, 125,
	2802, 1560, 1414, 1559, 738, 90, 1558, 119, 184, 185,
	186, 1698, 1699, 1557, 1544, 573, 2743, 574, 1119, 1986,
	924, 2238, 1549, 2017, 2789, 993, 571, 520, 2753, 2766,
	2487, 934, 1567, 2624, 725, 723, 939, 2318, 2623, 990,
	2515, 1684, 78, 2516, 1119, 80, 992, 765, 991, 2788,
	2719, 1910, 1004, 1005, 78, 1008, 1009, 1010, 1011, 102,
	739, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 119, 969, 945, 746,
	772, 2779, 2795, 1812, 2803, 2689, 944, 184, 185, 186,
	2764, 946, 2523, 78, 2710, 970, 994, 995, 996, 1858,
	104, 105, 2718, 108, 2170, 2398, 114, 1810, 2688, 179,
	1380, 1307, 515, 1308, 2141, 1908, 1987, 178, 2140, 87,
	2290, 1001, 2063, 1129, 78, 2062, 1762, 1763, 2064, 1006,
	550, 87, 718, 719, 720, 721, 1076, 1034, 729, 1761,
	119, 120, 2570, 2291, 2292, 2161, 1907, 1066, 2026, 1129,
	716, 1083, 715, 1085, 162, 1151, 1054, 2107, 2670, 1067,
	1060, 1055, 1700, 2075, 1649, 2429, 760, 761, 1095, 2197,
	87, 537, 2389, 2027, 1780, 1779, 2633, 1152, 1153, 1154,
	1155, 1156, 1157, 1158, 1160, 1159, 1161, 1162, 1071, 1072,
	2366, 1082, 1084, 1054, 561, 1548, 2068, 2387, 1055, 1494,
	565, 87, 559, 1246, 550, 550, 1053, 938, 1052, 2114,
	940, 159, 2359, 160, 550, 1840, 1030, 536, 1125, 2136,
	2360, 1117, 1550, 1551, 1552, 1884, 1881, 1883, 1882, 534,
	1464, 1873, 2778, 177, 943, 1489, 1040, 1041, 1089, 1878,
	1068, 1061, 550, 1075, 1125, 1007, 1809, 1036, 178, 1641,
	1630, 1631, 1632, 1633, 1643, 1634, 1635, 1636, 1648, 1644,
	1637, 1638, 1645, 1646, 1647, 1639, 1640, 1642, 1043, 531,
	1094, 2367, 120, 2149, 1465, 1889, 1466, 2744, 545, 1073,
	1069, 1070, 947, 1877, 1080, 162, 943, 1029, 1081, 1074,
	1013, 1012, 941, 542, 1879, 1886, 2368, 1887, 1086, 1888,
	1875, 2508, 977, 2343, 943, 182, 935, 182, 975, 1843,
	182, 949, 87, 937, 936, 950, 1741, 950, 986, 2307,
	1079, 2198, 985, 1249, 984, 1876, 551, 983, 1087, 982,
	981, 980, 979, 974, 2783, 2762, 928, 1383, 563, 563,
	563, 163, 159, 987, 160, 968, 1163, 1991, 1993, 968,
	168, 1033, 1163, 1503, 2773, 1404, 563, 563, 521, 961,
	523, 538, 941, 553, 177, 552, 527, 928, 525, 529,
	539, 530, 962, 524, 1003, 535, 1908, 1818, 526, 540,
	541, 543, 557, 556, 544, 2317, 533, 554, 1111, 759,
	1124, 1121, 1122, 1123, 1128, 1130, 1127, 37, 1126, 928,
	551, 551, 1495, 926, 942, 1120, 2150, 1864, 1378, 1499,
	551, 968, 2325, 2677, 2342, 2105, 1124, 1121, 1122, 1123,
	1128, 1130, 1127, 1105, 1126, 2153, 997, 2135, 1377, 2166,
	2138, 1120, 2108, 1727, 1728, 1922, 1376, 968, 551, 1064,
	2125, 2172, 1032, 967, 2430, 978, 1860, 967, 971, 961,
	1500, 976, 971, 961, 1374, 519, 942, 1811, 972, 1403,
	514, 81, 972, 155, 1088, 1166, 1167, 1168, 1169, 2666,
	2634, 2468, 163, 2148, 942, 1174, 2147, 1177, 973, 2448,
	1909, 168, 968, 2059, 2687, 86, 1493, 1164, 1165, 2022,
	1978, 1693, 2620, 1101, 1102, 1237, 1293, 86, 1219, 1045,
	1050, 1768, 1056, 1057, 1058, 1059, 182, 1992, 116, 967,
	563, 563, 2794, 1163, 968, 961, 964, 965, 1162, 928,
	2289, 1170, 2174, 958, 962, 1096, 182, 1476, 1475, 1477,
	1478, 1479, 1232, 1077, 2156, 967, 86, 1250, 111, 2155,
	555, 741, 1093, 724, 1255, 563, 1051, 1039, 1253, 182,
	2683, 2190, 1042, 1252, 563, 77, 1512, 1256, 548, 2504,
	563, 1238, 1114, 726, 1112, 1113, 2771, 86, 1049, 2772,
	2442, 2770, 989, 549, 768, 1191, 1874, 1496, 1309, 1187,
	967, 1188, 1002, 2156, 2184, 2183, 2182, 2176, 2155, 2180,
	1115, 2175, 1620, 2173, 155, 184, 185, 186, 2178, 1599,
	1254, 1620, 2097, 1936, 95, 1133, 1134, 2177, 112, 1134,
	2566, 2479, 967, 1225, 1226, 1227, 1228, 2478, 961, 964,
	965, 1847, 928, 1238, 2179, 2181, 958, 962, 1490, 1151,
	1491, 2165, 1243, 1492, 1859, 1063, 1413, 1412, 1402, 1857,
	2297, 1855, 2758, 977, 98, 975, 1065, 957, 2469, 1852,
	1135, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1159,
	1161, 1162, 2695, 2786, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1240, 1078, 1852, 1090, 1600,
	173, 174, 175, 176, 723, 2298, 1856, 1579, 1274, 1035,
	725, 1155, 1156, 1157, 1158, 1160, 1159, 1161, 1162, 1513,
	1271, 1580, 1581, 1578, 2696, 1251, 2735, 1294, 1048, 2784,
	2300, 87, 2615, 182, 1854, 2538, 2659, 1367, 1299, 1300,
	2733, 1569, 1571, 1572, 2295, 1577, 1375, 2537, 1304, 2737,
	2738, 1914, 1915, 1916, 1269, 772, 2486, 2305, 2306, 2485,
	2759, 2305, 2306, 1483, 2734, 1570, 1481, 563, 2296, 1400,
	1157, 1158, 1160, 1159, 1161, 1162, 1471, 1409, 2660, 2333,
	2323, 1411, 2082, 2081, 563, 563, 1815, 563, 1484, 563,
	563, 1269, 563, 563, 563, 563, 563, 563, 1624, 1469,
	2302, 1132, 1625, 1133, 1134, 1468, 1467, 563, 1257, 1458,
	2192, 182, 1447, 2785, 1452, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 1482, 182, 1135, 1480,
	1449, 173, 174, 175, 176, 1448, 1135, 1423, 563, 1470,
	182, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1159, 1161,
	1162, 1501, 2663, 1278, 563, 2662, 182, 763, 1410, 2661,
	2565, 2304, 2563, 1381, 1382, 2304, 1396, 668, 669, 670,
	1389, 2534, 182, 2307, 2483, 2475, 2091, 2307, 1408, 182,
	1135, 2079, 1234, 1442, 1443, 184, 185, 186, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 563, 563, 563,
	1868, 1927, 1279, 1733, 1734, 1867, 1444, 1724, 1373, 655,
	1926, 1407, 1151, 1706, 1545, 1147, 2363, 1148, 2644, 1269,
	1509, 1472, 1386, 1450, 1451, 1387, 1399, 1385, 182, 1456,
	1457, 1149, 1150, 1146, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1160, 1159, 1161, 1162, 184, 185, 186, 1508, 2476,
	1459, 1455, 1406, 1406, 1460, 1454, 1453, 1280, 1091, 1132,
	183, 1133, 1134, 183, 1104, 1135, 183, 1132, 2641, 1133,
	1134, 564, 94, 183, 1598, 2640, 1604, 1604, 1601, 1605,
	2609, 183, 2299, 2395, 2608, 1135, 2521, 1610, 563, 1445,
	2251, 1602, 1602, 1504, 2115, 1575, 183, 1416, 2094, 1417,
	2441, 1419, 1421, 563, 563, 1425, 1427, 1429, 1431, 1433,
	2031, 1132, 1776, 1133, 1134, 119, 2441, 945, 564, 1379,
	2443, 564, 183, 564, 1573, 944, 1518, 2013, 2777, 1582,
	1269, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1664, 1135, 1583, 2741, 1269, 1135,
	1685, 1539, 1540, 1541, 2024, 182, 1542, 2749, 1269, 1516,
	563, 184, 185, 186, 2032, 2066, 1520, 1965, 1522, 1523,
	1524, 1525, 1131, 1621, 2682, 1529, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1137, 182, 1664, 2013, 563, 1711, 1543,
	1712, 2013, 2716, 1576, 100, 1135, 1132, 182, 1133, 1134,
	2032, 563, 92, 2013, 2703, 1932, 182, 2412, 182, 94,
	182, 182, 563, 93, 2284, 563, 1132, 1853, 1133, 1134,
	2013, 2699, 1687, 1908, 1685, 2032, 563, 2393, 1269, 2691,
	1269, 95, 768, 2336, 2313, 768, 1777, 1152, 1153, 1154,
	1155, 1156, 1157, 1158, 1160, 1159, 1161, 1162, 1689, 1690,
	95, 2585, 2587, 2586, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 615, 1923, 1717, 2013, 2679, 2706, 1269, 1135, 1686,
	1743, 184, 185, 186, 1852, 1828, 1132, 1931, 1133, 1134,
	1132, 563, 1133, 1134, 2513, 2676, 2226, 1821, 1822, 1823,
	2412, 1269, 1825, 1827, 2013, 2616, 1687, 2024, 1786, 1787,
	1788, 1789, 2513, 1269, 1135, 738, 563, 1760, 1135, 1514,
	1515, 1705, 563, 1409, 1771, 1923, 1409, 1781, 1409, 1782,
	1783, 1784, 1785, 1519, 1851, 1772, 1132, 1958, 1133, 1134,
	1526, 1527, 1528, 1606, 1942, 1792, 1793, 1794, 1795, 1754,
	1612, 1613, 1719, 1738, 1775, 1841, 1941, 92, 1852, 1802,
	1973, 1269, 1835, 1736, 563, 1731, 1598, 1808, 93, 1273,
	1758, 1598, 1598, 1135, 1759, 184, 185, 186, 2441, 1826,
	2013, 2511, 1774, 1773, 1852, 1269, 2446, 1269, 2315, 2314,
	1135, 1696, 1688, 2311, 2312, 1691, 1692, 2760, 2311, 2310,
	1953, 2674, 1553, 772, 2365, 1498, 772, 182, 1301, 1132,
	952, 1133, 1134, 1135, 182, 1838, 951, 1135, 87, 182,
	182, 2630, 1269, 182, 1846, 182, 728, 1849, 1803, 1850,
	1282, 1716, 182, 1798, 1799, 2032, 1269, 1814, 1816, 182,
	1813, 1276, 1135, 1824, 2606, 1132, 1135, 1133, 1134, 1132,
	1135, 1133, 1134, 2577, 1151, 2463, 1921, 2503, 1844, 2500,
	1848, 1803, 2481, 1861, 1845, 2404, 1863, 182, 563, 1923,
	1269, 1865, 1866, 1269, 969, 1862, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1160, 1159, 1161, 1162, 1151, 1135, 1908,
	2134, 2403, 970, 1370, 2119, 1281, 2591, 2592, 2111, 2112,
	1269, 1372, 1406, 87, 1132, 1801, 1133, 1134, 1135, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1160, 1159, 1161, 1162,
	2361, 1132, 1135, 1133, 1134, 2613, 2338, 1135, 2334, 2505,
	2120, 1135, 2414, 1797, 183, 1871, 183, 1575, 1791, 183,
	2013, 2012, 1131, 1269, 1132, 1135, 1133, 1134, 1132, 1790,
	1133, 1134, 1370, 1369, 1486, 650, 1401, 610, 612, 651,
	652, 1892, 608, 611, 653, 1315, 1314, 564, 564, 564,
	1918, 2083, 1920, 1132, 1397, 1133, 1134, 1132, 1368, 1133,
	1134, 1132, 2055, 1133, 1134, 564, 564, 1919, 113, 1135,
	2410, 613, 614, 2584, 2588, 2589, 2590, 2593, 2594, 2595,
	2603, 2605, 638, 2604, 2401, 101, 2088, 2631, 1906, 2400,
	1945, 2009, 1034, 1968, 2055, 1135, 100, 182, 99, 1132,
	2087, 1133, 1134, 1899, 1900, 182, 94, 1967, 1902, 1604,
	563, 1997, 1917, 2492, 1984, 1576, 563, 1903, 1812, 1132,
	1435, 1133, 1134, 2001, 1602, 2056, 101, 563, 1135, 2453,
	2454, 2488, 1709, 1132, 2058, 1133, 1134, 100, 1132, 99,
	1133, 1134, 1132, 2746, 1133, 1134, 1438, 2088, 94, 2801,
	182, 1935, 2799, 2459, 182, 2755, 1132, 2056, 1133, 1134,
	2493, 2494, 2730, 1923, 1135, 1269, 1908, 1436, 1437, 2065,
	2456, 2028, 2330, 2329, 1135, 2328, 2458, 1966, 2251, 2098,
	37, 2489, 2490, 2491, 2014, 1893, 1687, 1546, 1951, 2048,
	1277, 2547, 2270, 2546, 2273, 1925, 1439, 1440, 1441, 2274,
	1132, 2269, 1133, 1134, 2271, 2717, 1269, 1135, 2010, 2272,
	1963, 1723, 1715, 563, 1135, 183, 2447, 2658, 182, 564,
	564, 2231, 1135, 1243, 2230, 182, 1132, 1985, 1133, 1134,
	2243, 2245, 1995, 1686, 2117, 183, 2558, 563, 2556, 2246,
	2006, 2545, 2076, 2077, 563, 2437, 1962, 2240, 1409, 1409,
	2110, 1497, 714, 563, 564, 2047, 2021, 2011, 183, 1132,
	2069, 1133, 1134, 564, 2309, 2131, 2073, 1933, 2092, 564,
	1135, 2275, 2130, 2041, 2042, 999, 182, 182, 182, 182,
	182, 2057, 2053, 2060, 1808, 1616, 2375, 998, 2087, 1961,
	2067, 2070, 2434, 182, 182, 1132, 1959, 1133, 1134, 1617,
	2433, 92, 742, 2080, 1955, 1132, 2159, 1133, 1134, 182,
	743, 2127, 93, 1103, 2126, 2089, 2090, 2037, 2040, 2041,
	2042, 2038, 92, 2039, 2043, 2099, 2100, 2101, 1598, 94,
	120, 2439, 2095, 93, 1975, 1976, 1733, 1734, 1132, 2129,
	1133, 1134, 94, 1389, 2781, 1132, 101, 1133, 1134, 2121,
	2122, 2326, 1954, 1132, 1896, 1133, 1134, 100, 2675, 99,
	2626, 724, 2308, 2045, 1885, 1604, 2189, 1604, 94, 1720,
	1604, 2419, 2128, 750, 751, 1604, 2229, 1912, 101, 563,
	1602, 99, 1602, 2650, 2228, 1602, 2649, 2564, 2562, 100,
	1602, 99, 2561, 2554, 2501, 563, 2438, 2167, 2436, 2220,
	2339, 1132, 1836, 1133, 1134, 1384, 101, 749, 100, 2168,
	182, 2553, 2427, 2024, 563, 2212, 2009, 100, 2185, 2215,
	2169, 2151, 183, 563, 2216, 2757, 2756, 103, 2186, 2199,
	563, 563, 1943, 182, 182, 182, 182, 182, 1707, 1295,
	1286, 2757, 2210, 2220, 2210, 182, 2664, 2210, 2248, 2474,
	182, 88, 2210, 182, 2233, 182, 564, 2263, 182, 182,
	182, 2203, 1267, 1263, 106, 107, 2257, 740, 1, 730,
	2234, 2732, 2283, 564, 564, 532, 564, 1264, 564, 564,
	1697, 564, 564, 564, 564, 564, 564, 639, 2221, 1256,
	2048, 1241, 546, 2324, 2219, 2232, 564, 2728, 1473, 182,
	183, 2235, 1713, 1714, 1266, 2254, 1265, 1463, 2524, 1665,
	2254, 1666, 563, 2627, 2116, 2285, 183, 1842, 2286, 2265,
	2266, 563, 2268, 2499, 732, 1806, 182, 564, 2264, 183,
	960, 2267, 95, 145, 2345, 731, 182, 2276, 1769, 1770,
	2712, 2287, 110, 564, 921, 183, 109, 963, 1062, 562,
	1837, 182, 1508, 2514, 182, 2280, 2281, 2074, 2293, 1778,
	1321, 183, 1319, 1320, 2376, 1318, 2320, 2319, 183, 2222,
	2223, 2224, 1323, 1322, 1944, 1547, 560, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 564, 564, 564, 2353,
	2044, 2352, 180, 2341, 2321, 2322, 770, 1808, 1310, 925,
	2344, 932, 1287, 1000, 522, 2356, 2316, 2225, 1869, 528,
	1175, 2340, 2227, 2061, 769, 762, 1708, 183, 1999, 2259,
	2431, 2239, 2371, 2241, 2016, 2244, 2370, 563, 182, 2409,
	2237, 1267, 1263, 2657, 2555, 2704, 2071, 1283, 1934, 1618,
	1748, 2378, 1568, 2262, 585, 2157, 1264, 584, 2158, 582,
	2385, 2002, 2025, 2379, 1138, 658, 1989, 2382, 2383, 1296,
	2384, 2036, 2034, 2386, 2033, 2388, 1894, 2390, 1755, 2455,
	2451, 1260, 1261, 1266, 2791, 1265, 2724, 564, 1750, 2425,
	2037, 2040, 2041, 2042, 2038, 182, 2039, 2043, 1746, 2008,
	2453, 2454, 564, 564, 1268, 2420, 2421, 593, 586, 578,
	2471, 2351, 2137, 2477, 2362, 2139, 2428, 2072, 182, 2435,
	2450, 2358, 1116, 1259, 572, 933, 1615, 2632, 2440, 2618,
	1911, 2397, 2460, 2457, 1258, 1628, 182, 1629, 2331, 182,
	182, 182, 2466, 2467, 1829, 63, 41, 1656, 567, 563,
	563, 2742, 1107, 756, 183, 2465, 2373, 2374, 32, 564,
	2464, 2472, 2506, 2507, 31, 30, 2473, 29, 28, 2353,
	23, 2352, 22, 21, 20, 19, 563, 563, 563, 563,
	2482, 25, 2484, 183, 18, 17, 564, 16, 2752, 2780,
	115, 50, 2509, 47, 45, 122, 183, 121, 48, 44,
	564, 1037, 42, 27, 26, 183, 15, 183, 14, 183,
	183, 564, 2520, 13, 564, 12, 11, 2518, 2519, 10,
	9, 5, 1604, 4, 1604, 564, 35, 34, 33, 1110,
	24, 2, 2533, 182, 2103, 1831, 0, 1602, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2550, 2530, 0, 0, 0, 563, 0, 563,
	0, 2529, 0, 0, 0, 0, 0, 0, 0, 0,
	2541, 0, 0, 2542, 0, 1604, 0, 2579, 0, 0,
	564, 0, 0, 2551, 2573, 0, 2571, 2560, 724, 2559,
	1602, 0, 2257, 2575, 2567, 37, 2257, 2569, 0, 2210,
	0, 2210, 0, 0, 0, 564, 0, 0, 0, 0,
	0, 564, 0, 0, 563, 0, 0, 0, 0, 0,
	0, 2580, 2581, 0, 0, 0, 2583, 2614, 0, 0,
	2254, 0, 0, 0, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 2612, 0, 0, 2611, 0, 0, 0,
	2610, 0, 0, 564, 2629, 563, 0, 2617, 2621, 563,
	563, 2622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	2654, 0, 2651, 2652, 2656, 2653, 183, 0, 0, 0,
	1338, 2668, 0, 183, 0, 0, 0, 2665, 183, 183,
	2667, 0, 183, 0, 183, 0, 0, 563, 724, 2257,
	0, 183, 0, 2671, 0, 0, 0, 0, 183, 0,
	2673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 182, 0, 0, 770, 770, 770, 0, 0,
	0, 0, 0, 0, 2684, 0, 183, 564, 0, 0,
	0, 0, 0, 1106, 1108, 0, 0, 2681, 0, 0,
	0, 0, 0, 0, 0, 0, 37, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 563, 0, 0, 0, 0, 0,
	2697, 0, 563, 0, 0, 0, 2702, 0, 0, 0,
	2707, 182, 563, 2629, 2713, 2711, 2705, 0, 0, 0,
	0, 0, 0, 0, 2720, 37, 0, 0, 0, 0,
	2723, 2739, 2731, 2736, 0, 0, 0, 0, 0, 2745,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 2754,
	0, 2751, 563, 2254, 0, 0, 0, 0, 0, 0,
	563, 1235, 0, 0, 1604, 2761, 2768, 2763, 0, 2765,
	2767, 0, 0, 0, 0, 2774, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 2782, 0, 0, 0, 0,
	0, 0, 2787, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 2790, 2798, 0, 183, 2797, 1604, 0,
	2800, 0, 0, 0, 183, 0, 1602, 1247, 1248, 564,
	0, 1339, 0, 1602, 0, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 0, 183,
	0, 770, 0, 183, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 1352, 1355, 1356, 1357, 1358,
	1359, 1360, 0, 1361, 1362, 1363, 1364, 1365, 1340, 1341,
	1342, 1343, 1324, 1325, 1353, 0, 1327, 0, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 0, 0, 1337,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 183, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 1415, 1415, 0, 1415, 0, 1415, 1415, 0, 1424,
	1415, 1415, 1415, 1415, 1415, 0, 0, 0, 564, 0,
	0, 0, 1235, 1235, 925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 564, 0, 1485, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 564,
	564, 1505, 183, 183, 183, 183, 183, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 183,
	0, 640, 183, 0, 183, 0, 0, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 770, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 181, 0, 0, 518, 0, 0, 558, 0,
	0, 564, 0, 0, 0, 518, 0, 0, 0, 0,
	564, 0, 0, 518, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 183, 755, 0, 755, 0, 0, 78,
	39, 40, 80, 0, 518, 1611, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 84,
	1626, 1627, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 564, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	0, 770, 0, 0, 183, 0, 0, 0, 0, 770,
	0, 0, 770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 925, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 564, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 932, 0,
	0, 0, 0, 0, 0, 564, 564, 564, 564, 46,
	49, 52, 51, 54, 178, 66, 0, 0, 75, 72,
	0, 1622, 0, 925, 0, 1623, 0, 0, 0, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 0,
	142, 55, 83, 82, 0, 0, 64, 65, 53, 0,
	0, 162, 0, 0, 73, 74, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 925, 0, 1270, 1695, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 564, 141, 564, 0,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 159, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 151, 150,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 564, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 0, 518, 0,
	0, 518, 0, 0, 0, 0, 0, 564, 81, 0,
	0, 0, 0, 0, 0, 0, 146, 127, 153, 134,
	126, 0, 147, 148, 0, 0, 0, 0, 163, 0,
	0, 0, 86, 0, 0, 0, 564, 168, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 136, 131, 132, 133, 137, 0, 0,
	564, 183, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 770, 564, 564, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 0, 0, 0, 1722, 0, 0,
	183, 564, 0, 2003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 1236, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 120,
	0, 142, 0, 0, 0, 149, 0, 0, 0, 0,
	2093, 1924, 162, 0, 0, 1928, 0, 1929, 1930, 0,
	518, 0, 0, 0, 0, 0, 1938, 0, 143, 1939,
	1940, 144, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 2118, 0, 152, 0, 754, 0, 0, 141, 0,
	2123, 0, 0, 0, 0, 0, 1946, 1947, 1948, 1949,
	1950, 0, 1952, 0, 0, 0, 0, 0, 1956, 159,
	1957, 160, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 1969, 1970, 1971, 1972, 1974, 1392, 1393, 151,
	150, 177, 0, 1979, 1980, 1981, 1982, 1983, 0, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 748, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 1235, 0, 0, 1235, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 518, 0, 0, 146, 1394, 153,
	0, 1391, 1415, 147, 148, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 2236, 0, 0, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 1235, 0, 0, 2261, 1415, 1235,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1236, 1236, 0, 0,
	0, 0, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 925,
	0, 0, 1235, 0, 0, 0, 0, 0, 1722, 0,
	0, 155, 0, 518, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	1531, 518, 518, 518, 518, 518, 518, 518, 0, 2196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	2217, 2218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 144, 0, 2236, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 2260, 0, 0, 0, 0, 0,
	755, 755, 0, 0, 0, 0, 1236, 0, 0, 0,
	0, 2278, 2279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	755, 1507, 755, 755, 755, 755, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 737, 1722, 1722, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 518, 0,
	0, 0, 0, 0, 0, 1507, 0, 518, 0, 518,
	0, 518, 1757, 2525, 2526, 2527, 2528, 0, 0, 2377,
	0, 0, 0, 0, 0, 0, 2381, 1244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2391, 2392, 2394, 2396, 0, 0, 0, 0, 0, 0,
	2402, 0, 0, 0, 0, 2406, 2407, 2408, 1235, 0,
	1235, 0, 2411, 0, 0, 0, 0, 0, 2413, 0,
	2415, 2416, 0, 1136, 2417, 0, 0, 0, 0, 0,
	2422, 517, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 566, 0, 0, 2572, 0, 2574, 0, 0, 717,
	0, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2444, 2445, 0, 0, 2449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2750, 0, 0, 2461, 2462, 0, 0, 0,
	929, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2647, 0, 0, 0, 2647, 2647, 518, 0,
	0, 2512, 0, 0, 0, 518, 0, 0, 0, 0,
	518, 518, 0, 0, 518, 0, 1897, 0, 0, 0,
	0, 0, 0, 518, 0, 1722, 0, 0, 0, 0,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 518, 0,
	2539, 0, 0, 0, 2540, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 79, 0, 0, 0, 1722, 0,
	0, 0, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 2698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 0,
	770, 770, 0, 0, 0, 0, 0, 0, 0, 2721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2726,
	0, 727, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 727, 2625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2635, 2636, 2637, 1722,
	2638, 2639, 0, 0, 755, 755, 2642, 2726, 2643, 2646,
	0, 0, 0, 0, 0, 1507, 0, 0, 518, 0,
	0, 0, 0, 0, 0, 0, 1461, 1352, 1355, 1356,
	1357, 1358, 1359, 1360, 0, 1361, 1362, 1363, 1364, 1365,
	1340, 1341, 1342, 1343, 1324, 1325, 1353, 2672, 1327, 0,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 0,
	0, 1337, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	0, 518, 0, 0, 0, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2692, 0, 0, 0, 0, 0, 2693, 2694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2700, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 2708, 2102, 0, 0, 0,
	0, 0, 1038, 0, 1044, 1510, 0, 1046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2747, 0, 0, 0, 2748,
	0, 0, 0, 0, 0, 0, 0, 518, 518, 518,
	518, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 0, 0, 0, 0, 1563, 1564, 1565,
	1566, 0, 0, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 1609,
	0, 0, 0, 0, 0, 1236, 1614, 1236, 0, 0,
	1236, 0, 0, 0, 0, 1236, 0, 0, 0, 755,
	0, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1661, 1662,
	576, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 178,
	0, 576, 0, 1236, 518, 518, 518, 518, 518, 0,
	1388, 0, 0, 0, 0, 0, 2277, 0, 0, 0,
	0, 518, 0, 120, 1461, 142, 518, 0, 0, 518,
	2288, 1507, 0, 0, 0, 0, 162, 1729, 1730, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 152, 0, 0,
	518, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 1098, 1098, 1098, 0, 0, 1236, 0, 0, 0,
	0, 0, 0, 159, 0, 160, 0, 518, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 1392, 1393, 151, 150, 177, 0, 0, 0, 0,
	0, 0, 518, 0, 1804, 518, 0, 0, 727, 1171,
	1172, 1173, 0, 1176, 0, 1178, 1179, 1180, 1181, 0,
	1184, 1186, 1186, 0, 1186, 1190, 1190, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 0, 1220, 1221, 1222, 1223, 1224,
	0, 0, 0, 0, 1190, 1190, 1190, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 146, 1394, 153, 0, 1391, 0, 147, 148, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 518, 727, 0, 0,
	0, 727, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 0, 0,
	518, 518, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 1517,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 0, 0, 1937, 0, 0, 0,
	0, 0, 1236, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 1183, 1236, 0, 0, 0, 87, 0, 0,
	149, 0, 0, 659, 666, 667, 668, 669, 670, 660,
	662, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 144, 664, 671, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	0, 0, 0, 2354, 2355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	0, 0, 173, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 1742, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1098, 1098, 1098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2164,
	0, 0, 1461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2187, 2188, 0,
	0, 0, 2191, 0, 0, 0, 0, 2193, 2194, 2195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2200,
	2201, 2202, 0, 0, 1668, 2204, 0, 2205, 2206, 0,
	0, 0, 2213, 2214, 0, 0, 0, 0, 0, 0,
	650, 0, 0, 0, 651, 652, 0, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1556, 0, 0, 0, 0, 0,
	2249, 1880, 0, 0, 0, 87, 1890, 1891, 0, 0,
	1895, 659, 666, 667, 668, 669, 670, 660, 662, 1898,
	0, 0, 661, 0, 0, 0, 1901, 2282, 0, 0,
	0, 0, 0, 0, 0, 664, 671, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2354, 2355, 2337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2399, 0,
	0, 0, 0, 0, 0, 2405, 0, 0, 1998, 0,
	0, 666, 667, 0, 0, 0, 0, 1603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 667, 0, 0,
	0, 0, 1603, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	2502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1913, 0, 0, 0, 2096, 2517, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 0, 2531,
	0, 2532, 0, 0, 0, 0, 2535, 2536, 0, 0,
	0, 0, 0, 2142, 2143, 2144, 2145, 2146, 0, 0,
	2543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1556, 2152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2160, 0, 2568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2576,
	0, 0, 2578, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 2582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1994, 2607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 2029, 2030, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 2050, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2655,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2327, 2124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2369, 0,
	0, 2372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2258, 0, 79, 0, 0, 1749, 1749, 1749, 1749,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 727, 0, 0, 0, 1749, 0,
	0, 1749, 0, 0, 0, 2480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2495, 0, 0, 2496, 2497, 2498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2544, 0, 2548, 2549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2258, 0, 79,
	0, 2258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 2701, 0, 903, 888, 439, 79,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 2714, 0, 2715, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	209, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 1100, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	209, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 2289, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 1100, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	209, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 2247, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 1100, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	209, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 1737, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 1100, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	209, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 1100, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	209, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 1100, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	920, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 787, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 773, 767, 766, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	920, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	1302, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 787, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 773, 767, 766, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 903, 888, 439, 0,
	835, 906, 804, 823, 916, 826, 829, 870, 783, 849,
	360, 820, 775, 808, 778, 815, 779, 806, 837, 244,
	803, 890, 853, 905, 315, 241, 785, 809, 374, 825,
	193, 872, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 912, 319, 859, 0,
	424, 345, 0, 0, 0, 839, 894, 847, 884, 834,
	871, 793, 858, 907, 821, 867, 908, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 817, 864, 902, 818, 866, 239, 285,
	246, 238, 443, 913, 893, 782, 846, 901, 0, 0,
	920, 904, 841, 0, 869, 0, 919, 777, 861, 0,
	780, 784, 915, 897, 812, 249, 0, 0, 0, 0,
	0, 0, 0, 838, 848, 881, 832, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 857, 0, 0, 0,
	789, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 792, 0, 811,
	882, 0, 774, 268, 786, 346, 231, 0, 886, 896,
	833, 477, 900, 831, 830, 876, 790, 892, 824, 314,
	788, 293, 188, 205, 0, 822, 356, 397, 403, 891,
	807, 816, 229, 814, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 856, 874, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	764, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 787, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	802, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 887, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 773, 767, 766, 294, 321,
	879, 918, 369, 402, 219, 463, 423, 797, 801, 795,
	796, 851, 852, 798, 909, 910, 911, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 883, 791, 0, 799,
	800, 0, 889, 898, 899, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 855, 187, 202, 317,
	914, 391, 261, 491, 471, 467, 776, 794, 236, 805,
	813, 0, 819, 827, 828, 840, 842, 843, 844, 845,
	862, 863, 865, 873, 875, 878, 880, 885, 895, 917,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 854, 860, 328, 254, 273, 284, 868, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 850, 877, 324,
	440, 441, 280, 342, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 1682, 0, 594, 0, 0, 0, 244,
	599, 0, 0, 0, 315, 241, 0, 1683, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 606, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 87, 0, 0, 184, 185, 186,
	659, 666, 667, 668, 669, 670, 660, 662, 0, 0,
	217, 661, 224, 617, 619, 618, 628, 629, 630, 631,
	632, 633, 634, 615, 664, 671, 672, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 577, 591,
	0, 605, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 589, 753, 0, 0, 0, 644, 0, 590, 0,
	0, 598, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 643, 0,
	0, 477, 0, 0, 641, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 623, 624,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 650, 642, 610,
	612, 651, 652, 607, 608, 611, 653, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 645, 597, 596, 0,
	603, 604, 0, 613, 614, 616, 620, 621, 622, 625,
	626, 627, 635, 637, 638, 636, 595, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	594, 0, 0, 0, 244, 599, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 606, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 87,
	0, 0, 184, 185, 186, 659, 666, 667, 668, 669,
	670, 660, 662, 0, 0, 217, 661, 224, 617, 619,
	618, 628, 629, 630, 631, 632, 633, 634, 615, 664,
	671, 672, 0, 239, 285, 246, 238, 443, 0, 0,
	1658, 1659, 1660, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 577, 591, 0, 605, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 589, 0, 0, 0,
	0, 644, 0, 590, 0, 0, 598, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 643, 0, 0, 477, 0, 0, 641,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 623, 624, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 650, 642, 610, 612, 651, 652, 607, 608,
	611, 653, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 645, 597, 596, 0, 603, 604, 0, 613, 614,
	616, 620, 621, 622, 625, 626, 627, 635, 637, 638,
	636, 595, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 594, 0, 0, 0, 244,
	599, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 606, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 0, 0, 0, 1764, 0, 287, 226, 192,
	357, 425, 259, 0, 87, 0, 0, 184, 185, 186,
	659, 666, 667, 668, 669, 670, 660, 662, 0, 0,
	217, 661, 224, 617, 619, 618, 628, 629, 630, 631,
	632, 633, 634, 615, 664, 671, 672, 1765, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 577, 591,
	0, 605, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 589, 0, 0, 0, 0, 644, 0, 590, 0,
	0, 598, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 643, 0,
	0, 477, 0, 0, 641, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 623, 624,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 650, 642, 610,
	612, 651, 652, 607, 608, 611, 653, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 645, 597, 596, 0,
	603, 604, 0, 613, 614, 616, 620, 621, 622, 625,
	626, 627, 635, 637, 638, 636, 595, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 0, 324,
	440, 441, 280, 342, 0, 0, 0, 78, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 594, 0, 0, 0, 244,
	599, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 606, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 87, 0, 0, 184, 185, 186,
	659, 666, 667, 668, 669, 670, 660, 662, 0, 0,
	217, 661, 224, 617, 619, 618, 628, 629, 630, 631,
	632, 633, 634, 615, 664, 671, 672, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 577, 591,
	0, 605, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 589, 0, 0, 0, 0, 644, 0, 590, 0,
	0, 598, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 643, 0,
	0, 477, 0, 0, 641, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 623, 624,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 650, 642, 610,
	612, 651, 652, 607, 608, 611, 653, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 645, 597, 596, 0,
	603, 604, 0, 613, 614, 616, 620, 621, 622, 625,
	626, 627, 635, 637, 638, 636, 595, 187, 202, 317,
	86, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	594, 0, 0, 0, 244, 599, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 606, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 87,
	0, 0, 184, 185, 186, 659, 666, 667, 668, 669,
	670, 660, 662, 0, 0, 217, 661, 224, 617, 619,
	618, 628, 629, 630, 631, 632, 633, 634, 615, 664,
	671, 672, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 577, 591, 0, 605, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 589, 0, 0, 0,
	0, 644, 0, 590, 0, 0, 598, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 643, 0, 0, 477, 0, 0, 641,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 2680,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 623, 624, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 650, 642, 610, 612, 651, 652, 607, 608,
	611, 653, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 645, 597, 596, 0, 603, 604, 0, 613, 614,
	616, 620, 621, 622, 625, 626, 627, 635, 637, 638,
	636, 595, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 594, 0, 0, 0, 244,
	599, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 606, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 87, 0, 1269, 184, 185, 186,
	659, 666, 667, 668, 669, 670, 660, 662, 0, 0,
	217, 661, 224, 617, 619, 618, 628, 629, 630, 631,
	632, 633, 634, 615, 664, 671, 672, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 577, 591,
	0, 605, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 589, 0, 0, 0, 0, 644, 0, 590, 0,
	0, 598, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 643, 0,
	0, 477, 0, 0, 641, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 623, 624,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 650, 642, 610,
	612, 651, 652, 607, 608, 611, 653, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 645, 597, 596, 0,
	603, 604, 0, 613, 614, 616, 620, 621, 622, 625,
	626, 627, 635, 637, 638, 636, 595, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	594, 0, 0, 0, 244, 599, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 606, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 87,
	0, 0, 184, 185, 186, 659, 666, 667, 668, 669,
	670, 660, 662, 0, 0, 217, 661, 224, 617, 619,
	618, 628, 629, 630, 631, 632, 633, 634, 615, 664,
	671, 672, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 577, 591, 0, 605, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 589, 753, 0, 0,
	0, 644, 0, 590, 0, 0, 598, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 643, 0, 0, 477, 0, 0, 641,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 623, 624, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 650, 642, 610, 612, 651, 652, 607, 608,
	611, 653, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 645, 597, 596, 0, 603, 604, 0, 613, 614,
	616, 620, 621, 622, 625, 626, 627, 635, 637, 638,
	636, 595, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 594, 0, 0, 0, 244,
	599, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 606, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 87, 0, 0, 184, 185, 186,
	659, 666, 667, 668, 669, 670, 660, 662, 0, 0,
	217, 661, 224, 617, 619, 618, 628, 629, 630, 631,
	632, 633, 634, 615, 664, 671, 672, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 577, 591,
	0, 605, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 589, 0, 0, 0, 0, 644, 0, 590, 0,
	0, 598, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 643, 0,
	0, 477, 0, 0, 641, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 623, 624,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 650, 642, 610,
	612, 651, 652, 607, 608, 611, 653, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 645, 597, 596, 0,
	603, 604, 0, 613, 614, 616, 620, 621, 622, 625,
	626, 627, 635, 637, 638, 636, 595, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	594, 0, 0, 0, 244, 599, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 606, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 87,
	0, 0, 184, 185, 186, 659, 666, 667, 668, 669,
	670, 660, 662, 0, 0, 217, 661, 224, 617, 619,
	618, 628, 629, 630, 631, 632, 633, 634, 615, 664,
	671, 672, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 591, 0, 605, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 589, 0, 0, 0,
	0, 644, 0, 590, 0, 0, 598, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 643, 0, 0, 477, 0, 0, 641,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 623, 624, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 650, 642, 610, 612, 651, 652, 607, 608,
	611, 653, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 645, 597, 596, 0, 603, 604, 0, 613, 614,
	616, 620, 621, 622, 625, 626, 627, 635, 637, 638,
	636, 595, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 666, 667, 0, 0, 0, 0, 1603, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 967, 477, 0, 0, 0,
	0, 0, 964, 965, 314, 928, 293, 188, 205, 958,
	962, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 0, 324, 440, 441, 280, 342, 0,
	0, 0, 78, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 86, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 1288, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 1290, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 1132, 0, 1133, 1134, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 1231, 1234, 0, 0, 0,
	0, 1230, 1233, 0, 0, 217, 1229, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 0, 324, 440, 441, 280, 342, 0,
	0, 0, 78, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 87,
	0, 1269, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 86, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 1704,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1462, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	1702, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	928, 293, 188, 205, 926, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 1704,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1462, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 1269, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 2648, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 2004, 0, 0, 0, 2005, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 1313, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 2722, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	2648, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1462, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	1554, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 1434, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 1432, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 1430, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 1428, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 1426, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 1422, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 1420, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 1418, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 1395,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 1297, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 735, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 568, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 516,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 2727, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 342, 324,
	440, 441, 280, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 315,
	241, 0, 0, 374, 0, 193, 0, 415, 228, 325,
	322, 446, 255, 247, 243, 227, 281, 332, 372, 433,
	366, 0, 319, 0, 0, 424, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 357, 425, 259, 0, 0,
	0, 0, 184, 2423, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 304, 308,
	307, 297, 298, 300, 301, 303, 306, 311, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 443, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	346, 231, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 293, 188, 205, 0,
	0, 356, 397, 403, 0, 0, 0, 229, 0, 401,
	370, 461, 213, 257, 394, 375, 399, 382, 260, 0,
	0, 400, 320, 448, 389, 458, 478, 479, 237, 350,
	468, 437, 474, 490, 206, 234, 364, 430, 464, 421,
	343, 444, 445, 292, 420, 266, 191, 318, 484, 204,
	409, 221, 211, 197, 432, 456, 218, 412, 0, 0,
	492, 199, 454, 429, 339, 289, 290, 198, 0, 393,
	242, 264, 232, 359, 451, 452, 230, 493, 208, 473,
	201, 0, 472, 352, 447, 455, 340, 330, 200, 453,
	338, 329, 295, 312, 313, 253, 275, 387, 323, 388,
	276, 348, 347, 349, 194, 465, 0, 195, 0, 426,
	466, 494, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 316, 363, 386, 384, 390, 0, 442,
	459, 469, 476, 482, 483, 485, 486, 487, 488, 489,
	351, 278, 422, 294, 321, 0, 0, 369, 402, 219,
	463, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 331, 414, 460, 296, 302, 305, 299, 309, 0,
	310, 0, 187, 202, 317, 0, 391, 261, 491, 471,
	467, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	327, 333, 334, 335, 336, 353, 354, 355, 358, 361,
	362, 365, 367, 368, 371, 378, 379, 380, 381, 383,
	385, 392, 396, 404, 405, 406, 407, 408, 410, 411,
	416, 417, 418, 419, 427, 431, 449, 450, 462, 475,
	480, 270, 457, 481, 0, 326, 0, 0, 328, 254,
	273, 284, 0, 470, 428, 207, 398, 262, 196, 225,
	210, 233, 248, 251, 288, 337, 344, 373, 377, 267,
	245, 223, 395, 220, 413, 434, 435, 436, 438, 341,
	240, 376, 0, 342, 324, 440, 441, 280, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 315, 241, 0, 0, 374, 0,
	193, 0, 415, 228, 325, 322, 446, 255, 247, 243,
	227, 281, 332, 372, 433, 366, 0, 319, 0, 0,
	424, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	357, 425, 259, 0, 0, 0, 0, 184, 2000, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 304, 308, 307, 297, 298, 300, 301,
	303, 306, 311, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 443, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 346, 231, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 293, 188, 205, 0, 0, 356, 397, 403, 0,
	0, 0, 229, 0, 401, 370, 461, 213, 257, 394,
	375, 399, 382, 260, 0, 0, 400, 320, 448, 389,
	458, 478, 479, 237, 350, 468, 437, 474, 490, 206,
	234, 364, 430, 464, 421, 343, 444, 445, 292, 420,
	266, 191, 318, 484, 204, 409, 221, 211, 197, 432,
	456, 218, 412, 0, 0, 492, 199, 454, 429, 339,
	289, 290, 198, 0, 393, 242, 264, 232, 359, 451,
	452, 230, 493, 208, 473, 201, 0, 472, 352, 447,
	455, 340, 330, 200, 453, 338, 329, 295, 312, 313,
	253, 275, 387, 323, 388, 276, 348, 347, 349, 194,
	465, 0, 195, 0, 426, 466, 494, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 316, 363,
	386, 384, 390, 0, 442, 459, 469, 476, 482, 483,
	485, 486, 487, 488, 489, 351, 278, 422, 294, 321,
	0, 0, 369, 402, 219, 463, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 331, 414, 460, 296,
	302, 305, 299, 309, 0, 310, 0, 187, 202, 317,
	0, 391, 261, 491, 471, 467, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 327, 333, 334, 335, 336,
	353, 354, 355, 358, 361, 362, 365, 367, 368, 371,
	378, 379, 380, 381, 383, 385, 392, 396, 404, 405,
	406, 407, 408, 410, 411, 416, 417, 418, 419, 427,
	431, 449, 450, 462, 475, 480, 270, 457, 481, 0,
	326, 0, 0, 328, 254, 273, 284, 0, 470, 428,
	207, 398, 262, 196, 225, 210, 233, 248, 251, 288,
	337, 344, 373, 377, 267, 245, 223, 395, 220, 413,
	434, 435, 436, 438, 341, 240, 376, 0, 0, 324,
	440, 441, 280,
}

var yyPact = [...]int{
	3251, -1000, -408, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1900, 1939, -1000, -1000,
	-1000, -1000, 2052, -1000, 663, 1583, -1000, 1899, 3467, -1000,
	38489, 440, -1000, 37339, 435, 209, 38489, -1000, 111, -1000,
	98, 38489, 106, 36764, -1000, -1000, -316, 16629, 1808, -13,
	-15, 38489, -1000, -1000, -1000, -1000, 1999, 1498, -1000, 256,
	-1000, -1000, -1000, -1000, -1000, -1000, 36189, -1000, -1000, -1000,
	1913, 1879, 2055, 594, 1860, -1000, 1961, 1498, -1000, 16629,
	1988, 1950, 16054, -1000, 16054, 365, -1000, -1000, 12019, -1000,
	-1000, 22389, 38489, 38489, 285, -1000, 1899, -1000, -1000, 321,
	-1000, 259, 1410, -1000, 1404, -1000, 591, 422, 277, 395,
	389, 276, 275, 274, 273, 271, 268, 266, 262, 292,
	-1000, 635, 635, -197, -199, 451, 332, 332, 332, 403,
	1852, 1840, -1000, 559, -1000, 635, 635, 284, 635, 635,
	635, 635, 227, 226, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 267,
	1899, 181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 38489, 215, 38489, -1000, 494, 38489,
	763, 763, 43, 763, 763, 763, 763, 93, 614, -18,
	-1000, 92, 213, 121, 176, 729, 131, 130, -1000, -1000,
	170, 729, 1056, 597, 105, -1000, 763, 9699, 9699, 9699,
	-1000, 1881, -1000, -1000, -1000, -1000, -1000, -1000, 1065, -1000,
	400, -1000, -1000, -1000, -1000, 38489, 35614, 244, 653, -1000,
	-1000, -1000, 56, -1000, -1000, 1176, 1235, 16629, 1119, -1000,
	966, 552, -1000, -1000, -1000, -1000, -1000, 481, 17204, 17204,
	17204, 17204, -1000, -1000, 1413, 1413, 1413, 1413, 17204, 1413,
	17204, 1413, 1413, 1413, 1413, 16629, 1413, 1413, 1413, -1000,
	1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413,
	1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413,
	1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413,
	493, 1413, 1413, 1413, 1413, 1413, -1000, -1000, -1000, -1000,
	1413, 1413, 1413, 1413, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 20084, -1000, 14329, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 38489, -1000, 1413, 119, 38489,
	38489, 270, 1961, 1498, -1000, 1999, 1971, 256, -1000, 2208,
	1719, 1270, 857, 1498, 1363, 38489, -1000, 1436, -1000, -1000,
	-1000, 1729, 1000, 1055, -1000, -1000, -1000, -1000, 1489, 16629,
	-1000, -1000, 2026, -1000, 19509, 491, 817, 2025, 35039, -1000,
	365, 365, 1402, 11439, -68, -1000, -1000, -1000, 641, 25264,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1881, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1559, 38489, -1000, -1000, 2558, 987, -1000, 1573, -1000,
	1546, -1000, 1496, 1612, 434, 987, 415, 407, 387, -1000,
	-107, -1000, -1000, -1000, -1000, -1000, 635, 635, -1000, 286,
	1986, 3467, 5172, -1000, -1000, -1000, 34464, 1569, 987, -1000,
	1551, -1000, 715, 433, 514, 514, 987, -1000, -1000, 38489,
	987, 714, 713, 38489, 38489, -1000, 33889, -1000, 33314, 32739,
	933, 38489, 32164, 31589, 31014, 30439, 29864, -1000, 1689, -1000,
	1715, -1000, -1000, -1000, 38489, 38489, 38489, 283, -1000, -1000,
	38489, 987, -1000, -1000, 931, 926, 635, 635, 910, 1054,
	1053, 1049, 635, 635, 905, 1048, 26989, 193, 902, 901,
	895, 935, 1019, 172, 925, 922, 884, 38489, 1549, 38489,
	-1000, 164, 620, 317, 640, 1899, 1807, 1399, 386, 430,
	987, 328, 328, 38489, -1000, 10279, -1000, -1000, 1018, 16629,
	-1000, 752, 729, 729, -1000, -1000, -1000, -1000, -1000, -1000,
	763, 38489, 752, -1000, -1000, -1000, 729, 763, 38489, 763,
	763, 763, 763, 729, 729, 729, 763, 38489, 38489, 38489,
	38489, 38489, 38489, 38489, 38489, 38489, 9699, 9699, 9699, 597,
	763, -320, -1000, 1012, -1000, 1711, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 101, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -106, 1396, 29289, -1000, -321,
	-328, -331, -333, -1000, -1000, -1000, -339, -342, -1000, -1000,
	-1000, 16629, 16629, 16629, 16629, -231, -1000, 816, 17204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 836, 756, 17204, 17204,
	17204, 17204, 17204, 17204, 17204, 17204, 17204, 17204, 17204, 17204,
	17204, 17204, 17204, 717, 6114, 6114, 552, 552, 552, 552,
	-1000, 16054, 16629, 16629, 552, -1000, 987, 28714, 16054, 16054,
	16629, 1861, 659, 1235, 38489, -1000, 857, -1000, -1000, -1000,
	894, -1000, 38489, 38489, 51, 16629, 16629, 16629, 16629, 16629,
	16629, 13174, 16629, 16629, 16629, 16629, 16629, 16629, 16629, 16629,
	16629, 16629, 16629, 16629, 16629, 16629, 16629, 16629, 12599, 10279,
	16054, 16054, 16054, 16054, 16054, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 486, 1678, 1415, 1536,
	-1000, 1385, -1000, -170, 21814, 16629, 1011, 2024, 1655, 38489,
	-1000, -1000, -1000, 1961, -1000, 1961, 1678, 2039, 1753, 16054,
	-1000, -1000, 2039, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1133, -1000, 38489, 1363, 1944, 38489, 1749, 1005, 293,
	-1000, 16629, 16629, 1359, -1000, 1066, 38489, -1000, -231, -1000,
	28139, -1000, -1000, 9119, -1000, 38489, 260, 38489, -1000, 21239,
	27564, 10859, -68, -1000, 10859, 1311, -1000, -41, -56, 13749,
	540, -1000, -1000, -1000, 451, 18354, 1115, 540, 29, -1000,
	-1000, -1000, 1496, -1000, 1496, 1496, 1496, 1496, 293, 293,
	293, 293, -1000, -1000, -1000, -1000, -1000, 1544, 1533, -1000,
	1496, 1496, 1496, 1496, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1528, 1528, 1528, 1500, 1500, 305, -1000, 16629, 216,
	38489, 1909, 882, 164, 352, 1641, 987, 987, 987, 352,
	-1000, 1367, 1273, -1000, -386, 1356, -1000, -1000, 1983, -1000,
	-1000, 488, 732, 730, 426, 38489, 134, 253, -1000, 336,
	-1000, 38489, 987, 698, 514, 987, -1000, 987, -1000, -1000,
	-1000, -1000, -1000, 987, 1352, -1000, 1278, 801, 728, 773,
	726, 1352, -1000, -1000, -142, 1352, -1000, 1352, -1000, 1352,
	-1000, 1352, -1000, 1352, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 624, 38489, 134, 717, -1000, 384, -1000, -1000,
	717, 717, -1000, -1000, -1000, -1000, 1003, 998, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -384, 38489, -1000, 158, 639,
	238, 263, 219, 38489, 140, 1941, 221, 211, 38489, 38489,
	328, 1709, 38489, 1928, 38489, -1000, -1000, -1000, -1000, -1000,
	1235, 38489, -1000, -1000, 763, 763, -1000, -1000, 38489, 763,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 763, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 38489, 38489, -1000, -1000,
	-1000, -1000, -1000, 82, -35, 239, -1000, -1000, -1000, -1000,
	-1000, 1955, -1000, 1235, 678, 681, -1000, 1413, -1000, -1000,
	826, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 836, 17204,
	17204, 17204, 1398, 391, 1431, 1169, 872, 740, 740, 797,
	797, 560, 560, 560, 560, 560, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 980, -1000, 1463, -1000, 1770, 1014,
	857, -1000, 1463, 1463, 1281, 16054, -1000, -1000, 668, -1000,
	16629, 857, -1000, -1000, 857, 857, 1350, 1338, 2018, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1665, 1493, 1493, 1493, 1493, 1493, 16629, 1466, -1000, -1000,
	-1000, 1866, 1818, 857, 1176, 857, 1331, -1000, 1810, 1493,
	1803, 1760, 1724, 1171, 1691, 1621, 1607, 1493, 1493, 1493,
	1354, 857, 16054, 16054, 1319, 1413, 485, -1000, 1463, 857,
	857, 1463, 1463, 10279, 857, -1000, 38489, -1000, -312, -1000,
	-66, 483, 1413, -1000, 26989, 857, -1000, 6049, -1000, 39639,
	-1000, -1000, -1000, -1000, -1000, 24689, 1677, 2039, -1000, -1000,
	1413, 1534, -1000, -1000, 293, 6, 24114, -1000, -1000, 1235,
	1235, 16629, -1000, -1000, -1000, -1000, -1000, -1000, 484, 1998,
	326, 1413, -1000, 1168, 1851, -1000, -1000, -1000, 1938, 18934,
	-1000, 1413, 1413, 38489, 1680, 1648, -1000, 478, -1000, 1311,
	-68, -59, -1000, -1000, -1000, -1000, 1235, -1000, 1163, 261,
	320, -1000, 368, -1000, -1000, -1000, -1000, 1826, 16, -1000,
	-1000, -1000, 293, 293, -1000, -1000, -1000, -1000, -1000, -1000,
	979, 979, -1000, -1000, -1000, -1000, -1000, 879, -1000, -1000,
	-1000, 878, -1000, -1000, 1564, 1667, 216, -1000, -1000, 635,
	974, 1829, 38489, -1000, -1000, 1101, 158, 38489, 673, 1703,
	-1000, 1641, 1641, 1641, 38489, -1000, -1000, -1000, -1000, -388,
	42, 282, -1000, -1000, -1000, 3858, 38489, 1492, -1000, 127,
	-1000, 1097, 1777, 38489, -1000, 1487, 1525, 987, 987, -1000,
	-1000, -1000, 38489, 1413, -1000, -1000, -1000, -1000, 420, 1883,
	1880, 134, 127, 540, 987, -1000, -1000, -1000, -1000, -1000,
	-389, 1483, 405, 139, 236, 38489, 38489, 38489, 38489, 38489,
	463, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 208,
	383, -1000, 38489, 38489, 549, -1000, -1000, -1000, 729, -1000,
	-1000, 729, -1000, -1000, -1000, -1000, -1000, 1873, 38489, -36,
	-358, -1000, -355, 16629, -1000, -1000, -1000, -1000, 703, 385,
	1431, 17204, 17204, 16054, -134, 479, 479, 717, -1000, -1000,
	-1000, 16629, 16629, 1266, 615, -1000, 16629, 856, -1000, -1000,
	-1000, 16629, 16629, 16629, 857, 207, -1000, -1000, -1000, -1000,
	-1000, 2015, -1000, 16629, 16629, 16629, -1000, -1000, 16629, 16629,
	-1000, 16629, 16629, 17779, 857, 17779, 16629, 16629, 17779, -1000,
	-1000, -1000, -1000, 17779, -1000, 1463, 1463, 16054, 10279, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 483,
	-1000, 514, 514, 514, 38489, -1000, -1000, -1000, -1000, -1000,
	-1000, 1290, 1962, -1000, 1767, 1764, 2002, 1998, -1000, 21239,
	2039, -1000, -1000, 38489, -306, -1000, 1801, 1783, -1000, -1000,
	-1000, -1000, 8539, 1961, 16629, 1702, 38489, 1413, -1000, 20664,
	38489, 38489, 21239, 21239, 21239, 21239, 21239, -1000, 1735, 1726,
	-1000, 1738, 1728, 1805, 38489, -1000, 1429, 857, 1971, 18934,
	256, 16629, 22964, 1227, 21239, -1000, -1000, 21239, 38489, 7959,
	-1000, -1000, -61, -42, -1000, -1000, -1000, -1000, 451, -1000,
	-1000, 819, 1937, 1823, -1000, -1000, -1000, -1000, 1392, -1000,
	1387, 1238, 1382, 108, -1000, 1606, 1855, 635, 635, -1000,
	876, -1000, 987, -1000, -1000, 390, -1000, 1925, 38489, 1699,
	1697, 1696, -1000, -398, 875, 1523, 1243, 16629, 1521, 1981,
	1190, 38489, -1000, -1000, 38489, -1000, -1000, 356, -1000, 216,
	38489, -1000, -1000, -1000, 253, 38489, -1000, 5880, 127, -1000,
	-1000, -1000, -1000, -1000, -1000, 38489, 141, -1000, 1515, 1017,
	-1000, -1000, 1407, -1000, -1000, -1000, -1000, 128, 234, -1000,
	38489, 500, 1667, 38489, -1000, -1000, -1000, 763, 763, -1000,
	-1000, 1853, -1000, 987, 1493, 17204, 17204, -1000, 552, -1000,
	1413, 857, 1496, 1496, -1000, 1496, 1500, -1000, 1496, 95,
	1496, 70, 1496, -1000, -1000, 857, 857, 1231, 1151, -118,
	-1000, 1235, 16629, 1603, 1598, 1493, -1000, 1486, 1460, 16629,
	1493, 1493, 1493, -1000, 1235, 1171, 1584, 1294, -1000, -1000,
	-1000, -1000, 1211, 1493, 1526, 857, 857, -1000, -1000, 857,
	-1000, -1000, 1949, 1949, 1949, 1378, 39064, 38489, -1000, -1000,
	-1000, -1000, 1998, 1996, 1204, -1000, -1000, 6, 324, -1000,
	1845, 1783, -1000, 1979, 1796, 1977, -1000, -1000, -1000, 1235,
	-1000, 1901, 1104, -1000, 633, 1124, -1000, -1000, 15479, 1380,
	1759, 474, 1378, 1372, 1851, 1653, 1694, 2214, -1000, -1000,
	-1000, -1000, 1710, -1000, 1687, -1000, -1000, 1436, -1000, -1000,
	1415, 857, 1449, 260, 21239, 1229, 1229, -1000, 466, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 743, 5512, 2037, -1000,
	973, -1000, 1047, -1000, 694, 688, -1000, 38489, 1457, -1000,
	293, 972, 293, 855, -1000, 852, -1000, -1000, -247, -1000,
	-1000, 1700, 1682, -1000, -1000, 38489, -1000, -1000, 38489, 38489,
	38489, 1454, 1975, -1000, 16629, 1452, 622, 1522, 38489, 38489,
	-1000, -1000, 242, 1413, -1000, 1374, 1306, -1000, -201, -1000,
	16629, -1000, -1000, -1000, 963, 963, -1000, 1436, -1000, -1000,
	-1000, 1089, -1000, -1000, -149, 38489, 38489, 38489, 38489, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 552,
	17204, -1000, -1000, 293, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16629, -1000, 16629, -1000, 1961, 969, 1235,
	16629, 16629, -1000, 843, 831, 1493, -1000, -1000, -1000, 857,
	17779, -1000, 17779, -1000, 16629, -1000, -1000, -1000, 1413, 1775,
	1413, 1413, 22964, -1000, -1000, 1996, 1994, 1974, 1785, 1784,
	1784, 1845, -1000, 1973, 1969, -1000, 960, 1968, 958, 687,
	-1000, 38489, 16629, 1413, -1000, 295, 38489, 1413, 38489, -1000,
	1990, -1000, -1000, 16629, 1448, -1000, 16629, -1000, -1000, -1000,
	-1000, -1000, -1000, 6114, 1998, 1229, -1000, -1000, 567, -1000,
	16629, -1000, -1000, -1000, 1237, -1000, -1000, -1000, -1000, -1000,
	1439, 16629, -1000, -1000, -1000, 1087, 1083, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1436, -1000, -1000, -1000, -1000,
	253, -394, 1518, 38489, 828, -1000, 1298, 1190, 437, -1000,
	16629, 281, -1000, 253, -1000, -207, -212, 1493, -1000, -1000,
	1935, -1000, -1000, 10279, -1000, -1000, 1416, 1610, -1000, 229,
	-1000, 1493, 1493, 857, -1000, 1493, 1493, 1078, 1071, -1000,
	-1000, 1294, -1000, 1022, 23539, -1000, 1967, 1964, 26414, 26414,
	483, 1994, -1000, 16629, 16629, 1763, 850, -1000, -1000, -1000,
	-1000, 957, 953, -1000, 950, -1000, 2034, -1000, 1235, -1000,
	1413, -1000, 464, 1124, -1000, 1961, 1235, 38489, 1235, 8,
	1990, -1000, 1493, -1000, 1413, 1413, 1413, 1413, 1413, 1413,
	1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413,
	1413, 1413, 1413, 1413, 1413, 1413, 38489, 1394, -1000, -1000,
	1933, 1288, 40, -1000, 1268, -1000, -1000, -1000, -1000, 14904,
	-1000, -1000, -1000, -1000, -1000, -1000, 256, 1178, -1000, 613,
	38489, 38489, 857, 245, -157, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 16629, 1233, -1000, -1000, -1000, -1000,
	-1000, 1233, 1233, -1000, -1000, 1235, 1176, -1000, 796, -1000,
	-1000, -1000, -1000, -1000, 38489, 1124, 38489, -1000, 1224, 857,
	1413, 1961, -1000, 1207, -1000, 256, -1000, 1271, 1243, -1000,
	857, -147, 10279, 7379, 1195, -1000, -1000, 1743, -138, -193,
	1171, 25839, -1000, -1000, -1000, -1000, -1000, 1120, -1000, -1000,
	22964, 37914, -1000, 1686, 815, -147, 16629, 1152, -1000, -1000,
	-54, -1000, -1000, -1000, -1000, -1000, 1407, -1000, 1681, -1000,
	857, -1000, -1000, -1000, 1161, -1000, 4550, -273, 1679, -1000,
	2013, -1000, -1000, -1000, 737, 858, -1000, -1000, -1000, -1000,
	1390, 38489, 304, -1000, -1000, -149, -151, -1000, -1000, 37914,
	-269, 540, 6114, -1000, -1000, 2029, 532, 532, -1000, -1000,
	-400, 1131, 160, -1000, -161, -1000, -1000, 1918, 8, -1000,
	-1000, -1000, 301, 888, -1000, -1000, 779, -400, -1000, -194,
	-277, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6114,
	177, 177, -1000, 1676, -1000, -1000, 6114, -1000, 1673, -251,
	-1000, -345, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2425, 2424, 21, 4, 2421, 39, 105, 166, 30,
	191, 94, 2420, 2419, 2418, 2417, 2416, 2413, 2411, 207,
	206, 204, 2410, 2409, 2406, 2405, 2403, 2398, 2396, 2394,
	2393, 2392, 197, 158, 162, 2391, 2389, 2388, 107, 160,
	79, 81, 165, 2387, 2385, 69, 2384, 2383, 2381, 179,
	171, 718, 2380, 169, 110, 31, 2379, 2378, 2377, 2375,
	2374, 2371, 2365, 2364, 2363, 2362, 2360, 2358, 2357, 2355,
	2354, 2348, 269, 2343, 2342, 15, 2341, 74, 2338, 2337,
	2336, 2335, 120, 2334, 2328, 2327, 2325, 2324, 2321, 134,
	2320, 2319, 2317, 2316, 168, 2315, 2314, 251, 116, 96,
	2313, 2312, 90, 164, 2311, 115, 2307, 2305, 2304, 144,
	2302, 3935, 2301, 58, 63, 2300, 70, 86, 61, 52,
	16, 3, 2299, 2298, 53, 75, 2297, 88, 60, 2289,
	95, 85, 2288, 2278, 9, 6, 2276, 5, 2274, 2,
	55, 2270, 2269, 128, 2268, 2266, 2264, 93, 2262, 2261,
	4467, 2259, 82, 126, 98, 71, 2256, 34, 46, 2255,
	2254, 2252, 2251, 2249, 41, 2247, 2244, 2242, 133, 29,
	155, 26, 38, 43, 136, 2240, 78, 76, 2239, 132,
	131, 2238, 47, 28, 32, 2237, 27, 124, 145, 24,
	83, 123, 2236, 2235, 48, 68, 2234, 2233, 2230, 2225,
	2224, 2223, 67, 2221, 45, 2220, 178, 2219, 13, 2218,
	44, 33, 2216, 66, 212, 65, 25, 2215, 181, 2214,
	42, 148, 122, 151, 2213, 2212, 2210, 167, 233, 2209,
	2208, 188, 156, 140, 143, 2206, 241, 2204, 2203, 92,
	1099, 2087, 20, 152, 2202, 2198, 3151, 139, 127, 19,
	2192, 346, 2190, 2176, 2175, 170, 154, 100, 938, 91,
	2174, 14, 2173, 2172, 2165, 2163, 2162, 2160, 84, 172,
	59, 8, 150, 73, 2159, 2157, 2153, 111, 99, 2150,
	147, 146, 118, 177, 2148, 153, 135, 101, 2147, 106,
	2146, 2144, 2142, 2140, 89, 2139, 2138, 2133, 2130, 149,
	142, 108, 77, 2125, 80, 103, 138, 141, 35, 2123,
	37, 2117, 2114, 163, 22, 2113, 11, 50, 49, 23,
	102, 2111, 2109, 0, 2108, 12, 157, 246, 159, 2107,
	2098, 7, 2097, 10, 2092, 2091, 130, 2080, 2075, 2071,
	18, 36, 17, 1, 2068, 2051, 4713, 2294, 125, 2027,
	180,
}

//line sql.y:6576
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 344, 345, 345, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 323, 323,
	323, 326, 326, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	348, 348, 145, 145, 143, 143, 144, 144, 213, 213,
	22, 23, 23, 223, 223, 222, 222, 222, 224, 224,
	224, 224, 258, 258, 24, 24, 24, 24, 24, 95,
	95, 325, 325, 324, 316, 316, 315, 315, 314, 322,
	322, 321, 321, 320, 36, 37, 46, 46, 46, 46,
	47, 48, 327, 327, 290, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 292, 292, 279,
	279, 291, 291, 291, 291, 291, 291, 291, 278, 278,
	106, 106, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 339, 339, 193, 193, 193, 193, 193,
	193, 115, 115, 124, 124, 124, 124, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 123, 123, 119, 119,
	119, 120, 120, 120, 121, 121, 340, 340, 340, 340,
	261, 261, 261, 261, 264, 264, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 263, 263, 263, 263, 263,
	265, 265, 265, 265, 265, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	267, 267, 267, 267, 267, 267, 267, 267, 277, 277,
	268, 268, 272, 272, 273, 273, 273, 274, 274, 274,
	275, 275, 270, 270, 270, 270, 270, 270, 271, 271,
	271, 280, 304, 304, 303, 303, 301, 301, 301, 301,
	289, 289, 298, 298, 298, 298, 298, 288, 288, 284,
	284, 284, 285, 285, 286, 286, 283, 283, 287, 287,
	300, 300, 299, 281, 281, 282, 282, 306, 341, 341,
	341, 341, 342, 342, 307, 332, 333, 331, 331, 331,
	331, 331, 77, 77, 77, 235, 235, 235, 296, 296,
	295, 295, 295, 297, 297, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 230, 230, 230, 330, 330, 330, 330,
	330, 330, 329, 329, 329, 293, 293, 293, 328, 328,
	54, 54, 177, 177, 43, 43, 43, 43, 43, 43,
	42, 42, 42, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 44, 44, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 82, 82, 83,
	83, 83, 83, 84, 84, 84, 309, 309, 55, 55,
	3, 3, 133, 135, 136, 136, 134, 134, 134, 134,
	134, 134, 57, 57, 56, 56, 138, 137, 139, 139,
	139, 1, 1, 2, 2, 4, 4, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 276,
	276, 276, 308, 308, 310, 312, 312, 312, 312, 311,
	91, 91, 26, 35, 35, 27, 27, 27, 27, 28,
	28, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	334, 334, 229, 229, 237, 237, 228, 228, 251, 251,
	251, 231, 231, 231, 232, 232, 338, 338, 338, 60,
	60, 60, 62, 62, 63, 64, 64, 253, 253, 254,
	254, 65, 66, 78, 78, 78, 78, 78, 78, 81,
	81, 81, 13, 13, 13, 13, 74, 74, 74, 12,
	12, 61, 61, 68, 335, 335, 336, 337, 337, 337,
	337, 69, 71, 29, 29, 29, 29, 29, 29, 101,
	101, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 96, 96, 96, 90, 90, 349, 72,
	73, 73, 94, 94, 94, 87, 87, 87, 93, 93,
	93, 14, 14, 15, 212, 212, 16, 16, 98, 98,
	100, 100, 100, 100, 100, 102, 102, 102, 102, 102,
	102, 102, 97, 97, 99, 99, 99, 99, 244, 244,
	244, 243, 243, 127, 127, 129, 128, 128, 130, 130,
	131, 131, 131, 131, 175, 175, 153, 153, 210, 210,
	208, 208, 209, 209, 211, 211, 211, 211, 214, 214,
	132, 132, 132, 132, 140, 140, 141, 141, 142, 142,
	252, 252, 249, 249, 249, 248, 248, 146, 146, 146,
	148, 147, 147, 147, 147, 149, 149, 151, 151, 150,
	150, 152, 157, 157, 156, 156, 154, 154, 154, 154,
	155, 155, 155, 155, 158, 158, 111, 111, 111, 111,
	111, 111, 111, 122, 122, 122, 122, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 79, 79, 79, 226, 226, 159,
	159, 167, 167, 167, 167, 160, 160, 160, 160, 160,
	160, 160, 168, 168, 168, 174, 169, 169, 165, 165,
	165, 165, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 319, 319, 318,
	318, 317, 317, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 350, 350, 269, 269, 269, 269,
	166, 166, 166, 166, 166, 92, 92, 92, 92, 92,
	257, 257, 257, 260, 260, 260, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 180, 180, 88, 88, 178, 178, 179, 181, 181,
	176, 176, 176, 162, 162, 162, 182, 182, 183, 183,
	184, 184, 186, 185, 185, 187, 188, 188, 188, 189,
	189, 190, 190, 190, 45, 45, 45, 45, 45, 40,
	40, 40, 40, 41, 41, 41, 103, 103, 103, 103,
	105, 105, 104, 104, 75, 75, 76, 76, 76, 109,
	109, 110, 110, 110, 107, 107, 108, 108, 206, 206,
	191, 191, 191, 198, 198, 198, 194, 194, 196, 196,
	196, 197, 197, 197, 195, 203, 203, 205, 205, 204,
	204, 200, 200, 201, 201, 202, 202, 202, 199, 199,
	161, 161, 161, 161, 161, 207, 207, 207, 207, 215,
	215, 171, 171, 173, 173, 172, 126, 216, 216, 220,
	217, 217, 221, 221, 221, 221, 221, 218, 218, 219,
	219, 245, 245, 245, 225, 225, 236, 236, 233, 233,
	234, 234, 227, 227, 238, 238, 238, 70, 170, 170,
	305, 305, 302, 241, 241, 242, 242, 246, 246, 250,
	250, 247, 247, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 346, 347, 255, 256,
	256, 256,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 4, 4, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	4, 3, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 6, 4, 4, 4, 4, 6, 0, 2, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -344, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 9,
	10, -80, -31, 32, -36, -46, 218, -47, -37, 219,
	-48, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -81, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -8, -32, 8, -346,
	11, 427, 252, 251, 28, -10, 451, 85, -345, 584,
	-206, -191, 22, 33, 29, -190, -186, -94, -191, 20,
	18, 7, -72, -349, -72, -72, 12, 13, -72, -290,
	-292, 85, 155, 85, -72, -52, -51, -50, -49, -53,
	31, -43, -44, -313, -42, -39, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-38, 80, 33, 451, 454, -297, 219, 225, 226, 428,
	122, 121, 75, 221, -294, 353, 554, -53, 556, 101,
	103, 555, 44, 231, 557, 558, 559, 560, 240, 561,
	562, 563, 564, 570, 571, 572, 573, 123, 7, -72,
	-250, -246, -323, -240, 88, 89, 90, 448, 243, 481,
	482, 292, 80, 41, 350, 353, 554, 299, 313, 307,
	334, 326, 449, 483, 295, 244, 280, 551, 324, 131,
	556, 298, 484, 258, 358, 359, 360, 101, 302, 395,
	569, 297, 485, 567, 103, 555, 79, 51, 44, 253,
	322, 227, 318, 557, 281, 486, 459, 274, 122, 119,
	576, 36, 316, 50, 30, 566, 121, 49, 558, 146,
	487, 559, 362, 341, 545, 48, 363, 259, 488, 83,
	264, 453, 553, 364, 317, 365, 291, 565, 224, 489,
	537, 366, 367, 546, 490, 342, 346, 491, 387, 368,
	583, 52, 492, 493, 547, 120, 494, 78, 560, 311,
	312, 495, 289, 242, 389, 338, 440, 107, 108, 443,
	109, 110, 441, 111, 104, 442, 112, 106, 105, 444,
	446, 113, 339, 340, 240, 35, 369, 450, 293, 58,
	268, 390, 46, 344, 580, 45, 541, 496, 544, 337,
	333, 437, 53, 497, 498, 499, 500, 561, 336, 310,
	332, 575, 4, 286, 562, 62, 226, 348, 347, 349,
	275, 386, 329, 501, 502, 503, 247, 81, 504, 319,
	21, 505, 506, 370, 282, 507, 56, 508, 509, 393,
	256, 510, 54, 563, 39, 261, 577, 564, 511, 512,
	513, 514, 263, 515, 372, 516, 371, 343, 345, 270,
	373, 452, 517, 315, 260, 568, 518, 248, 552, 262,
	267, 255, 394, 249, 519, 520, 521, 522, 523, 296,
	524, 525, 303, 570, 438, 43, 526, 527, 528, 529,
	290, 285, 388, 397, 61, 82, 355, 530, 550, 309,
	283, 531, 300, 55, 571, 572, 573, 277, 574, 9,
	581, 582, 375, 123, 287, 288, 47, 330, 269, 532,
	533, 320, 321, 335, 308, 331, 301, 538, 271, 376,
	439, 257, 534, 396, 284, 351, 356, 456, 276, 377,
	549, 455, 328, 325, 278, 535, 378, 232, 272, 273,
	536, 539, 379, 380, 294, 381, 382, 383, 384, 385,
	279, 454, 306, 323, 357, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 436, 230, -72, 230, -150, -246, 230,
	-218, 359, -237, 361, 374, 369, 379, 367, -229, 370,
	372, 270, -338, 387, 230, 376, 218, 172, 362, 371,
	380, 381, 294, 382, 385, 279, -334, -323, 559, 574,
	131, 327, 366, 364, 388, 541, 384, 383, -246, 301,
	-253, 306, -241, -323, -240, 304, -150, -78, 537, 222,
	-255, -255, -96, 541, 543, -169, -111, 139, -122, -125,
	-116, -117, -163, -164, -165, -166, -123, -176, 161, 162,
	169, 140, -174, -126, 26, 447, 429, 428, 172, 31,
	214, 68, 69, 431, 432, 142, 57, 404, 405, -124,
	400, 406, 401, 434, 435, 114, 436, 104, 106, 105,
	437, 438, 439, 339, 340, 440, 441, 442, 107, 108,
	109, 110, 111, 112, 113, 443, 446, 444, 445, -241,
	-246, 235, 399, 229, 167, 427, -118, -114, -6, -172,
	398, 402, 403, 407, -323, -240, -120, -119, -159, 91,
	97, 102, 98, -343, 115, -346, 92, 93, 94, 95,
	96, 116, 117, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 44, 375, 375, -150, -72, -72,
	-72, -72, -184, -94, -186, -8, -6, -346, 8, -72,
	-6, -7, -11, -32, -34, 477, -33, -246, -191, -206,
	12, 157, 42, 50, -189, -190, -10, -6, -111, 19,
	23, 24, -99, 163, -111, -246, -73, -99, -227, 234,
	-72, -72, -217, -258, 301, -221, 388, 387, -242, -219,
	-241, -239, -218, 386, 223, 23, 457, 138, 25, 27,
	141, 172, 126, 19, 142, 37, 225, 327, 241, 171,
	237, 428, 218, 72, 458, 400, 401, 398, 404, 430,
	431, 399, 361, 31, 13, 460, 28, 251, 24, 38,
	165, 220, 145, 461, 254, 26, 252, 114, 117, 463,
	22, 75, 246, 14, 239, 40, 16, 464, 465, 17,
	235, 234, 157, 231, 70, 11, 214, 29, 154, 66,
	466, 133, 467, 468, 469, 470, 127, 68, 155, 20,
	578, 402, 403, 33, 542, 447, 265, 167, 73, 59,
	543, 139, 471, 472, 115, 473, 118, 76, 548, 135,
	18, 71, 42, 474, 266, 475, 236, 579, 476, 391,
	477, 156, 221, 427, 69, 478, 229, 374, 8, 433,
	32, 250, 238, 125, 67, 479, 230, 144, 434, 435,
	233, 128, 116, 7, 132, 34, 12, 74, 77, 405,
	406, 407, 57, 124, 451, 143, 15, 480, 392, 137,
	131, -291, 155, -278, -282, -241, 245, -307, 241, -150,
	-300, -299, -241, -95, -236, 231, 239, 238, 132, -327,
	135, 287, 399, 229, -49, -50, -218, 171, -82, 262,
	266, 86, 86, -282, -281, -280, -328, 266, 245, -306,
	-298, 237, 246, -288, 238, 239, -283, 231, 133, -328,
	-283, 236, 246, 266, 266, 123, 266, 123, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 261, -289, 147,
	-289, 455, 455, -294, -328, -328, -328, 233, 35, 35,
	-238, -283, 233, 25, -289, -289, -218, 171, -289, -289,
	-289, -289, 274, 274, -289, -289, -289, -289, -289, -289,
	-289, -289, -289, -289, -289, -289, -289, -289, -289, 230,
	-327, -103, 385, 294, 80, -51, 276, -35, -150, -236,
	231, 232, -327, 263, -150, 215, -150, -231, 155, 15,
	-231, -228, 375, 373, 360, 365, -231, -231, -231, -231,
	277, 358, -284, 231, 35, 242, 375, 277, 358, 277,
	278, 277, 278, 368, 378, 277, -251, 14, 157, 399,
	363, 367, 270, 230, 271, 232, 377, -323, 544, 278,
	-251, 92, -232, 155, 375, 273, -231, -256, -346, -242,
	327, -256, -256, 32, 89, 233, -241, -74, -241, 92,
	-13, -9, -20, -19, -21, 147, -101, 375, -89, 172,
	559, 545, 546, 547, 544, 372, 552, 550, 548, 277,
	549, 86, 135, 137, 138, 4, -111, 154, -160, 147,
	148, 149, 150, 151, 152, 153, 157, 139, 141, 155,
	156, 136, 158, 159, 160, 161, 162, 163, 164, 166,
	165, 167, 168, 171, 216, 217, -117, -117, -117, -117,
	-174, -346, -346, -346, -117, -226, -346, -117, -346, -346,
	-346, -346, -180, -111, -346, -350, -346, -350, -350, -269,
	-346, -269, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, 215,
	-346, -346, -346, -346, -346, -269, -269, -269, -269, 102,
	97, 91, -176, 98, 92, -241, -246, -6, -7, -169,
	-255, -335, -336, -153, -150, -346, 294, -241, -241, 263,
	-189, -10, -6, -184, -190, -186, -6, -72, -87, -100,
	63, 64, -102, 24, 38, 67, 65, 23, -347, 87,
	-347, -206, -347, 86, -34, -210, 85, 61, 43, 92,
	92, 86, 21, -185, -187, -111, 14, -244, 4, -243,
	25, -241, 92, 215, 100, 14, -151, 29, -150, -227,
	-227, 86, 301, -221, -258, -223, -222, 389, 391, 147,
	-245, -241, 92, 31, 87, 86, -150, -261, -264, -266,
	-265, -267, -262, -263, 324, 325, 172, 328, 330, 331,
	332, 333, 334, 335, 336, 337, 338, 341, 32, 253,
	320, 321, 322, 323, 342, 343, 344, 345, 346, 347,
	348, 349, 307, 326, 449, 308, 309, 310, 311, 312,
	313, 315, 316, 317, 318, 319, -326, -323, 85, 87,
	86, -268, 85, -103, 230, -323, 231, 231, 231, -72,
	427, -289, -289, 261, 19, -42, -39, -313, 18, -38,
	-39, 223, 119, 120, 220, 85, -278, 85, -287, -326,
	-323, 85, 133, 236, 132, -286, -283, -286, -287, -323,
	-176, -323, 133, 133, -214, -241, -214, -214, 23, -214,
	23, -214, 23, 94, -241, -214, 23, -214, 23, -214,
	23, -214, 23, -214, 23, 31, 78, 79, 31, 81,
	82, 83, -176, -176, -278, -218, -150, -323, 94, 94,
	-289, -289, 94, 92, 92, 92, -289, -289, 94, 92,
	-248, -246, 92, -329, 247, 291, 293, 94, 94, 94,
	94, 31, 92, -330, 31, 566, 565, 567, 568, 569,
	94, 31, 94, 31, 94, -241, 85, -150, -109, 281,
	218, 220, 223, 76, 92, 295, 147, 44, 86, 233,
	230, -323, -233, 235, -233, -241, -247, -246, -239, 92,
	-111, -285, 14, 157, -251, -251, -231, -150, -285, -251,
	-231, -150, -231, -231, -231, -231, -251, -251, -251, -231,
	-246, -246, -150, -150, -150, -150, -150, -150, -150, -256,
	-256, -256, -232, -231, 544, 92, 76, -254, 304, 338,
	538, 539, 540, 86, 451, -143, -150, 544, 544, 544,
	544, 544, 544, -111, -111, -111, -111, 473, -167, 115,
	139, 116, 117, -125, -168, -172, -174, 99, 157, 141,
	155, 156, -116, -117, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -257, -323, 92,
	172, -121, -120, 98, -343, -121, -97, -99, -111, -111,
	-323, -241, -97, -97, -111, -93, 24, 38, -178, -179,
	143, -176, -347, -347, 94, 98, -241, -241, -86, -85,
	409, 410, 411, 412, 414, 415, 416, 419, 420, 424,
	425, 408, 426, 413, 418, 421, 422, 423, 417, 323,
	-111, -111, -111, -111, -111, -111, -79, -111, 126, 127,
	128, -111, -111, -170, -169, -322, -321, -320, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -98, 24, 38, -97, -242, -247, -239, -97, -98,
	-98, -97, -97, 215, -206, -347, 86, -337, 391, 392,
	542, -249, 266, -248, 25, -170, 92, 14, -212, 77,
	-241, -189, -189, 63, 64, 59, -97, -102, -347, -33,
	25, -208, -241, 62, 92, -270, -218, 350, 351, -111,
	-111, 86, -188, 27, 28, -150, -243, 163, -247, -150,
	-213, 266, -150, -128, -130, -131, -132, -153, -175, -346,
	-133, 469, 466, 14, -143, -144, -152, -246, -221, -223,
	86, 390, 392, 393, 76, 118, -111, -271, 171, -296,
	-295, -294, -278, -280, -281, -282, 87, -271, -274, 356,
	355, -268, -268, -268, -268, -268, -270, -270, -270, -270,
	85, 85, -268, -268, -268, -268, -272, 85, -272, -272,
	-273, 85, -273, -307, -111, -304, -303, -301, -302, 240,
	101, 451, 77, -299, -188, 94, -109, -234, 235, -305,
	-302, -323, -323, -323, -234, -323, 92, -323, 92, -83,
	-55, -1, 578, 579, 580, 86, 19, -279, -278, -54,
	291, -310, -311, 266, -306, -300, -287, 133, -286, -287,
	-287, -323, 86, 29, 123, 123, 123, 123, 451, 220,
	32, -278, -54, -257, 233, -257, -257, 92, 92, -230,
	574, -143, -105, 283, 147, 272, 272, 230, 230, 285,
	-150, 296, 298, 297, 295, 23, 284, 286, 288, 274,
	-150, -150, -233, 76, -145, -150, 26, -246, -150, -231,
	-231, -150, -231, -231, -150, -241, -89, 391, 86, 451,
	22, -90, 22, -346, 115, 116, 117, -168, -116, -117,
	-116, 138, 254, 86, -347, 25, 86, 77, -347, -347,
	-347, 86, 14, -97, -181, -179, 145, -111, -347, -347,
	-347, 86, 86, 14, -260, 25, -347, -347, -347, -347,
	-347, -180, -347, 14, 86, 86, -347, -347, 86, 86,
	-347, 86, 86, 86, -319, 86, 86, 86, 86, -347,
	-347, -347, -347, 86, -347, -97, -97, -346, 215, -347,
	-347, -347, -347, -347, -242, -336, 541, 392, -157, -156,
	-154, 74, 234, 75, -346, -248, -347, -121, 89, -209,
	89, -208, -162, -241, 94, 98, -191, -127, -129, 14,
	-102, -174, 87, 86, -270, -195, -200, -228, -241, 92,
	172, -187, 215, -158, 15, -161, 32, 57, -9, -346,
	-346, 32, 86, -146, -148, -147, -149, 66, 70, 72,
	67, 68, 69, 73, -252, 25, -128, -7, -6, -346,
	-346, -346, -150, -143, -348, 14, 77, -348, 86, 215,
	-222, -224, 394, 391, 397, -323, 92, -82, 86, -294,
	-282, -192, -106, 40, -275, 357, -270, -270, -277, 92,
	-277, 94, 94, 87, -45, -40, -41, 33, 80, -301,
	-289, 92, 39, -241, 87, -105, -150, 139, 76, -305,
	-305, -305, -246, -2, 577, 583, 133, 85, 360, 18,
	-208, 86, 87, -177, 292, 87, -312, 57, -241, 87,
	85, -287, -287, -241, -346, 230, 31, 31, -54, -177,
	-271, -323, 576, 575, 87, 232, 290, -110, 404, -107,
	92, 88, -150, -150, -150, -150, -150, 223, 220, 275,
	233, -143, -150, 86, -77, 249, 244, -251, -251, 33,
	-150, 391, 553, 551, -111, 138, 254, -125, -117, -99,
	448, -259, 172, 324, 253, 322, 318, 338, 329, 355,
	320, 356, 317, 316, 315, -259, -257, -111, -111, -184,
	146, -111, 144, -111, -111, -111, -347, 172, 324, 14,
	-111, -111, -111, -320, -111, -111, -111, -318, -317, -121,
	-176, -347, -318, -111, -111, -317, -317, -347, -347, -98,
	-242, -154, -283, -283, -283, -214, 86, -225, 22, 14,
	57, 57, -127, -158, -128, -102, -241, -198, 537, -203,
	46, -201, -202, 47, -199, 48, 56, 163, -189, -111,
	-215, 76, -216, -220, -176, -171, -173, -172, -346, -207,
	-347, -241, -214, -216, -130, -131, -131, -130, -131, 66,
	66, 66, 71, 66, 71, 66, -147, -246, -347, -347,
	-7, -7, -111, -249, 77, -128, -128, -152, -246, 163,
	391, 395, 396, -294, -342, 115, 139, 31, 76, 353,
	101, -340, 171, -341, 236, 132, 133, 248, 25, 41,
	87, 86, 87, 86, 87, 86, -235, 487, 139, -41,
	-40, -289, -289, 94, -323, 232, 26, -150, 76, 76,
	76, -84, 581, 94, 85, -3, 80, -111, 85, 19,
	-278, -176, 268, 157, -304, -208, -308, -310, -150, -113,
	-346, -112, -114, -118, 161, 162, -177, -150, -104, 281,
	289, 85, -108, 89, -325, 77, 272, 353, 272, -150,
	-77, -45, -150, -231, -231, 33, -323, -347, -125, -117,
	-346, -347, -268, -268, -268, -273, -268, 312, -268, 312,
	-268, -347, -347, 86, -347, 22, -347, -88, 433, -111,
	86, 86, -347, 85, 85, -111, -347, -347, -347, -319,
	86, -347, 86, -347, 86, -347, -347, -347, -155, 22,
	-155, -155, -347, 89, -150, -158, -182, 16, -195, 51,
	330, -205, -204, 55, 47, -202, 19, 49, 19, 30,
	-215, 86, 147, 86, -347, -347, 86, 57, 215, -347,
	-158, -141, -140, 76, 77, -142, 76, -140, 66, 66,
	-210, -347, -347, 86, -213, -128, -158, -158, 215, 115,
	-346, -115, -124, -113, 12, 92, 92, -323, 133, 133,
	-150, 85, -270, 92, -270, 94, 94, 487, 31, 81,
	82, 83, 31, 78, 79, -150, -150, -150, -150, -309,
	85, 19, -111, 85, 147, 87, -208, -208, 269, -172,
	-346, 87, -347, 86, -276, 451, 454, -111, -119, -119,
	-210, 87, -316, 451, -324, -241, -241, -241, -241, -116,
	-270, -111, -111, -189, 92, -111, -111, 94, 94, -347,
	-347, -318, -317, -111, -346, 66, 18, 16, -346, -346,
	-249, -182, -183, 17, 19, -196, 53, -194, 52, -194,
	-204, 19, 19, 92, 19, 92, 133, -220, -111, -173,
	57, -9, -241, -171, -241, -184, -111, 85, -111, -121,
	-158, -158, -111, -164, 436, 104, 106, 105, 437, 438,
	439, 339, 340, 440, 441, 442, 107, 108, 109, 110,
	111, 112, 113, 443, 446, 444, 85, -111, 87, 87,
	-210, -308, -55, 87, -208, 94, 87, -172, -91, -346,
	265, -341, -310, 455, 455, -347, 25, -315, -314, -242,
	85, 77, -92, 157, 451, -347, -347, -347, -347, -347,
	87, 87, -347, -347, 86, -211, -347, -241, 236, 19,
	19, -211, -211, -157, -183, -111, -169, -197, 54, 76,
	118, 92, 92, 92, 12, -171, 215, -189, -208, -135,
	360, -184, -347, -208, 87, 25, 87, 583, 133, 87,
	265, -9, 86, 147, -208, -150, -347, 449, 73, 452,
	-111, 86, -347, -347, -347, 76, 118, -216, -241, 87,
	-347, -346, -189, 87, -193, -9, 85, -3, -347, -75,
	451, -314, -293, -242, 92, 94, 87, 62, 450, 453,
	-319, -241, 236, -249, -136, -134, -241, 501, -332, -333,
	76, -342, -339, 115, 139, 101, -340, 124, 125, -75,
	-111, 85, -76, 280, 541, -325, 62, -347, -347, 86,
	22, -261, -57, 511, -333, 76, 13, 12, 115, 92,
	87, -208, 241, -316, 451, -134, 508, -271, -121, -331,
	249, 244, 247, 32, -331, -4, 582, 87, 282, 452,
	-56, 26, -135, 243, 31, 115, 94, -4, 453, 511,
	-121, -138, -137, -139, 545, 115, 31, -137, -139, 76,
	-121, 76, 461, 545,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 738,
	738, 738, 0, 738, 0, 0, 738, -2, -2, 738,
	1209, 0, 738, 0, 0, -2, 670, 672, 0, 674,
	-2, 0, 0, 683, 1688, 1688, 733, 0, 0, 0,
	0, 0, 738, 738, 738, 738, 1070, 48, 738, 0,
	83, 84, 689, 690, 691, 63, 0, 1686, 1, 3,
	69, 73, 0, 0, 0, 56, 1079, 0, 76, 0,
	0, 742, 0, 740, 0, 1192, 738, 738, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 517, 457, 500, 455, 486, -2, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 350, 350, 0, 0, -2, 448, 448, 448, 0,
	0, 0, 483, 1194, 403, 350, 350, 0, 350, 350,
	350, 350, 0, 0, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 1096,
	151, 1210, 1207, 1208, 38, 39, 40, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 0, 1186, 0, 600, 839, 0,
	661, 661, 0, 661, 661, 661, 661, 0, 0, 0,
	612, 0, 0, 0, 0, 658, 0, 0, 631, 633,
	0, 658, 0, 664, 0, 645, 661, 1689, 1689, 1689,
	1177, 0, 655, 653, 667, 668, 650, 651, 669, 673,
	0, 678, 681, 1203, 1204, 0, 696, 47, 1442, 688,
	701, 702, 0, 734, 735, 43, 936, 0, 861, 866,
	877, 890, 891, 892, 893, 894, 896, 897, 0, 0,
	0, 0, 902, 903, 0, 0, 0, 0, 0, 917,
	0, 0, 0, 0, 0, 1051, 0, 1014, 1014, 953,
	1014, 1016, 1016, 0, 0, 0, 1685, 1476, 1479, 1480,
	1503, 1586, 1632, 1484, 1485, 1468, 1474, 1477, 1469, 1470,
	1472, 1473, 1475, 1478, 1483, 1471, 1482, 1481, 0, 1060,
	0, 0, 0, 0, 0, 0, 256, 257, 935, 1166,
	1016, 1016, 1016, 1016, -2, -2, 203, 204, 205, 206,
	207, 208, 209, 0, 199, 0, 261, 262, 258, 259,
	260, 919, 920, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 1688, 0, 711, 0, 0, 0,
	0, 0, 1079, 0, 1071, 1070, 61, 0, 738, -2,
	0, 0, 0, 0, 45, 0, 50, 798, 75, 74,
	1118, 0, 0, 0, 57, 1080, 65, 67, 1081, 0,
	743, 744, 0, 774, 778, 0, 739, 0, 0, 1193,
	1192, 1192, 100, 0, 1628, 1170, -2, -2, 0, 0,
	1205, 1206, 1179, -2, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	-2, 0, 0, 161, 162, 0, 41, 376, 0, 157,
	0, 370, 320, 1096, 0, 0, 0, 0, 0, 738,
	0, 1187, 142, 143, 149, 150, 350, 350, 497, 0,
	0, 151, 151, 464, 465, 466, 0, 0, -2, 374,
	0, 449, 0, 0, 364, 364, 368, 366, 367, 0,
	0, 0, 0, 0, 0, 477, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 351,
	0, 495, 496, 404, 0, 0, 0, 0, 475, 476,
	0, 0, 1195, 1196, 0, 0, 350, 350, 0, 0,
	0, 0, 350, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1109, 0, 0, 0, -2, 0, 592, 0, 0,
	0, 1188, 1188, 0, 599, 0, 601, 602, 0, 0,
	603, 0, 658, 658, 656, 657, 605, 606, 607, 608,
	661, 0, 0, 359, 360, 361, 658, 661, 0, 661,
	661, 661, 661, 658, 658, 658, 661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1689, 1689, 1689, 664,
	661, 0, 641, 0, 642, 643, 646, 647, 1690, 1691,
	1226, 648, 649, 1178, 671, 679, 682, 699, 697, 698,
	700, 692, 693, 694, 695, 0, 713, 714, 719, 0,
	0, 0, 0, 725, 726, 727, 0, 0, 730, 731,
	732, 0, 0, 0, 0, 0, 859, 0, 0, 925,
	926, 927, 928, 929, 930, 931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 898, 899, 900, 901,
	904, 0, 0, 0, 909, 910, 0, 0, 0, 0,
	0, 748, 0, 1052, 0, 951, 0, 952, 954, 955,
	0, 956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1198, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 758, 0,
	0, 758, 758, 0, 0, 193, 194, 195, 196, 210,
	211, 212, 213, 214, 263, 1060, 0, 935, 0, 0,
	44, 703, 704, 0, 822, 1198, 0, 0, 754, 0,
	55, 64, 66, 1079, 59, 1079, 0, 760, 0, 0,
	-2, -2, 761, 767, 768, 769, 770, 771, 52, 1687,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 332,
	1121, 0, 0, 1072, 1073, 1076, 0, 775, 1514, 779,
	0, 781, 782, 0, 741, 0, 98, 0, 838, 0,
	0, 0, 1628, 1176, 0, 102, 103, 0, 0, 0,
	338, 1181, 1182, 1183, -2, 357, 0, 338, 327, 271,
	272, 273, 320, 275, 320, 320, 320, 320, 332, 332,
	332, 332, 303, 304, 305, 306, 307, 0, 0, 290,
	320, 320, 320, 320, 310, 311, 312, 313, 314, 315,
	316, 317, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 322, 322, 322, 324, 324, 0, 42, 0, 342,
	0, 1076, 0, 1109, 1190, 1200, 0, 0, 0, 1190,
	120, 0, 0, 498, 528, 458, 487, 499, 0, 461,
	462, -2, 0, 0, 448, 0, 450, 0, 358, 0,
	-2, 0, 368, 0, 364, 368, 365, 368, 356, 369,
	479, 480, 481, 0, 558, 808, 0, 0, 0, 0,
	0, 564, 565, 566, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 450, 0, 484, 0, 405, 406,
	0, 0, 409, 410, 411, 412, 0, 0, 415, 416,
	417, 825, 826, 418, 442, 443, 444, 419, 420, 421,
	422, 423, 424, 425, 436, 437, 438, 439, 440, 441,
	426, 427, 428, 429, 430, 433, 0, 135, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 0, 0, 0, 0, 757, 840, 1211, 1212, 662,
	663, 0, 362, 363, 661, 661, 609, 632, 0, 661,
	613, 634, 614, 616, 615, 617, 636, 637, 661, 620,
	659, 660, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 638, 639, 640, 665, 0, 0, 680, 684,
	685, 686, 687, 0, 0, 716, 94, 721, 722, 723,
	724, 736, 729, 937, 856, 857, 858, 0, 860, 863,
	0, 921, 923, 865, 867, 932, 933, 934, 0, 0,
	0, 0, 0, 871, 875, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 895, 1030, 1031,
	1032, 912, 264, 265, 0, 913, 0, 772, 0, 0,
	0, 911, 0, 0, 0, 0, 749, 750, 1058, 1055,
	0, 0, 1015, 1017, 0, 0, 0, 0, 0, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1033, 0, 0, 0, 0, 0, 1051, 0, 914, 915,
	916, 0, 0, 0, 1199, 0, 130, 131, 0, 0,
	0, 0, 0, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 1061, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 706, 707, 709,
	0, 842, 0, 823, 0, 0, 712, 0, 753, 0,
	756, 58, 60, 765, 766, 0, 783, 762, 54, 49,
	0, 0, 800, 1119, 332, 1141, 0, 336, 337, 1082,
	1083, 0, 1075, 1077, 1078, 77, 780, 776, 0, 854,
	0, 0, 837, 0, 786, 788, 789, 790, 820, 0,
	793, 0, 0, 0, 0, 0, 96, 839, 1171, 101,
	0, 0, 106, 107, 1172, 1173, 1174, 1175, 0, 517,
	-2, 400, 163, 165, 166, 167, 158, -2, 330, 328,
	329, 274, 332, 332, 297, 298, 299, 300, 301, 302,
	0, 0, 291, 292, 293, 294, 285, 0, 286, 287,
	288, 0, 289, 375, 0, 1084, 343, 344, 346, 350,
	0, 0, 0, 371, 372, 0, 1100, 0, 0, 0,
	1201, 1200, 1200, 1200, 0, 153, 154, 155, 156, 553,
	0, 0, 529, 551, 552, 151, 0, 0, 159, 452,
	451, 0, 585, 0, 373, 0, 0, 368, 368, 353,
	354, 482, 0, 0, 560, 561, 562, 563, 0, 0,
	0, 450, 452, 338, 0, 407, 408, 413, 414, 431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 514, 515, 516, 1097, 1098, 1099, 0,
	0, 593, 0, 0, 392, 92, 1189, 598, 658, 619,
	635, 658, 611, 618, 644, 676, 720, 0, 0, 0,
	0, 728, 0, 0, 864, 922, 924, 868, 0, 872,
	876, 0, 0, 0, 0, 0, 0, 0, 918, 942,
	943, 0, 0, 1070, 0, 1056, 0, 0, 950, 1018,
	1019, 0, 0, 0, 0, 0, 961, 962, 963, 964,
	965, 0, 967, 0, 0, 0, 971, 972, 0, 0,
	973, 0, 0, 0, 0, 0, 0, 0, 0, 982,
	983, 984, 985, 0, 938, 0, 0, 758, 0, 1020,
	1021, 1022, 1023, 1024, 1061, 705, 708, 710, 796, 843,
	844, 0, 0, 0, 0, 824, 1197, 751, 752, 755,
	-2, 0, 0, 1063, 0, 0, 783, 854, 784, 0,
	763, 51, 799, 0, 1123, 1122, 1135, 1148, 333, 334,
	335, 1074, 0, 1079, 0, 1159, 0, 0, 1151, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 0, 0,
	830, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 339, 340, 144, 151, 402,
	164, 382, 0, 0, 270, 331, 295, 296, 0, 318,
	0, 0, 0, 395, 116, 1088, 1087, 350, 350, 345,
	0, 348, 0, 1202, 321, 0, 134, 0, 0, 0,
	0, 0, 140, 523, 0, 0, 530, 0, 0, 0,
	456, 0, 467, 468, 0, 557, 584, 0, 589, 342,
	0, 352, 355, 809, 0, 0, 469, 0, 452, 473,
	474, 485, 434, 435, 432, 0, 0, 1110, 1111, 1116,
	1114, 1115, 121, 505, 507, 506, 510, 0, 0, 503,
	0, 392, 1084, 0, 597, 393, 394, 661, 661, 715,
	95, 0, 718, 0, 0, 0, 0, 869, 873, 773,
	0, 0, 320, 320, 1038, 320, 324, 1041, 320, 1043,
	320, 1046, 320, 1049, 1050, 0, 0, 0, 0, 1053,
	949, 1059, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 132, 133, 987, 0, 0, 989, 991,
	992, 977, 988, 0, 0, 0, 0, 939, 940, 0,
	1062, 845, 850, 850, 850, 0, 0, 0, 1184, 1185,
	1064, 1065, 854, 1066, 785, 764, 801, 1141, 0, 1134,
	0, -2, 1143, 0, 0, 0, 1149, 777, 78, 855,
	81, 0, 1159, 1167, 0, 1150, 1161, 1163, 0, 0,
	0, 1155, 0, 854, 787, 816, 818, 0, 813, 828,
	829, 831, 0, 833, 0, 835, 836, 798, 792, 794,
	0, 0, 0, 98, 0, 854, 854, 97, 0, 841,
	108, 109, 110, 401, 168, 173, 0, 0, 0, 178,
	0, 180, 0, 383, 0, 267, 269, 0, 0, 171,
	332, 0, 332, 0, 325, 0, 384, 396, 0, 1085,
	1086, 0, 0, 347, 349, 0, 1191, 136, 0, 0,
	0, 526, 0, 554, 0, 0, 0, 0, 0, 0,
	160, 453, 0, 0, 341, 0, 0, 582, 579, 470,
	0, 197, 198, 200, 0, 0, 472, 798, 1101, 1102,
	1103, 0, 1113, 1117, 124, 0, 0, 0, 0, 594,
	595, 596, 93, 604, 610, 717, 737, 862, 870, 874,
	0, 906, 1036, 332, 1039, 1040, 1042, 1044, 1045, 1047,
	1048, 907, 908, 0, 945, 0, 947, 1079, 0, 1057,
	0, 0, 959, 0, 0, 0, 968, 969, 970, 0,
	0, 976, 0, 978, 0, 981, 986, 941, 0, 0,
	0, 0, 822, -2, 62, 1066, 1068, 0, 1128, 1126,
	1126, 1136, 1137, 0, 0, 1144, 0, 0, 0, 0,
	82, 0, 0, 0, 1164, 0, 0, 0, 0, 99,
	1070, 810, 817, 0, 0, 811, 0, 812, 832, 834,
	791, -2, 795, 0, 854, 854, 88, 89, 0, 174,
	0, 176, 191, 192, 0, 179, 181, 182, 266, 268,
	0, 0, 308, 319, 309, 0, 0, 397, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 798, 137, 138, 139, 518,
	0, 528, 0, 0, 0, 521, 0, 459, 0, 588,
	0, 0, 559, 0, 567, 0, 0, 0, 201, 202,
	0, 1112, 504, 0, 122, 123, 0, 0, 509, 1025,
	1037, 0, 0, 0, 1054, 0, 0, 0, 0, 966,
	974, 0, 990, 0, 0, 851, 0, 0, 0, 0,
	842, 1068, 80, 0, 0, 1131, 0, 1124, 1127, 1125,
	1138, 0, 0, 1145, 0, 1147, 0, 1168, 1169, 1162,
	0, 1154, 1157, 1153, 1156, 1079, 814, 0, 819, 0,
	1070, 87, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 326,
	0, 0, 0, 519, 0, 531, 522, 586, 587, 0,
	590, 377, 583, 580, 581, 471, 0, 125, 126, 0,
	0, 0, 0, 0, 0, 944, 946, 948, 957, 958,
	1034, 1035, 975, 979, 0, 0, 847, 804, 805, 852,
	853, 0, 0, 797, 79, 1069, 1067, 1120, 0, 1129,
	1130, 1139, 1140, 1146, 0, 1152, 0, 85, 0, 0,
	0, 1079, 175, 0, 185, 0, 527, 0, 530, 520,
	0, 1104, 0, 0, 0, 511, 905, 0, 0, 0,
	987, 0, 846, 848, 849, 1132, 1133, 1160, 1158, 815,
	822, 0, 86, 378, 382, 1104, 0, 0, 591, 501,
	1106, 127, 128, 445, 446, 447, 121, 1026, 0, 1029,
	0, 806, 807, 532, 0, 534, 0, -2, 379, 380,
	0, 169, 186, 187, 0, 0, 190, 183, 184, 117,
	0, 0, 0, 1107, 1108, 124, 1027, 980, 533, 0,
	0, 338, 0, 543, 381, 0, 0, 0, 188, 189,
	555, 0, 0, 508, 0, 535, 536, 544, 0, 385,
	387, 388, 0, 0, 386, 524, 0, 555, 1105, 0,
	0, 545, 541, 389, 390, 391, 556, 525, 1028, 0,
	537, 538, 539, 0, 548, 549, 0, 540, 0, 0,
	550, 0, 546, 547,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 584,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:513
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:518
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:519
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:523
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:565
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:578
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:588
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:600
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:604
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:619
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:623
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:629
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:808
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:820
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:832
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:836
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:865
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:870
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:874
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:880
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:890
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:903
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:925
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:935
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:939
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:949
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:953
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:967
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:971
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:990
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:999
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1010
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1019
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1034
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1039
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1045
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1065
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1071
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1087
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1094
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1101
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1106
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1116
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1123
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1130
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1141
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1152
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1158
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1196
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1207
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1211
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1217
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1227
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1232
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1241
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1265
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1274
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1283
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1296
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1306
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1322
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1332
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1353
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1357
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1402
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1432
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1436
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1466
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1475
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1703
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1707
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1711
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1715
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1937
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1946
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1951
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1955
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1973
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2003
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2045
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2054
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2060
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2070
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2074
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2079
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2083
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2099
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2103
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2107
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2111
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2115
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = yyDollar[2].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = "key"
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = yyDollar[1].str
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2183
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2193
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2199
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2203
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2209
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2213
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2219
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2225
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2229
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2233
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2237
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2246
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2252
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2258
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2264
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2270
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2274
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2278
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2282
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2286
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2321
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2327
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2341
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2403
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2419
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2423
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2427
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2523
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2532
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2536
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2540
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2548
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2554
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2662
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2676
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2680
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2704
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2710
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2737
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2830
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2851
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2862
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2871
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2879
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2888
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2895
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2907
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2916
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2931
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2945
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2949
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2955
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2961
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2967
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2977
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2981
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2987
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2993
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2999
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3005
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3029
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3035
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3041
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3045
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3049
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3055
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3059
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3064
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3068
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3073
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3077
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3083
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3087
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3091
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3095
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3099
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3103
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3107
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3111
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3115
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3119
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3123
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3127
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3131
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3135
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3139
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3143
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3147
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3151
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3155
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3159
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3163
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3167
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3187
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3206
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3213
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3220
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3229
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3251
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3255
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3311
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3331
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3335
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3355
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3359
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3375
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3379
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3387
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3399
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3403
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3411
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3461
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3465
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3469
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = "extended "
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3536
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3546
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3550
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3554
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3564
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3568
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3578
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3584
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3622
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3637
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3642
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3660
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3664
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3668
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3672
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3676
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3680
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = yyDollar[1].str
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3704
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3708
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3712
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3735
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3751
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3757
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3767
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3773
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3777
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3781
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3785
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3833
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3896
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = ""
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			setAllowComments(yylex, true)
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3914
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3920
		{
			yyVAL.strs = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3924
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3930
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = SQLCacheStr
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3964
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3995
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4014
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4031
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4035
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = SQLCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = DistinctStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.str = DistinctStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = StraightJoinHint
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4071
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4081
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4085
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4089
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4093
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4106
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4118
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4122
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4128
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4134
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4148
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4152
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4156
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4160
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4166
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4170
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4176
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4180
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4189
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4195
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4205
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4209
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4215
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4219
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4233
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4237
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4250
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4254
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4258
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4262
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4270
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4290
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4298
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4311
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4315
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4319
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4325
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4331
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4335
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4339
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4343
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4349
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4353
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4363
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4392
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4398
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4402
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4408
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4412
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4416
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4420
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4425
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4429
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4433
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4437
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4447
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4474
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4478
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4489
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4493
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4497
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4511
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4515
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4519
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4527
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4531
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4535
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4585
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4705
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4709
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4713
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4729
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4733
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4740
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4744
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4748
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4752
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4758
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4762
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4766
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4770
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4774
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4778
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4782
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4788
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4792
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4796
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4803
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4809
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4823
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4849
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4853
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4857
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4869
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4892
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4896
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5040
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5046
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5050
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5068
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5072
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5076
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5080
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5084
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5088
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5092
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5096
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5100
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5104
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5108
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5114
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5118
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5122
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5126
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5130
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5134
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5138
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5142
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5146
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5201
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5205
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5209
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5213
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5217
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5223
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5241
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5245
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5251
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5255
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5259
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5263
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5267
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5273
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5277
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5281
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5285
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5289
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5293
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5297
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5301
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5305
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5309
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5324
		{
			yyVAL.str = string("")
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5328
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5334
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5338
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5344
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5359
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5363
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5367
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5396
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5414
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5420
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5426
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5430
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5436
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5441
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5445
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5449
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5458
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5464
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5468
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5472
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5481
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5485
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5489
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5493
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5500
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5504
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5508
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5512
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5518
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5522
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5526
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5531
		{
			yyVAL.str = ""
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5535
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5539
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5543
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5548
		{
			yyVAL.str = ""
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5552
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = ""
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5571
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = "cascaded"
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5593
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5599
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5605
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5611
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5620
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5624
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5629
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5633
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5639
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5643
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5649
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5653
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5657
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5666
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5675
		{
			yyVAL.str = ""
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.str = " header"
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5684
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5688
		{
			yyVAL.str = " manifest on"
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5692
		{
			yyVAL.str = " manifest off"
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5697
		{
			yyVAL.str = ""
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = " overwrite on"
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = " overwrite off"
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5711
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5716
		{
			yyVAL.str = ""
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5720
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5736
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5740
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = ""
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5759
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = ""
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = " optionally"
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5795
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5799
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5803
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5807
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5811
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5817
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5821
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5825
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5829
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5838
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5844
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5848
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5854
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5858
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5864
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5879
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5883
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5889
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5895
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5899
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5905
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5909
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5913
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5917
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5921
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5929
		{
			yyVAL.str = "charset"
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5958
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5961
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5963
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5966
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5973
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5976
		{
			yyVAL.empty = struct{}{}
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5978
		{
			yyVAL.empty = struct{}{}
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5980
		{
			yyVAL.empty = struct{}{}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5984
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5993
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6000
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6004
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6010
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6014
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6021
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6027
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6031
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6037
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6041
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6048
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6546
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6555
		{
			decNesting(yylex)
		}
	case 1688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6560
		{
			skipToEnd(yylex)
		}
	case 1689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6565
		{
			skipToEnd(yylex)
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6569
		{
			skipToEnd(yylex)
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6573
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
