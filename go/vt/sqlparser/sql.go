// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const BUCKETS = 57820
const CLONE = 57821
const COMPONENT = 57822
const DEFINITION = 57823
const ENFORCED = 57824
const EXCLUDE = 57825
const FOLLOWING = 57826
const GEOMCOLLECTION = 57827
const GET_MASTER_PUBLIC_KEY = 57828
const HISTOGRAM = 57829
const HISTORY = 57830
const INACTIVE = 57831
const INVISIBLE = 57832
const LOCKED = 57833
const MASTER_COMPRESSION_ALGORITHMS = 57834
const MASTER_PUBLIC_KEY_PATH = 57835
const MASTER_TLS_CIPHERSUITES = 57836
const MASTER_ZSTD_COMPRESSION_LEVEL = 57837
const NESTED = 57838
const NETWORK_NAMESPACE = 57839
const NOWAIT = 57840
const NULLS = 57841
const OJ = 57842
const OLD = 57843
const OPTIONAL = 57844
const ORDINALITY = 57845
const ORGANIZATION = 57846
const OTHERS = 57847
const PATH = 57848
const PERSIST = 57849
const PERSIST_ONLY = 57850
const PRECEDING = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const RANDOM = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const REUSE = 57861
const ROLE = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const SRID = 57868
const THREAD_PRIORITY = 57869
const TIES = 57870
const UNBOUNDED = 57871
const VCPU = 57872
const VISIBLE = 57873
const FORMAT = 57874
const TREE = 57875
const VITESS = 57876
const TRADITIONAL = 57877
const LOCAL = 57878
const LOW_PRIORITY = 57879
const NO_WRITE_TO_BINLOG = 57880
const LOGS = 57881
const ERROR = 57882
const GENERAL = 57883
const HOSTS = 57884
const OPTIMIZER_COSTS = 57885
const USER_RESOURCES = 57886
const SLOW = 57887
const CHANNEL = 57888
const RELAY = 57889
const EXPORT = 57890
const CURRENT = 57891
const ROW = 57892
const ROWS = 57893
const AVG_ROW_LENGTH = 57894
const CONNECTION = 57895
const CHECKSUM = 57896
const DELAY_KEY_WRITE = 57897
const ENCRYPTION = 57898
const ENGINE = 57899
const INSERT_METHOD = 57900
const MAX_ROWS = 57901
const MIN_ROWS = 57902
const PACK_KEYS = 57903
const PASSWORD = 57904
const FIXED = 57905
const DYNAMIC = 57906
const COMPRESSED = 57907
const REDUNDANT = 57908
const COMPACT = 57909
const ROW_FORMAT = 57910
const STATS_AUTO_RECALC = 57911
const STATS_PERSISTENT = 57912
const STATS_SAMPLE_PAGES = 57913
const STORAGE = 57914
const MEMORY = 57915
const DISK = 57916
const PARTITIONS = 57917
const LINEAR = 57918
const RANGE = 57919
const LIST = 57920
const SUBPARTITION = 57921
const SUBPARTITIONS = 57922
const HASH = 57923

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	599, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 455,
	-1, 55,
	35, 670,
	231, 670,
	242, 670,
	277, 684,
	278, 684,
	-2, 672,
	-1, 60,
	233, 697,
	-2, 695,
	-1, 114,
	230, 1241,
	-2, 119,
	-1, 116,
	1, 146,
	599, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 449,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 464,
	-1, 683,
	215, 1262,
	-2, 1258,
	-1, 684,
	215, 1263,
	-2, 1259,
	-1, 759,
	59, 765,
	-2, 780,
	-1, 796,
	147, 1663,
	-2, 112,
	-1, 797,
	147, 1509,
	-2, 113,
	-1, 803,
	147, 1592,
	-2, 1235,
	-1, 953,
	147, 1439,
	-2, 1232,
	-1, 991,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1068,
	1, 503,
	599, 503,
	-2, 151,
	-1, 1307,
	59, 766,
	-2, 785,
	-1, 1308,
	59, 767,
	-2, 786,
	-1, 1361,
	131, 151,
	171, 151,
	327, 151,
	-2, 399,
	-1, 1438,
	132, 358,
	236, 358,
	-2, 449,
	-1, 1447,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1747,
	215, 1267,
	-2, 1261,
	-1, 1831,
	131, 151,
	171, 151,
	327, 151,
	-2, 400,
	-1, 1838,
	25, 170,
	-2, 172,
	-1, 2074,
	86, 39,
	-2, 822,
	-1, 2126,
	77, 94,
	86, 94,
	-2, 842,
	-1, 2190,
	574, 598,
	-2, 585,
	-1, 2325,
	49, 1202,
	-2, 1196,
	-1, 2535,
	86, 39,
	-2, 823,
	-1, 2573,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 814,
	-1, 2891,
	22, 1594,
	32, 1594,
	172, 1594,
	253, 1594,
	307, 1594,
	308, 1594,
	309, 1594,
	310, 1594,
	311, 1594,
	312, 1594,
	313, 1594,
	315, 1594,
	316, 1594,
	317, 1594,
	318, 1594,
	319, 1594,
	320, 1594,
	321, 1594,
	322, 1594,
	323, 1594,
	324, 1594,
	325, 1594,
	326, 1594,
	328, 1594,
	330, 1594,
	331, 1594,
	332, 1594,
	333, 1594,
	334, 1594,
	335, 1594,
	336, 1594,
	337, 1594,
	338, 1594,
	341, 1594,
	342, 1594,
	343, 1594,
	344, 1594,
	345, 1594,
	346, 1594,
	347, 1594,
	348, 1594,
	349, 1594,
	461, 1594,
	-2, 543,
}

const yyPrivate = 57344

const yyLast = 44527

var yyAct = [...]int{
	683, 692, 2960, 2959, 2942, 2814, 2936, 1828, 2889, 2282,
	2893, 1364, 2463, 2843, 2867, 1762, 2378, 2385, 1131, 2025,
	2640, 685, 2766, 1782, 2419, 3, 2784, 774, 2339, 2674,
	2336, 2446, 2387, 1285, 2790, 1764, 1891, 2679, 2062, 2445,
	752, 671, 37, 2527, 595, 2340, 1322, 592, 2097, 669,
	686, 182, 2337, 670, 182, 599, 560, 182, 1021, 2281,
	2538, 2544, 575, 1786, 182, 2280, 621, 2448, 1801, 2564,
	2334, 2326, 182, 2120, 672, 2530, 2089, 1080, 593, 1861,
	591, 2158, 2187, 1881, 1866, 2227, 2159, 182, 2160, 1817,
	1418, 801, 154, 775, 2109, 754, 956, 1805, 1309, 38,
	2081, 587, 1716, 2244, 2064, 140, 36, 1741, 1656, 575,
	1715, 999, 575, 182, 575, 1900, 1880, 1933, 1604, 756,
	1868, 760, 2152, 1646, 1353, 981, 2128, 798, 1461, 1331,
	1806, 95, 986, 96, 604, 1808, 1289, 1668, 1216, 777,
	1623, 1553, 1152, 1549, 1744, 963, 960, 989, 992, 1445,
	91, 1452, 1878, 1793, 1535, 964, 987, 1857, 988, 1352,
	1109, 1350, 766, 1336, 1712, 1787, 1129, 1123, 1558, 1413,
	123, 124, 1064, 1437, 788, 764, 117, 2823, 76, 762,
	118, 97, 2180, 582, 85, 1223, 761, 89, 98, 2943,
	1219, 2416, 157, 1893, 1894, 1895, 1893, 2206, 2205, 1931,
	2178, 1023, 1153, 8, 102, 2623, 1754, 1521, 763, 77,
	7, 782, 87, 787, 1037, 1038, 2787, 1041, 1042, 1043,
	1044, 532, 125, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1026, 1003,
	119, 768, 2788, 90, 957, 104, 105, 2882, 108, 583,
	87, 114, 87, 2235, 179, 6, 755, 527, 753, 2437,
	2236, 2963, 178, 2969, 1153, 1034, 1626, 184, 185, 186,
	795, 2970, 2434, 1611, 802, 1002, 1610, 748, 749, 750,
	751, 1609, 776, 759, 1608, 979, 120, 1607, 142, 1759,
	1760, 1606, 1589, 978, 1027, 1028, 1029, 977, 769, 162,
	585, 2908, 586, 2060, 1598, 2322, 2884, 1163, 972, 119,
	2091, 790, 791, 2933, 2956, 2919, 2435, 2402, 2599, 967,
	2046, 1616, 178, 1039, 1169, 2762, 2761, 1025, 1024, 2633,
	152, 2883, 2634, 2183, 2955, 141, 1873, 2877, 2441, 2946,
	2840, 2930, 2641, 1971, 2868, 2962, 120, 2970, 142, 1919,
	2876, 2839, 2243, 2497, 78, 1427, 159, 80, 160, 162,
	1871, 2061, 78, 78, 78, 2375, 2376, 2374, 2214, 1163,
	1067, 2234, 2213, 119, 129, 130, 151, 150, 177, 2137,
	1968, 1126, 2136, 1823, 1824, 2138, 2100, 1354, 1099, 1355,
	152, 1822, 2828, 1104, 1105, 141, 2181, 746, 1185, 745,
	2815, 971, 1159, 2149, 973, 1151, 564, 1969, 178, 1100,
	1087, 2101, 2692, 1841, 1840, 1088, 159, 2270, 160, 2771,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1193, 1195,
	1196, 87, 120, 2541, 1439, 1440, 151, 150, 177, 87,
	87, 87, 2465, 564, 1597, 162, 2438, 1087, 2488, 1093,
	2486, 1761, 1088, 573, 577, 1166, 571, 1167, 1168, 1541,
	1086, 564, 1085, 976, 1159, 1073, 1074, 1293, 1901, 564,
	1945, 1942, 1944, 1943, 146, 127, 153, 134, 126, 2188,
	147, 148, 2209, 1125, 1106, 1934, 163, 2142, 1063, 2945,
	1101, 1536, 1120, 1511, 1107, 168, 135, 1076, 976, 1870,
	968, 1040, 159, 1939, 160, 1102, 1103, 970, 969, 980,
	138, 136, 131, 132, 133, 137, 1599, 1600, 1601, 976,
	1062, 974, 128, 2466, 177, 2458, 1116, 182, 1118, 182,
	1094, 139, 182, 2459, 146, 1441, 153, 1512, 1438, 1513,
	147, 148, 1108, 1069, 2625, 1947, 163, 1948, 2624, 1949,
	2749, 2222, 1010, 1950, 1938, 168, 974, 1046, 1940, 1045,
	2467, 575, 1133, 575, 575, 1936, 1115, 1117, 1904, 2271,
	2528, 1008, 2621, 1802, 2909, 983, 982, 1197, 575, 575,
	983, 1296, 1019, 1018, 1066, 1017, 1158, 1155, 1156, 1157,
	1162, 1164, 1161, 1016, 1160, 1001, 1937, 1015, 1014, 1013,
	1012, 1007, 565, 1430, 1154, 1145, 1020, 1001, 155, 1197,
	1969, 1083, 2391, 1089, 1090, 1091, 1092, 961, 2950, 2226,
	961, 37, 995, 1451, 959, 1788, 1789, 2928, 961, 994,
	1550, 1879, 163, 789, 975, 1127, 1128, 2065, 2067, 565,
	1001, 168, 2822, 2223, 1925, 1546, 1139, 2179, 1158, 1155,
	1156, 1157, 1162, 1164, 1161, 1030, 1160, 565, 2409, 1113,
	2239, 1097, 1542, 1114, 1001, 565, 1154, 2208, 155, 975,
	1425, 2182, 1424, 1119, 1423, 2198, 1065, 2401, 1921, 1200,
	1201, 1202, 1203, 2620, 1547, 149, 2211, 1421, 531, 1208,
	975, 1211, 1983, 1000, 695, 1011, 1112, 526, 1036, 994,
	997, 998, 2811, 961, 2580, 1000, 1829, 991, 995, 2940,
	1004, 994, 2542, 1121, 1009, 2560, 2221, 2133, 143, 2220,
	1005, 144, 1872, 2096, 2051, 2772, 1753, 1450, 990, 1135,
	1136, 1340, 695, 1264, 695, 1134, 1283, 1078, 1000, 2838,
	1006, 1204, 116, 1004, 994, 149, 182, 1197, 1278, 1196,
	575, 575, 2373, 1005, 155, 1110, 1523, 1522, 1524, 1525,
	1526, 771, 1000, 1540, 1198, 1199, 182, 1001, 2229, 1559,
	2245, 1124, 2834, 2228, 111, 81, 1022, 2229, 143, 1082,
	1297, 144, 2228, 1148, 1970, 575, 2616, 2961, 77, 182,
	1146, 2439, 2440, 2263, 575, 1299, 1300, 2066, 2554, 1303,
	575, 1284, 1935, 1543, 2442, 756, 1001, 1356, 1149, 86,
	1225, 1221, 798, 1222, 1669, 1669, 1997, 86, 86, 86,
	2171, 2881, 2913, 1628, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1147, 1075, 1629, 1630, 1627,
	173, 174, 175, 176, 112, 1084, 2880, 1072, 1167, 1168,
	1301, 2247, 1302, 1168, 95, 2688, 96, 1096, 2591, 1270,
	1271, 1272, 1273, 1274, 1284, 1000, 1920, 2590, 1098, 1908,
	1460, 994, 997, 998, 1918, 961, 1459, 1449, 2924, 991,
	995, 1290, 1916, 1010, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1169, 1913, 1008, 1111, 1341,
	173, 174, 175, 176, 1000, 1537, 1035, 1538, 2581, 1169,
	1539, 98, 1560, 2257, 2256, 2255, 2249, 2951, 2253, 1081,
	2248, 2938, 2246, 1068, 2939, 1913, 2937, 2251, 1287, 2953,
	184, 185, 186, 1917, 1648, 1351, 2250, 753, 1298, 2757,
	2756, 1321, 755, 1187, 1188, 1189, 1190, 1191, 1192, 1194,
	1193, 1195, 1196, 2252, 2254, 2747, 182, 2656, 1530, 802,
	1414, 2853, 1915, 1304, 2804, 1346, 1347, 2655, 1318, 1422,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 1618, 1620, 1621, 1528, 1518, 173, 174, 175, 176,
	575, 2598, 1447, 1191, 1192, 1194, 1193, 1195, 1196, 1169,
	1456, 2952, 2925, 2854, 1458, 1619, 2805, 575, 575, 2597,
	575, 2417, 575, 575, 1649, 575, 575, 575, 575, 575,
	575, 1529, 2899, 1975, 1976, 1977, 1166, 2407, 1167, 1168,
	575, 2156, 1169, 2155, 182, 1494, 2897, 1876, 1428, 1429,
	1166, 1169, 1167, 1168, 793, 2901, 2902, 1527, 1517, 2265,
	182, 1531, 1516, 2389, 2390, 1794, 1795, 1515, 1457, 2494,
	2898, 575, 1514, 182, 1189, 1190, 1191, 1192, 1194, 1193,
	1195, 1196, 1505, 1499, 1548, 1496, 1495, 575, 1470, 182,
	2831, 2782, 1316, 1489, 1490, 1507, 1443, 1316, 1325, 1316,
	2462, 1436, 698, 699, 700, 182, 1673, 2830, 1497, 1498,
	1674, 2808, 182, 2807, 1503, 1504, 2806, 2752, 2687, 1453,
	1453, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	575, 184, 185, 186, 1316, 2588, 1491, 184, 185, 186,
	1166, 2140, 1167, 1168, 575, 575, 1463, 1326, 1464, 1420,
	1466, 1468, 2685, 2652, 1472, 1474, 1476, 1478, 1480, 1455,
	1454, 2595, 182, 2587, 2165, 1434, 1432, 2388, 1433, 2153,
	178, 1446, 1280, 1166, 1929, 1167, 1168, 1928, 1785, 2391,
	1555, 1563, 1166, 1767, 1167, 1168, 1590, 1426, 1567, 1556,
	1569, 1570, 1571, 1572, 120, 1519, 1506, 1576, 1173, 1174,
	1175, 1176, 1177, 1178, 1179, 1171, 1492, 162, 1647, 1588,
	1653, 1653, 1169, 184, 185, 186, 1169, 1889, 1650, 1654,
	1502, 1659, 575, 184, 185, 186, 2014, 1887, 1501, 1551,
	1651, 1651, 184, 185, 186, 1500, 2779, 575, 575, 1327,
	1631, 1169, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 978, 1561, 1562, 1122, 977,
	1138, 2778, 1169, 1622, 159, 1624, 160, 2741, 1169, 2740,
	1566, 119, 1632, 2639, 1565, 2335, 101, 1573, 1574, 1575,
	2189, 1169, 1713, 2006, 1670, 2553, 177, 100, 1169, 99,
	1185, 1993, 2238, 1745, 2492, 1316, 1586, 100, 1587, 1316,
	2087, 2944, 182, 2915, 1316, 2087, 2874, 575, 2087, 2861,
	1594, 1595, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194,
	1193, 1195, 1196, 2034, 1316, 1625, 92, 2087, 2857, 2098,
	1756, 182, 94, 94, 575, 2168, 1713, 93, 1772, 1837,
	1773, 92, 2098, 1166, 182, 1167, 1168, 1166, 575, 1167,
	1168, 2926, 93, 182, 2105, 182, 1316, 182, 182, 575,
	1655, 1988, 575, 1992, 1169, 1984, 1747, 1661, 1662, 1745,
	1987, 2553, 1166, 575, 1167, 1168, 2555, 798, 2849, 1316,
	798, 1329, 1838, 2368, 1749, 1750, 1165, 95, 2833, 96,
	1316, 1316, 1969, 1166, 163, 1167, 1168, 2087, 2824, 1166,
	2106, 1167, 1168, 168, 2631, 2821, 1316, 95, 2106, 96,
	2511, 1316, 1166, 2553, 1167, 1168, 1746, 2087, 1778, 1166,
	1748, 1167, 1168, 1751, 1752, 2087, 2748, 1914, 575, 2106,
	1804, 2511, 101, 1169, 1882, 1883, 1884, 2631, 1316, 1886,
	1888, 2397, 1747, 100, 2310, 99, 1328, 2087, 2629, 1847,
	1848, 1849, 1850, 575, 94, 1913, 1316, 2558, 1316, 575,
	1456, 1777, 1821, 1456, 1832, 1456, 1984, 1766, 2019, 1833,
	1842, 1912, 1843, 1844, 1845, 1846, 1815, 1165, 1316, 768,
	2019, 1316, 2399, 2398, 1913, 1169, 1902, 2129, 1853, 1854,
	1855, 1856, 1799, 1780, 2003, 1166, 2002, 1167, 1168, 2395,
	2396, 575, 1863, 1647, 1913, 1836, 1169, 1896, 1647, 1647,
	1869, 1797, 1316, 2395, 2394, 2026, 155, 2106, 1316, 1820,
	1819, 1984, 1316, 1792, 802, 1320, 2381, 802, 2129, 1835,
	1757, 1834, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194,
	1193, 1195, 1196, 2083, 182, 1969, 2207, 1417, 2192, 1899,
	2130, 182, 2185, 2186, 2087, 2086, 182, 182, 94, 2132,
	182, 1169, 182, 1003, 1166, 1602, 1167, 1168, 2819, 182,
	1864, 2382, 1169, 1453, 1417, 1416, 182, 1859, 1860, 1362,
	1361, 2905, 1875, 1874, 684, 1877, 1169, 1545, 2575, 1885,
	1169, 2130, 1348, 758, 985, 984, 2384, 1922, 2864, 1002,
	1969, 87, 182, 1864, 1906, 1905, 2768, 575, 2600, 1907,
	2379, 1323, 1910, 1909, 1911, 1984, 1166, 1923, 1167, 1168,
	2738, 2699, 2615, 2612, 2593, 1169, 1924, 2389, 2390, 1169,
	2503, 1926, 1927, 1169, 2380, 183, 2502, 1166, 183, 1167,
	1168, 183, 2464, 1419, 1316, 1862, 576, 2460, 183, 1960,
	1961, 1185, 2422, 1982, 1963, 2745, 183, 2418, 2601, 2602,
	2603, 1169, 1932, 1964, 2193, 1858, 2386, 2161, 1852, 2617,
	87, 183, 2513, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1194, 1193, 1195, 1196, 1851, 1533, 1979, 1448, 1981, 1169,
	1444, 1415, 1166, 576, 1167, 1168, 576, 183, 576, 113,
	2420, 1953, 1169, 1166, 2162, 1167, 1168, 2509, 1169, 2769,
	1067, 2500, 1624, 1873, 2162, 2499, 1770, 1166, 1980, 1167,
	1168, 1166, 2604, 1167, 1168, 2968, 1482, 1169, 2565, 2566,
	2966, 2388, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 2391, 2157, 1592, 2921, 2894, 173, 174,
	175, 176, 1169, 2568, 2414, 1967, 1166, 2413, 1167, 1168,
	1166, 1169, 1167, 1168, 1166, 2412, 1167, 1168, 182, 2605,
	2606, 2043, 1625, 1483, 1484, 2335, 182, 1698, 1978, 2172,
	1653, 575, 2057, 1954, 2042, 2571, 2357, 575, 2071, 1324,
	2041, 2358, 1166, 2570, 1167, 1168, 2355, 2911, 575, 1485,
	1651, 2356, 2354, 2359, 2075, 2115, 2116, 1593, 2353, 2040,
	2559, 2069, 2875, 1784, 1776, 1996, 2315, 2327, 2329, 1994,
	1166, 182, 1167, 1168, 1169, 182, 2330, 2803, 2314, 1169,
	2546, 2678, 2680, 1166, 2039, 1167, 1168, 2102, 2545, 1166,
	2139, 1167, 1168, 2038, 772, 2549, 2324, 1544, 2383, 1486,
	1487, 1488, 773, 37, 2012, 1747, 744, 2393, 1166, 2088,
	1167, 1168, 2122, 1169, 1690, 1679, 1680, 1681, 1682, 1692,
	1683, 1684, 1685, 1697, 1693, 1686, 1687, 1694, 1695, 1696,
	1688, 1689, 1691, 1166, 575, 1167, 1168, 2084, 2147, 182,
	2166, 2669, 1166, 2668, 1167, 1168, 182, 2048, 2049, 1032,
	1665, 1031, 92, 1290, 2059, 1746, 2037, 2474, 575, 1169,
	2161, 2036, 2232, 93, 1666, 575, 1169, 2150, 2151, 1456,
	1456, 1169, 92, 1137, 575, 2200, 2085, 2121, 2199, 94,
	120, 2184, 2095, 93, 2143, 94, 2204, 1986, 2080, 2164,
	2551, 2667, 2203, 2127, 2948, 2035, 2410, 182, 182, 182,
	182, 182, 1957, 2131, 2820, 1166, 2134, 1167, 1168, 2764,
	1166, 1869, 1167, 1168, 182, 182, 2141, 2111, 2114, 2115,
	2116, 2112, 2392, 2113, 2117, 2119, 2144, 2565, 2566, 1946,
	182, 1794, 1795, 1781, 2313, 2154, 780, 781, 2531, 101,
	1973, 2029, 2312, 1169, 1166, 99, 1167, 1168, 2163, 1647,
	100, 1185, 99, 2028, 1181, 2169, 1182, 2795, 100, 2173,
	2174, 2175, 1436, 2794, 2686, 2684, 2202, 2683, 2676, 2665,
	1183, 1184, 1180, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1194, 1193, 1195, 1196, 2613, 2550, 1653, 2548, 1653, 2423,
	1166, 1653, 1167, 1168, 1897, 2262, 1653, 1166, 2201, 1167,
	1168, 1431, 1166, 101, 1167, 1168, 1651, 575, 1651, 779,
	2675, 1651, 575, 2539, 100, 2098, 1651, 1169, 2194, 2195,
	2923, 2922, 2241, 2240, 2083, 2027, 2272, 2923, 2004, 575,
	2304, 1768, 2224, 1342, 2295, 2296, 2297, 2298, 1333, 2809,
	2283, 2586, 2283, 770, 182, 2283, 106, 107, 575, 2288,
	2283, 2258, 2285, 2242, 2289, 103, 88, 575, 1, 2896,
	544, 183, 1758, 183, 575, 575, 183, 182, 182, 182,
	182, 182, 2259, 1288, 1166, 2304, 1167, 1168, 1169, 182,
	2230, 2892, 2276, 2231, 182, 2332, 1520, 182, 1510, 182,
	2317, 2642, 182, 182, 182, 576, 2347, 576, 576, 2024,
	1714, 1169, 2367, 2765, 2428, 760, 2290, 2291, 2292, 2293,
	2294, 2426, 576, 576, 1169, 1903, 2338, 2318, 2303, 2611,
	1169, 2338, 1867, 993, 145, 1303, 2122, 2408, 2305, 1830,
	1831, 1169, 2870, 182, 110, 954, 2341, 2306, 2307, 2308,
	109, 2316, 2433, 2319, 996, 1095, 575, 1898, 1166, 2632,
	1167, 1168, 2148, 1839, 575, 2430, 2429, 2309, 2427, 182,
	2023, 1368, 2369, 762, 2348, 2370, 1366, 2351, 1367, 182,
	761, 1365, 2360, 1370, 1369, 2005, 95, 2444, 96, 1596,
	2405, 2406, 2371, 2022, 182, 1555, 572, 182, 2118, 180,
	2364, 2365, 1357, 2346, 1185, 2377, 2020, 2475, 2349, 2350,
	1334, 2352, 2016, 1033, 2425, 534, 2400, 2404, 2403, 1166,
	2452, 1167, 1168, 2015, 2451, 1930, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1194, 1193, 1195, 1196, 101, 540, 1209,
	1591, 2311, 1166, 2135, 1167, 1168, 1869, 2443, 100, 799,
	99, 792, 2424, 1769, 2455, 1166, 2073, 1167, 1168, 94,
	2343, 1166, 2543, 1167, 1168, 2323, 2325, 2090, 2508, 2328,
	575, 2321, 1166, 2802, 1167, 1168, 2677, 2470, 2472, 2473,
	2469, 575, 182, 2862, 2145, 1330, 1314, 1310, 2478, 2477,
	183, 1995, 1667, 1809, 576, 576, 1617, 597, 596, 2484,
	594, 1311, 2076, 2099, 1172, 687, 2481, 2482, 2063, 2483,
	183, 1343, 2485, 2110, 2487, 2108, 2489, 2111, 2114, 2115,
	2116, 2112, 2107, 2113, 2117, 1955, 1774, 1775, 1313, 576,
	1312, 1314, 1310, 183, 1816, 2537, 2567, 2563, 576, 182,
	2958, 2888, 1811, 1807, 576, 2082, 1311, 605, 598, 590,
	2583, 2450, 2210, 2532, 2533, 2461, 2212, 2589, 2146, 2457,
	1150, 1306, 182, 584, 966, 1664, 2562, 2547, 2540, 2770,
	2826, 1307, 1308, 1313, 1972, 1312, 2496, 2552, 2572, 1305,
	182, 1677, 1678, 182, 182, 182, 2415, 2190, 2578, 2579,
	1890, 2569, 63, 575, 575, 41, 2045, 2525, 2785, 661,
	2845, 2452, 2786, 1705, 579, 2451, 2576, 2907, 1141, 786,
	32, 31, 2577, 30, 29, 28, 2618, 2619, 2584, 2585,
	23, 22, 21, 20, 19, 25, 18, 17, 2594, 16,
	2596, 2436, 2918, 2947, 115, 575, 575, 575, 575, 50,
	47, 45, 122, 121, 48, 44, 1070, 42, 27, 784,
	26, 15, 14, 13, 12, 11, 10, 9, 5, 4,
	35, 34, 33, 1144, 2622, 24, 2, 2432, 2626, 2627,
	2628, 2431, 2177, 2638, 2636, 2637, 1892, 0, 0, 0,
	0, 1653, 0, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2651, 0, 0, 2647, 0, 0,
	183, 1651, 0, 1651, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2648, 588, 0, 0,
	2672, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 575, 0, 0, 576, 2283, 0, 2283, 2664, 0,
	2663, 2660, 0, 0, 0, 2659, 0, 1653, 0, 778,
	2681, 576, 576, 2693, 576, 2701, 576, 576, 2695, 576,
	576, 576, 576, 576, 576, 0, 0, 1651, 2673, 37,
	0, 2691, 0, 2697, 576, 2682, 2689, 0, 183, 2338,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 183, 2702, 2703, 0, 0, 182,
	2341, 2705, 0, 0, 2341, 576, 0, 183, 0, 2746,
	0, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	2744, 576, 2743, 183, 2742, 0, 0, 0, 0, 0,
	2767, 0, 2759, 2760, 2758, 0, 0, 575, 0, 183,
	0, 575, 575, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 2753, 2754, 2755, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 576, 0, 2750, 0, 0, 2789,
	575, 0, 0, 2799, 2783, 2796, 2797, 0, 576, 576,
	2801, 2798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2810, 0, 2813, 0, 2812, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 0, 2816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 2818, 0, 0, 0, 0, 2341, 0, 575,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 2829,
	2832, 0, 2835, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 576, 0, 0, 0, 37, 0, 0, 0,
	2842, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 575, 0, 0, 0, 0,
	2855, 0, 0, 0, 2860, 0, 2863, 0, 2865, 0,
	575, 0, 2767, 2871, 0, 0, 2869, 0, 2879, 182,
	575, 2878, 37, 0, 0, 2338, 183, 0, 0, 0,
	0, 576, 0, 0, 2887, 0, 0, 0, 2903, 2895,
	2900, 0, 0, 0, 0, 0, 0, 2910, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 576, 0,
	0, 0, 2917, 2920, 0, 0, 575, 0, 183, 0,
	0, 0, 576, 0, 0, 0, 575, 183, 0, 183,
	1653, 183, 183, 576, 2932, 2934, 576, 2931, 2935, 2927,
	2941, 2929, 0, 0, 0, 0, 0, 576, 0, 0,
	1651, 2949, 0, 0, 0, 0, 184, 185, 186, 2954,
	0, 0, 0, 0, 0, 0, 0, 0, 1653, 0,
	0, 2965, 2964, 0, 0, 1653, 2957, 0, 0, 0,
	178, 0, 0, 2967, 0, 0, 0, 0, 1651, 0,
	0, 1435, 0, 0, 0, 1651, 0, 0, 0, 564,
	0, 0, 576, 0, 120, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 576, 160, 0, 0, 1170,
	0, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 0, 1439, 1440, 151, 150, 177, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	183, 183, 0, 0, 183, 0, 183, 0, 543, 0,
	0, 0, 0, 183, 0, 0, 0, 556, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 576, 0, 0, 588, 0, 0, 0, 0, 0,
	0, 0, 146, 1441, 153, 565, 1438, 0, 147, 148,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 0, 535,
	549, 0, 567, 0, 566, 539, 0, 537, 541, 550,
	542, 0, 536, 0, 547, 0, 0, 538, 551, 552,
	554, 557, 558, 559, 555, 0, 545, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 2707, 2709, 2708, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 576, 0, 0, 574, 0,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 183,
	0, 0, 0, 149, 0, 800, 0, 0, 958, 0,
	965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 144,
	0, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 576, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2713, 2714, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 183, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 183,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 183, 0, 0, 0, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 673, 1557, 622, 677, 624, 674, 675, 0, 620,
	623, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 626,
	2706, 2710, 2711, 2712, 2715, 2716, 2717, 2725, 2727, 650,
	2726, 2728, 2729, 2730, 2733, 2734, 2735, 2736, 2731, 2732,
	2737, 576, 0, 0, 0, 2916, 576, 0, 0, 0,
	0, 0, 678, 0, 679, 1385, 0, 0, 0, 0,
	0, 0, 0, 576, 0, 1612, 1613, 1614, 1615, 680,
	681, 0, 682, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 0, 0, 576, 576,
	0, 183, 183, 183, 183, 183, 1657, 1658, 0, 0,
	0, 0, 0, 183, 1663, 0, 0, 0, 183, 0,
	0, 183, 0, 183, 0, 0, 183, 183, 183, 1699,
	1700, 1701, 1702, 1703, 1704, 1706, 1710, 1711, 588, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 78, 39, 40, 80, 588, 0, 576, 0,
	0, 0, 588, 183, 0, 1373, 0, 0, 0, 0,
	0, 0, 84, 183, 0, 0, 43, 69, 70, 0,
	67, 71, 0, 0, 0, 0, 0, 0, 183, 68,
	0, 183, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 56, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 800, 0, 800,
	800, 0, 0, 0, 0, 0, 1386, 0, 0, 0,
	0, 0, 0, 0, 1140, 1142, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1399, 1402, 1403, 1404, 1405, 1406, 1407, 0, 1408, 1409,
	1410, 1411, 1412, 1387, 1388, 1389, 1390, 1371, 1372, 1400,
	0, 1374, 0, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 0, 183, 1384, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 1281,
	0, 75, 72, 0, 183, 0, 0, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 576, 576, 0,
	0, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1386, 1294, 1295, 0, 576,
	576, 576, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 59, 60, 61, 62,
	0, 0, 0, 0, 1401, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	800, 0, 0, 0, 0, 0, 1358, 0, 0, 1399,
	1402, 1403, 1404, 1405, 1406, 1407, 0, 1408, 1409, 1410,
	1411, 1412, 1387, 1388, 1389, 1390, 1371, 1372, 1400, 183,
	1374, 0, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 0, 0, 1384, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 0, 576, 0, 576, 0, 0, 0, 0,
	0, 1317, 1319, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1217, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 1401, 0, 576, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 576, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 1462, 1462, 0, 1462, 0, 1462, 1462,
	0, 1471, 1462, 1462, 1462, 1462, 1462, 0, 0, 0,
	0, 0, 0, 576, 1281, 1281, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 183, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 800, 0, 576, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	800, 800, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 2261, 0, 0, 0, 2264, 0, 0,
	576, 0, 2266, 2267, 2268, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 2273, 2274, 2275, 0, 1660, 1717,
	2277, 0, 2278, 2279, 0, 1281, 0, 2286, 2287, 0,
	0, 0, 0, 1675, 1676, 1717, 1717, 1717, 1717, 1717,
	588, 588, 588, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2333, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1671, 0, 0, 0, 1672, 2366, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 800, 0, 0,
	0, 0, 0, 0, 0, 800, 0, 0, 800, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2421, 0, 0, 1317, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 1779, 696,
	697, 0, 0, 0, 965, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 958,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2498, 0, 0, 0, 0,
	0, 0, 2504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2614, 181,
	0, 0, 530, 0, 0, 570, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 2635,
	0, 0, 0, 0, 0, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 0, 785, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2649, 0, 2650, 0, 0, 0, 0, 2653,
	2654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2690, 1985, 0, 0, 0, 1989,
	800, 1990, 1991, 0, 0, 2698, 0, 0, 2700, 0,
	1999, 0, 0, 2000, 2001, 0, 0, 1783, 0, 0,
	0, 0, 2704, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2739, 2092, 0, 0, 0, 0, 0,
	2007, 2008, 2009, 2010, 2011, 0, 2013, 0, 0, 0,
	0, 0, 2017, 0, 2018, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 2030, 2031, 2032, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 2047, 0, 0, 0, 0, 0, 0, 2052, 2053,
	2054, 2055, 2056, 0, 1779, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 2800, 588, 0, 0, 0,
	2167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 2191, 0, 0, 0, 0, 0, 0, 0, 0,
	2196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2841, 0, 0, 0, 2846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 1281, 0, 1281, 0, 0, 1281, 0, 0, 0,
	0, 1281, 0, 0, 2846, 0, 0, 0, 0, 0,
	0, 0, 0, 2300, 0, 0, 0, 0, 800, 0,
	0, 0, 0, 0, 2904, 0, 0, 0, 0, 0,
	696, 697, 0, 0, 0, 1462, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2320, 530, 0, 530, 0, 0,
	530, 0, 0, 800, 0, 2269, 0, 1281, 0, 0,
	2345, 1462, 1281, 2846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2301, 2302,
	0, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 958, 0, 0, 1281, 0, 0, 0, 0,
	1783, 0, 0, 2344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2362, 2363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	0, 0, 0, 0, 0, 0, 2526, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 2320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 767, 0, 0, 2476, 0, 0,
	0, 0, 0, 0, 2480, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 530, 2490, 2491,
	2493, 2495, 578, 0, 0, 0, 0, 0, 2501, 0,
	747, 0, 0, 2505, 2506, 2507, 0, 694, 79, 0,
	2510, 0, 0, 0, 0, 0, 2512, 0, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 0,
	0, 0, 0, 2529, 0, 0, 0, 0, 0, 2534,
	0, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2556, 2557, 0, 0, 2561, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 79, 0, 0,
	0, 0, 0, 0, 2573, 2574, 0, 0, 0, 0,
	0, 2643, 2644, 2645, 2646, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 1281, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 2694, 0, 2696, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 1282, 0, 0,
	0, 0, 530, 0, 2657, 0, 0, 0, 2658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 1783, 0, 0, 2662, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 2792, 0, 0, 0, 2792, 2792, 1577,
	1578, 530, 530, 530, 530, 530, 530, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 2773,
	2774, 2775, 0, 2776, 2777, 0, 0, 0, 0, 2780,
	0, 2781, 0, 0, 0, 0, 2791, 0, 0, 0,
	0, 0, 0, 0, 785, 1783, 0, 0, 0, 0,
	0, 785, 785, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 2856, 0,
	0, 0, 0, 0, 0, 1071, 0, 1077, 0, 0,
	1079, 0, 785, 1554, 785, 785, 785, 785, 785, 0,
	800, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2885, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 2890, 0, 0, 0,
	2837, 0, 0, 0, 0, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	2850, 0, 0, 0, 0, 0, 2851, 2852, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 1554,
	0, 530, 1783, 530, 2858, 530, 1818, 0, 0, 0,
	0, 0, 2890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1130, 0,
	1130, 1130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 2906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2912, 0,
	0, 0, 0, 0, 757, 1205, 1206, 1207, 2914, 1210,
	0, 1212, 1213, 1214, 1215, 0, 1218, 1220, 1220, 0,
	1220, 1224, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 0, 1265, 1266, 1267, 1268, 1269, 0, 0, 0,
	0, 1224, 1224, 1224, 1224, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 530, 530, 0, 0, 530, 0,
	1958, 0, 0, 0, 0, 1292, 0, 530, 0, 0,
	0, 757, 0, 0, 530, 757, 0, 0, 0, 0,
	0, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 688, 696, 697, 698, 699, 700, 689,
	691, 0, 0, 0, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 693, 701, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2453, 2454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 1493, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1564, 0, 0, 0, 0, 0, 0,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	1605, 0, 0, 0, 2176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 673, 0, 0, 677, 0, 674, 675, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 1130, 0, 0,
	0, 0, 0, 0, 0, 530, 530, 530, 530, 530,
	0, 1130, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 0, 1282, 0, 0, 1282, 0,
	0, 0, 0, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 1803, 0, 0, 1605, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	0, 0, 0, 0, 1282, 530, 530, 530, 530, 530,
	0, 0, 0, 0, 0, 0, 0, 2361, 0, 0,
	0, 0, 530, 0, 0, 1508, 0, 530, 0, 0,
	530, 2372, 1554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 688, 696, 697, 698, 699, 700, 689, 691, 0,
	0, 0, 690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 693, 701, 702, 0, 1941,
	0, 0, 0, 0, 1951, 1952, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 2453, 2454, 0, 0, 0, 0, 0, 0, 0,
	1965, 0, 0, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 530, 530, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2126, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2170, 0, 2103,
	2104, 0, 0, 0, 0, 0, 0, 0, 2123, 0,
	2124, 2125, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2215, 2216, 2217, 2218, 2219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 2225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2299, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2411, 0, 0, 0, 0, 0, 0, 0, 2342,
	0, 79, 0, 0, 1810, 1810, 1810, 1810, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 2447, 0, 0,
	0, 2123, 757, 0, 0, 0, 1810, 2456, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2468, 0, 0, 2471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2607, 0,
	0, 2608, 2609, 2610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2666, 0,
	2670, 2671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2342, 0, 79, 0, 2342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2836, 0,
	2342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 2859, 0, 936, 921, 450, 79, 865,
	939, 834, 853, 949, 856, 859, 901, 813, 879, 371,
	850, 805, 838, 808, 845, 809, 836, 867, 245, 833,
	923, 883, 938, 326, 242, 815, 839, 385, 855, 193,
	903, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 945, 330, 889, 0, 435,
	356, 0, 0, 0, 869, 927, 877, 915, 864, 902,
	823, 888, 940, 851, 898, 941, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	2872, 0, 2873, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 847, 895, 935, 848, 897, 240, 286, 247,
	239, 454, 946, 926, 812, 876, 934, 0, 0, 209,
	937, 871, 0, 900, 0, 952, 807, 891, 0, 810,
	814, 948, 930, 842, 250, 0, 0, 0, 0, 0,
	0, 0, 868, 878, 912, 862, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 887, 0, 0, 0, 819,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 822, 0, 841, 913,
	0, 804, 269, 816, 357, 232, 0, 919, 929, 863,
	488, 933, 861, 860, 907, 820, 925, 854, 325, 818,
	294, 188, 205, 0, 852, 367, 408, 414, 924, 837,
	846, 230, 844, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 886, 905, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 1132, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 832,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 920, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	910, 951, 380, 413, 219, 474, 434, 827, 831, 825,
	892, 826, 881, 882, 828, 942, 943, 944, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 914, 821, 0,
	829, 830, 0, 922, 931, 932, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 885, 187, 202,
	328, 947, 402, 262, 503, 482, 478, 806, 824, 237,
	835, 843, 0, 849, 857, 858, 870, 872, 873, 874,
	875, 893, 894, 896, 904, 906, 909, 911, 916, 928,
	950, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 884, 890, 339, 255, 274, 285, 899, 481,
	439, 207, 409, 263, 228, 917, 918, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 880, 908, 335, 451, 452, 281, 353, 0, 0,
	936, 921, 450, 0, 865, 939, 834, 853, 949, 856,
	859, 901, 813, 879, 371, 850, 805, 838, 808, 845,
	809, 836, 867, 245, 833, 923, 883, 938, 326, 242,
	815, 839, 385, 855, 193, 903, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	945, 330, 889, 0, 435, 356, 0, 0, 0, 869,
	927, 877, 915, 864, 902, 823, 888, 940, 851, 898,
	941, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 847, 895, 935,
	848, 897, 240, 286, 247, 239, 454, 946, 926, 812,
	876, 934, 0, 0, 209, 937, 871, 0, 900, 0,
	952, 807, 891, 0, 810, 814, 948, 930, 842, 250,
	0, 0, 0, 0, 0, 0, 0, 868, 878, 912,
	862, 0, 0, 0, 0, 0, 2373, 0, 840, 0,
	887, 0, 0, 0, 819, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 866, 0, 0,
	0, 822, 0, 841, 913, 0, 804, 269, 816, 357,
	232, 0, 919, 929, 863, 488, 933, 861, 860, 907,
	820, 925, 854, 325, 818, 294, 188, 205, 0, 852,
	367, 408, 414, 924, 837, 846, 230, 844, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 886, 905,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	1132, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 832, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 920, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 910, 951, 380, 413, 219,
	474, 434, 827, 831, 825, 892, 826, 881, 882, 828,
	942, 943, 944, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 914, 821, 0, 829, 830, 0, 922, 931,
	932, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 885, 187, 202, 328, 947, 402, 262, 503,
	482, 478, 806, 824, 237, 835, 843, 0, 849, 857,
	858, 870, 872, 873, 874, 875, 893, 894, 896, 904,
	906, 909, 911, 916, 928, 950, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 884, 890, 339,
	255, 274, 285, 899, 481, 439, 207, 409, 263, 228,
	917, 918, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 880, 908, 335, 451,
	452, 281, 353, 0, 0, 936, 921, 450, 0, 865,
	939, 834, 853, 949, 856, 859, 901, 813, 879, 371,
	850, 805, 838, 808, 845, 809, 836, 867, 245, 833,
	923, 883, 938, 326, 242, 815, 839, 385, 855, 193,
	903, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 945, 330, 889, 0, 435,
	356, 0, 0, 0, 869, 927, 877, 915, 864, 902,
	823, 888, 940, 851, 898, 941, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 847, 895, 935, 848, 897, 240, 286, 247,
	239, 454, 946, 926, 812, 876, 934, 0, 0, 209,
	937, 871, 0, 900, 0, 952, 807, 891, 0, 810,
	814, 948, 930, 842, 250, 0, 0, 0, 0, 0,
	0, 0, 868, 878, 912, 862, 0, 0, 0, 0,
	0, 2331, 0, 840, 0, 887, 0, 0, 0, 819,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 822, 0, 841, 913,
	0, 804, 269, 816, 357, 232, 0, 919, 929, 863,
	488, 933, 861, 860, 907, 820, 925, 854, 325, 818,
	294, 188, 205, 0, 852, 367, 408, 414, 924, 837,
	846, 230, 844, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 886, 905, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 1132, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 832,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 920, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	910, 951, 380, 413, 219, 474, 434, 827, 831, 825,
	892, 826, 881, 882, 828, 942, 943, 944, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 914, 821, 0,
	829, 830, 0, 922, 931, 932, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 885, 187, 202,
	328, 947, 402, 262, 503, 482, 478, 806, 824, 237,
	835, 843, 0, 849, 857, 858, 870, 872, 873, 874,
	875, 893, 894, 896, 904, 906, 909, 911, 916, 928,
	950, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 884, 890, 339, 255, 274, 285, 899, 481,
	439, 207, 409, 263, 228, 917, 918, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 880, 908, 335, 451, 452, 281, 353, 0, 0,
	936, 921, 450, 0, 865, 939, 834, 853, 949, 856,
	859, 901, 813, 879, 371, 850, 805, 838, 808, 845,
	809, 836, 867, 245, 833, 923, 883, 938, 326, 242,
	815, 839, 385, 855, 193, 903, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	945, 330, 889, 0, 435, 356, 0, 0, 0, 869,
	927, 877, 915, 864, 902, 823, 888, 940, 851, 898,
	941, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 847, 895, 935,
	848, 897, 240, 286, 247, 239, 454, 946, 926, 812,
	876, 934, 0, 0, 209, 937, 871, 0, 900, 0,
	952, 807, 891, 0, 810, 814, 948, 930, 842, 250,
	0, 0, 0, 0, 0, 0, 0, 868, 878, 912,
	862, 0, 0, 0, 0, 0, 1798, 0, 840, 0,
	887, 0, 0, 0, 819, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 866, 0, 0,
	0, 822, 0, 841, 913, 0, 804, 269, 816, 357,
	232, 0, 919, 929, 863, 488, 933, 861, 860, 907,
	820, 925, 854, 325, 818, 294, 188, 205, 0, 852,
	367, 408, 414, 924, 837, 846, 230, 844, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 886, 905,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	1132, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 832, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 920, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 910, 951, 380, 413, 219,
	474, 434, 827, 831, 825, 892, 826, 881, 882, 828,
	942, 943, 944, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 914, 821, 0, 829, 830, 0, 922, 931,
	932, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 885, 187, 202, 328, 947, 402, 262, 503,
	482, 478, 806, 824, 237, 835, 843, 0, 849, 857,
	858, 870, 872, 873, 874, 875, 893, 894, 896, 904,
	906, 909, 911, 916, 928, 950, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 884, 890, 339,
	255, 274, 285, 899, 481, 439, 207, 409, 263, 228,
	917, 918, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 880, 908, 335, 451,
	452, 281, 353, 0, 0, 936, 921, 450, 0, 865,
	939, 834, 853, 949, 856, 859, 901, 813, 879, 371,
	850, 805, 838, 808, 845, 809, 836, 867, 245, 833,
	923, 883, 938, 326, 242, 815, 839, 385, 855, 193,
	903, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 945, 330, 889, 0, 435,
	356, 0, 0, 0, 869, 927, 877, 915, 864, 902,
	823, 888, 940, 851, 898, 941, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 847, 895, 935, 848, 897, 240, 286, 247,
	239, 454, 946, 926, 812, 876, 934, 0, 0, 209,
	937, 871, 0, 900, 0, 952, 807, 891, 0, 810,
	814, 948, 930, 842, 250, 0, 0, 0, 0, 0,
	0, 0, 868, 878, 912, 862, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 887, 0, 0, 0, 819,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 822, 0, 841, 913,
	0, 804, 269, 816, 357, 232, 0, 919, 929, 863,
	488, 933, 861, 860, 907, 820, 925, 854, 325, 818,
	294, 188, 205, 0, 852, 367, 408, 414, 924, 837,
	846, 230, 844, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 886, 905, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 1132, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 832,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 920, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	910, 951, 380, 413, 219, 474, 434, 827, 831, 825,
	892, 826, 881, 882, 828, 942, 943, 944, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 914, 821, 0,
	829, 830, 0, 922, 931, 932, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 885, 187, 202,
	328, 947, 402, 262, 503, 482, 478, 806, 824, 237,
	835, 843, 0, 849, 857, 858, 870, 872, 873, 874,
	875, 893, 894, 896, 904, 906, 909, 911, 916, 928,
	950, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 884, 890, 339, 255, 274, 285, 899, 481,
	439, 207, 409, 263, 228, 917, 918, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 880, 908, 335, 451, 452, 281, 353, 0, 0,
	936, 921, 450, 0, 865, 939, 834, 853, 949, 856,
	859, 901, 813, 879, 371, 850, 805, 838, 808, 845,
	809, 836, 867, 245, 833, 923, 883, 938, 326, 242,
	815, 839, 385, 855, 193, 903, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	945, 330, 889, 0, 435, 356, 0, 0, 0, 869,
	927, 877, 915, 864, 902, 823, 888, 940, 851, 898,
	941, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 847, 895, 935,
	848, 897, 240, 286, 247, 239, 454, 946, 926, 812,
	876, 934, 0, 0, 209, 937, 871, 0, 900, 0,
	952, 807, 891, 0, 810, 814, 948, 930, 842, 250,
	0, 0, 0, 0, 0, 0, 0, 868, 878, 912,
	862, 0, 0, 0, 0, 0, 0, 0, 840, 0,
	887, 0, 0, 0, 819, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 866, 0, 0,
	0, 822, 0, 841, 913, 0, 804, 269, 816, 357,
	232, 0, 919, 929, 863, 488, 933, 861, 860, 907,
	820, 925, 854, 325, 818, 294, 188, 205, 0, 852,
	367, 408, 414, 924, 837, 846, 230, 844, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 886, 905,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	1132, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 832, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 920, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 910, 951, 380, 413, 219,
	474, 434, 827, 831, 825, 892, 826, 881, 882, 828,
	942, 943, 944, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 914, 821, 0, 829, 830, 0, 922, 931,
	932, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 885, 187, 202, 328, 947, 402, 262, 503,
	482, 478, 806, 824, 237, 835, 843, 0, 849, 857,
	858, 870, 872, 873, 874, 875, 893, 894, 896, 904,
	906, 909, 911, 916, 928, 950, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 884, 890, 339,
	255, 274, 285, 899, 481, 439, 207, 409, 263, 228,
	917, 918, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 880, 908, 335, 451,
	452, 281, 353, 0, 0, 936, 921, 450, 0, 865,
	939, 834, 853, 949, 856, 859, 901, 813, 879, 371,
	850, 805, 838, 808, 845, 809, 836, 867, 245, 833,
	923, 883, 938, 326, 242, 815, 839, 385, 855, 193,
	903, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 945, 330, 889, 0, 435,
	356, 0, 0, 0, 869, 927, 877, 915, 864, 902,
	823, 888, 940, 851, 898, 941, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 847, 895, 935, 848, 897, 240, 286, 247,
	239, 454, 946, 926, 812, 876, 934, 0, 0, 953,
	937, 871, 0, 900, 0, 952, 807, 891, 0, 810,
	814, 948, 930, 842, 250, 0, 0, 0, 0, 0,
	0, 0, 868, 878, 912, 862, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 887, 0, 0, 0, 819,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 822, 0, 841, 913,
	0, 804, 269, 816, 357, 232, 0, 919, 929, 863,
	488, 933, 861, 860, 907, 820, 925, 854, 325, 818,
	294, 188, 205, 0, 852, 367, 408, 414, 924, 837,
	846, 230, 844, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 886, 905, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 817, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 832,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 920, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 803, 797, 796, 295, 332,
	910, 951, 380, 413, 219, 474, 434, 827, 831, 825,
	892, 826, 881, 882, 828, 942, 943, 944, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 914, 821, 0,
	829, 830, 0, 922, 931, 932, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 885, 187, 202,
	328, 947, 402, 262, 503, 482, 478, 806, 824, 237,
	835, 843, 0, 849, 857, 858, 870, 872, 873, 874,
	875, 893, 894, 896, 904, 906, 909, 911, 916, 928,
	950, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 884, 890, 339, 255, 274, 285, 899, 481,
	439, 207, 409, 263, 228, 917, 918, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 880, 908, 335, 451, 452, 281, 353, 0, 0,
	936, 921, 450, 0, 865, 939, 834, 853, 949, 856,
	859, 901, 813, 879, 371, 850, 805, 838, 808, 845,
	809, 836, 867, 245, 833, 923, 883, 938, 326, 242,
	815, 839, 385, 855, 193, 903, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	945, 330, 889, 0, 435, 356, 0, 0, 0, 869,
	927, 877, 915, 864, 902, 823, 888, 940, 851, 898,
	941, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 847, 895, 935,
	848, 897, 240, 286, 247, 239, 454, 946, 926, 812,
	876, 934, 0, 0, 953, 937, 871, 0, 900, 0,
	952, 807, 891, 0, 810, 814, 948, 930, 842, 250,
	0, 0, 0, 0, 0, 0, 0, 868, 878, 912,
	862, 0, 0, 0, 0, 0, 0, 0, 840, 0,
	887, 0, 0, 0, 819, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 866, 0, 0,
	0, 822, 0, 841, 913, 0, 804, 269, 816, 357,
	232, 0, 919, 929, 863, 488, 933, 861, 860, 907,
	820, 925, 854, 325, 818, 294, 188, 205, 0, 852,
	367, 408, 414, 924, 837, 846, 230, 844, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 886, 905,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 1349, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	817, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 832, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 920, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	803, 797, 796, 295, 332, 910, 951, 380, 413, 219,
	474, 434, 827, 831, 825, 892, 826, 881, 882, 828,
	942, 943, 944, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 914, 821, 0, 829, 830, 0, 922, 931,
	932, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 885, 187, 202, 328, 947, 402, 262, 503,
	482, 478, 806, 824, 237, 835, 843, 0, 849, 857,
	858, 870, 872, 873, 874, 875, 893, 894, 896, 904,
	906, 909, 911, 916, 928, 950, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 884, 890, 339,
	255, 274, 285, 899, 481, 439, 207, 409, 263, 228,
	917, 918, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 880, 908, 335, 451,
	452, 281, 353, 0, 0, 936, 921, 450, 0, 865,
	939, 834, 853, 949, 856, 859, 901, 813, 879, 371,
	850, 805, 838, 808, 845, 809, 836, 867, 245, 833,
	923, 883, 938, 326, 242, 815, 839, 385, 855, 193,
	903, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 945, 330, 889, 0, 435,
	356, 0, 0, 0, 869, 927, 877, 915, 864, 902,
	823, 888, 940, 851, 898, 941, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 847, 895, 935, 848, 897, 240, 286, 247,
	239, 454, 946, 926, 812, 876, 934, 0, 0, 953,
	937, 871, 0, 900, 0, 952, 807, 891, 0, 810,
	814, 948, 930, 842, 250, 0, 0, 0, 0, 0,
	0, 0, 868, 878, 912, 862, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 887, 0, 0, 0, 819,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 822, 0, 841, 913,
	0, 804, 269, 816, 357, 232, 0, 919, 929, 863,
	488, 933, 861, 860, 907, 820, 925, 854, 325, 818,
	294, 188, 205, 0, 852, 367, 408, 414, 924, 837,
	846, 230, 844, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 886, 905, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 794,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 817, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 832,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 920, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 803, 797, 796, 295, 332,
	910, 951, 380, 413, 219, 474, 434, 827, 831, 825,
	892, 826, 881, 882, 828, 942, 943, 944, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 914, 821, 0,
	829, 830, 0, 922, 931, 932, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 885, 187, 202,
	328, 947, 402, 262, 503, 482, 478, 806, 824, 237,
	835, 843, 0, 849, 857, 858, 870, 872, 873, 874,
	875, 893, 894, 896, 904, 906, 909, 911, 916, 928,
	950, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 884, 890, 339, 255, 274, 285, 899, 481,
	439, 207, 409, 263, 228, 917, 918, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 880, 908, 335, 451, 452, 281, 353, 0, 0,
	0, 0, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 1742, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 1743, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 688, 696, 697, 698, 699, 700,
	689, 691, 0, 0, 217, 690, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 693, 701,
	702, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 783, 0, 0, 0,
	667, 0, 602, 0, 0, 610, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 666, 0, 0, 488, 0, 0, 664, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 673, 665, 622, 677, 624, 674, 675, 619,
	620, 623, 676, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 668, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 678, 237, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 682, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	695, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 688, 696, 697, 698, 699, 700,
	689, 691, 0, 0, 217, 690, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 693, 701,
	702, 0, 240, 286, 247, 239, 454, 0, 0, 1707,
	1708, 1709, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 0, 0, 0, 0,
	667, 0, 602, 0, 0, 610, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 666, 0, 0, 488, 0, 0, 664, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 673, 665, 622, 677, 624, 674, 675, 619,
	620, 623, 676, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 668, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 678, 237, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 682, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	695, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 1825,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 688, 696, 697, 698, 699, 700,
	689, 691, 0, 0, 217, 690, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 693, 701,
	702, 1826, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 0, 0, 0, 0,
	667, 0, 602, 0, 0, 610, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 666, 0, 0, 488, 0, 0, 664, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 673, 665, 622, 677, 624, 674, 675, 619,
	620, 623, 676, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 668, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 678, 237, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 682, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	695, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 0, 335, 451,
	452, 281, 353, 0, 0, 0, 78, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 86, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 2866, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 2844,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 2848, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 2847, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 1316, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 783, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 2848, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 2847, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 688,
	696, 697, 698, 699, 700, 689, 691, 0, 0, 217,
	690, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 693, 701, 702, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 667, 0, 602, 0, 0,
	610, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 666, 0, 0,
	488, 0, 0, 664, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 673, 665, 622,
	677, 624, 674, 675, 619, 620, 623, 676, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 668, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 678, 237,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 682, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 695, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	696, 697, 0, 0, 0, 0, 1652, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 1001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 1000,
	488, 0, 0, 0, 0, 0, 997, 998, 325, 961,
	294, 188, 205, 991, 995, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 0, 335, 451, 452, 281, 353, 0, 0,
	0, 78, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 86, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 1335, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 1337, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 1166, 0,
	1167, 1168, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 1277, 1280, 0, 0, 0, 0,
	1276, 1279, 0, 0, 217, 1275, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 0, 335, 451,
	452, 281, 353, 0, 0, 0, 78, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 1316, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 86, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 1765, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 1763, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 961,
	294, 188, 205, 959, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 1765, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 1316, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 2793, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 2078, 0, 0, 0, 2079, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 1360,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 2886, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 2793, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 2528, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 1603, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1481, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1479, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1477, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1475, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1473, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1469, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1467, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1465, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 1442, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 1344, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1143, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 580, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 528, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 2891, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 2535, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 2074, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 0, 335, 451, 452, 281,
}

var yyPact = [...]int{
	3754, -1000, -412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1890, 2260, -1000, -1000,
	-1000, -1000, 2074, -1000, 689, 1604, -1000, 1889, 255, -1000,
	42748, 467, -1000, 41568, 458, 2858, 42748, -1000, 155, -1000,
	147, 42748, 150, 40978, -1000, -1000, -253, 19138, 1802, 24,
	22, 42748, -1000, -1000, -1000, -1000, 2036, 1575, -1000, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, 40388, -1000, -1000, -1000,
	1896, 1870, 2071, 604, 1792, -1000, 1965, 1575, -1000, 19138,
	2030, 1953, 17958, -1000, 17958, 399, -1000, -1000, 13228, -1000,
	-1000, 25048, 42748, 42748, 269, -1000, 1889, -1000, -1000, 338,
	-1000, 314, 1499, -1000, 1498, -1000, 462, 474, 335, 448,
	429, 334, 333, 332, 331, 327, 319, 317, 316, 345,
	-1000, 629, 629, -139, -140, 1153, 392, 392, 392, 422,
	1856, 1854, -1000, 673, -1000, 629, 629, 330, 629, 629,
	629, 629, 285, 283, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 290,
	1889, 267, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42748, 234, 42748, -1000,
	522, 42748, 764, 764, 87, 764, 764, 764, 764, 172,
	626, 13, -1000, 132, 228, 116, 265, 741, 296, -1000,
	-1000, 214, 741, 1156, 616, 108, -1000, 764, 764, -1000,
	10848, 179, 10848, 10848, -1000, 1881, -1000, -1000, -1000, -1000,
	1161, -1000, 413, -1000, -1000, -1000, -1000, 42748, 39798, 346,
	661, -1000, -1000, -1000, 30, -1000, -1000, 1290, 891, 19138,
	1041, -1000, 1855, 576, -1000, -1000, -1000, -1000, -1000, 548,
	19728, 19728, 19728, 19728, -1000, -1000, 1506, 1506, 1506, 1506,
	19728, 1506, 19728, 1506, 1506, 1506, 1506, 19138, 1506, 1506,
	1506, -1000, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506,
	1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506,
	1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506,
	1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506,
	1506, 1506, 1506, 518, 1506, 1506, 1506, 1506, 1506, -1000,
	-1000, -1000, -1000, 1506, 1506, 1506, 1506, 1506, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22683, -1000, 15598, 1506, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 42748, -1000, 1506, 173, 42748,
	42748, 318, 1965, 1575, -1000, 2036, 1972, 356, -1000, 2338,
	1415, 1294, 1000, 1575, 1429, 42748, -1000, 1516, -1000, -1000,
	-1000, 1718, 1045, 1137, -1000, -1000, -1000, -1000, 1350, 19138,
	-1000, -1000, 2064, -1000, 22093, 516, 799, 2059, 39208, -1000,
	399, 399, 1496, 12633, -3, -1000, -1000, -1000, 660, 27998,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1881, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1483, 42748, -1000, -1000, 3782, 1134,
	-1000, 1596, -1000, 1478, -1000, 1548, 1620, 457, 1134, 443,
	441, 439, -1000, -74, -1000, -1000, -1000, -1000, -1000, 629,
	629, -1000, 342, 2022, 255, 2963, -1000, -1000, -1000, 38618,
	1595, 1134, -1000, 1592, -1000, 744, 491, 531, 531, 1134,
	-1000, -1000, 42748, 1134, 743, 737, 42748, 42748, -1000, 38028,
	-1000, 37438, 36848, 984, 42748, 36258, 35668, 35078, 34488, 33898,
	-1000, 1685, -1000, 1758, -1000, -1000, -1000, 42748, 42748, 42748,
	312, -1000, -1000, 42748, 1134, -1000, -1000, 982, 981, 629,
	629, 979, 1133, 1126, 1118, 629, 629, 978, 1094, 29178,
	246, 968, 963, 958, 954, 1093, 176, 953, 927, 957,
	42748, 1590, 42748, -1000, 210, 687, 367, 656, 1889, 1793,
	1491, 412, 454, 1134, 395, 395, 42748, -1000, 11443, -1000,
	-1000, 1087, 19138, -1000, 755, 741, 741, -1000, -1000, -1000,
	-1000, -1000, -1000, 764, 42748, 755, -1000, -1000, -1000, 741,
	764, 42748, 764, 764, 764, 764, 741, 741, 741, 764,
	42748, 42748, 42748, 42748, 42748, 42748, 42748, 42748, 42748, 10848,
	616, 764, -264, -1000, 1084, -1000, 1721, -1000, -1000, -1000,
	-1000, -1000, -1000, 10848, 10848, -1000, -1000, -1000, -1000, 140,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -34,
	1469, 33308, -1000, -265, -269, -272, -275, -1000, -1000, -1000,
	-280, -283, -1000, -1000, -1000, 19138, 19138, 19138, 19138, -164,
	-1000, 866, 19728, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	167, 682, 19728, 19728, 19728, 19728, 19728, 19728, 19728, 19728,
	19728, 19728, 19728, 19728, 19728, 19728, 19728, 842, 5258, 5258,
	576, 576, 576, 576, -1000, 17958, 19138, 19138, 576, -1000,
	1134, 32718, 17958, 17958, 19138, 1866, 672, 891, 42748, -1000,
	1000, -1000, -1000, -1000, 1002, -1000, 42748, 42748, 1444, 19138,
	19138, 19138, 19138, 19138, 19138, 14413, 19138, 19138, 19138, 19138,
	19138, 19138, 19138, 19138, 19138, 19138, 19138, 19138, 19138, 19138,
	19138, 19138, 19138, 19138, 19138, 19138, 19138, 19138, 19138, 19138,
	19138, 19138, 1000, 13823, 11443, 17958, 17958, 17958, 17958, 17958,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 511, 1259, 1309, 1381, 19138, -1000, 1434, -1000,
	-103, 24458, 19138, 1081, 2057, 1629, 42748, -1000, -1000, -1000,
	1965, -1000, 1965, 1259, 2293, 1745, 17958, -1000, -1000, 2293,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1293, -1000,
	42748, 1429, 1948, 42748, 1741, 1076, 275, -1000, 19138, 19138,
	1427, -1000, 1028, 42748, -1000, -164, -1000, 32128, -1000, -1000,
	10253, -1000, 42748, 307, 42748, -1000, 23868, 31538, 12038, -3,
	-1000, 12038, 1366, -1000, 0, -10, 15003, 535, -1000, -1000,
	-1000, 1153, 20908, 1242, 535, 58, -1000, -1000, -1000, 1548,
	-1000, 1548, 1548, 1548, 1548, 275, 275, 275, 275, -1000,
	-1000, -1000, -1000, -1000, 1589, 1573, -1000, 1548, 1548, 1548,
	1548, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1570, 1570,
	1570, 1550, 1550, 387, -1000, 19138, 259, 42748, 1944, 943,
	210, 396, 1626, 1134, 1134, 1134, 396, -1000, 1125, 1115,
	-1000, -400, 1411, -1000, -1000, 2015, -1000, -1000, 634, 774,
	760, 507, 42748, 177, 302, -1000, 376, -1000, 42748, 1134,
	736, 531, 1134, -1000, 1134, -1000, -1000, -1000, -1000, -1000,
	1134, 1408, -1000, 1388, 839, 759, 810, 751, 1408, -1000,
	-1000, -114, 1408, -1000, 1408, -1000, 1408, -1000, 1408, -1000,
	1408, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 646,
	42748, 177, 842, -1000, 411, -1000, -1000, 842, 842, -1000,
	-1000, -1000, -1000, 1075, 1072, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -390, 42748, -1000, 202, 655, 293, 324, 273,
	42748, 175, 1946, 261, 279, 42748, 42748, 395, 1697, 42748,
	1916, 42748, -1000, -1000, -1000, -1000, -1000, 891, 42748, -1000,
	-1000, 764, 764, -1000, -1000, 42748, 764, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 764, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 42748, -1000, -1000, -1000, -1000, 42748, -1000, -1000, -1000,
	-1000, -1000, 92, -12, 321, -1000, -1000, -1000, -1000, -1000,
	1958, -1000, 891, 711, 715, -1000, 1506, -1000, -1000, 908,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 167, 19728, 19728,
	19728, 1505, 438, 2098, 1364, 784, 903, 903, 830, 830,
	581, 581, 581, 581, 581, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1070, -1000, 1425, -1000, 1902, 1274, 1000,
	-1000, 1425, 1425, 1267, 17958, -1000, -1000, 671, -1000, 19138,
	1000, -1000, -1000, 1000, 1000, 1400, 1398, 2054, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1248,
	1547, 1547, 1547, 1547, 1547, 19138, 1202, -1000, -1000, -1000,
	2167, 2156, 1000, 1290, 1000, 1372, -1000, 2150, 1547, 2137,
	2114, 2053, 1419, 1979, 1907, 1895, 1547, 1547, 1547, 1227,
	1849, 1815, 1810, 1747, 1738, 1713, 1694, 1688, 1675, 1547,
	-166, 1000, 17958, 17958, 1370, 1506, 509, -1000, 1425, 1000,
	1000, 1425, 1425, 11443, 1000, -1000, 1381, 42748, -1000, -250,
	-1000, -32, 563, 1506, -1000, 29178, 1000, -1000, 4607, -1000,
	43928, -1000, -1000, -1000, -1000, -1000, 27408, 1519, 2293, -1000,
	-1000, 1506, 1458, -1000, -1000, 275, 50, 26818, -1000, -1000,
	891, 891, 19138, -1000, -1000, -1000, -1000, -1000, -1000, 508,
	2040, 354, 1506, -1000, 1312, 2281, -1000, -1000, -1000, 1940,
	21503, -1000, 1506, 1506, 42748, 1504, 1463, -1000, 502, -1000,
	1366, -3, -13, -1000, -1000, -1000, -1000, 891, -1000, 1039,
	309, 401, -1000, 379, -1000, -1000, -1000, -1000, 1838, 46,
	-1000, -1000, -1000, 275, 275, -1000, -1000, -1000, -1000, -1000,
	-1000, 1067, 1067, -1000, -1000, -1000, -1000, -1000, 939, -1000,
	-1000, -1000, 937, -1000, -1000, 1647, 1624, 259, -1000, -1000,
	629, 1062, 1841, 42748, -1000, -1000, 1238, 202, 42748, 681,
	1693, -1000, 1626, 1626, 1626, 42748, -1000, -1000, -1000, -1000,
	-392, 49, 311, -1000, -1000, -1000, 315, 42748, 1456, -1000,
	187, -1000, 1183, -1000, 42748, -1000, 1451, 1569, 1134, 1134,
	-1000, -1000, -1000, 42748, 1506, -1000, -1000, -1000, -1000, 445,
	1887, 1884, 177, 187, 535, 1134, -1000, -1000, -1000, -1000,
	-1000, -393, 1449, 435, 192, 280, 42748, 42748, 42748, 42748,
	42748, 496, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	276, 410, -1000, 42748, 42748, 533, -1000, -1000, -1000, 741,
	-1000, -1000, 741, -1000, -1000, -1000, -1000, -1000, 1869, 42748,
	-21, -312, -1000, -303, 19138, -1000, -1000, -1000, -1000, 1144,
	406, 2098, 19728, 19728, 17958, -108, 598, 598, 842, -1000,
	-1000, -1000, 19138, 19138, 1269, 647, -1000, 19138, 905, -1000,
	-1000, -1000, 19138, 19138, 19138, 1000, 245, -1000, -1000, -1000,
	-1000, -1000, 2052, -1000, 19138, 19138, 19138, -1000, -1000, 19138,
	19138, -1000, 19138, 19138, 20318, 1000, 20318, 19138, 19138, 20318,
	-1000, -1000, -1000, -1000, 20318, 19138, 19138, 19138, 19138, 19138,
	19138, 19138, 19138, 19138, -1000, -1000, 30948, -1000, 1425, 1425,
	17958, 11443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 563, -1000, 531, 531, 531, 42748, -1000,
	-1000, -1000, -1000, -1000, -1000, 1348, 1960, -1000, 1761, 1749,
	2050, 2040, -1000, 23868, 2293, -1000, -1000, 42748, -244, -1000,
	1790, 1760, -1000, -1000, -1000, -1000, 9658, 1965, 19138, 1689,
	42748, 165, -1000, 23278, 42748, 42748, 23868, 23868, 23868, 23868,
	23868, -1000, 1732, 1726, -1000, 1720, 1710, 1727, 42748, -1000,
	1421, 1000, 1972, 21503, 356, 19138, 25638, 1296, 23868, -1000,
	-1000, 23868, 42748, 9063, -1000, -1000, -25, -31, -1000, -1000,
	-1000, -1000, 1153, -1000, -1000, 1485, 1937, 1806, -1000, -1000,
	-1000, -1000, 1417, -1000, 1403, 1345, 1386, 178, -1000, 1614,
	1867, 629, 629, -1000, 933, -1000, 1134, -1000, -1000, 426,
	-1000, 1910, 42748, 1679, 1671, 1668, -1000, -405, 917, 1562,
	1610, 19138, 1557, 2010, 1321, 42748, -1000, -1000, 42748, -1000,
	215, -1000, 259, 42748, -1000, -1000, -1000, 302, 42748, -1000,
	7000, 187, -1000, -1000, -1000, -1000, -1000, -1000, 42748, 244,
	-1000, 1552, 1001, -1000, -1000, 1555, -1000, -1000, -1000, -1000,
	170, 288, -1000, 42748, 524, 1624, 42748, -1000, -1000, -1000,
	764, 764, -1000, -1000, 1864, -1000, 1134, 1547, 19728, 19728,
	-1000, 576, -1000, 1506, 1000, 1548, 1548, -1000, 1548, 1550,
	-1000, 1548, 138, 1548, 136, 1548, -1000, -1000, 1000, 1000,
	1198, 1037, -82, -1000, 891, 19138, 1619, 1615, 1547, -1000,
	1541, 1535, 19138, 1547, 1547, 1547, -1000, 891, 1419, 1611,
	1314, -1000, -1000, -1000, -1000, 1335, 1547, 1576, 1000, 1000,
	1384, 1384, 1384, 1384, 1384, 1381, 1381, 1381, 1381, 30358,
	-1000, -1000, -1000, 1000, -1000, -1000, 1956, 1956, 1956, 1359,
	43338, 42748, -1000, -1000, -1000, -1000, 2040, 2037, 1333, -1000,
	-1000, 50, 382, -1000, 1773, 1760, -1000, 2008, 1786, 2006,
	-1000, -1000, -1000, 891, -1000, 1900, 1189, -1000, 651, 1280,
	-1000, -1000, 17368, 1361, 1743, 500, 1359, 1317, 2281, 1642,
	1667, 1891, -1000, -1000, -1000, -1000, 1717, -1000, 1709, -1000,
	-1000, 1516, -1000, -1000, 1309, 1000, 1492, 307, 23868, 1304,
	1304, -1000, 489, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	793, 6362, 2069, -1000, 1061, -1000, 1033, -1000, 734, 725,
	-1000, 42748, 1529, -1000, 275, 1059, 275, 915, -1000, 897,
	-1000, -1000, -181, -1000, -1000, 1567, 1681, -1000, -1000, 42748,
	-1000, -1000, 42748, 42748, 42748, 1528, 2005, -1000, 19138, 1527,
	639, 1572, 42748, 42748, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 415, 629, -369, 274, 270, 629,
	629, 629, -1000, -1000, 1351, 1341, -1000, -134, -1000, 19138,
	-1000, -1000, -1000, 998, 998, -1000, 1516, -1000, -1000, -1000,
	1176, -1000, -1000, -121, 42748, 42748, 42748, 42748, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 576, 19728,
	-1000, -1000, 275, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19138, -1000, 19138, -1000, 1965, 1051, 891, 19138,
	19138, -1000, 873, 863, 1547, -1000, -1000, -1000, 1000, 20318,
	-1000, 20318, -1000, 19138, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1000, 304, 1980, 1990, -1000,
	1506, 1865, 1506, 1506, 25638, -1000, -1000, 2037, 2033, 1989,
	1768, 1770, 1770, 1773, -1000, 1988, 1986, -1000, 1050, 1985,
	1016, 722, -1000, 42748, 19138, 165, -1000, 355, 42748, 165,
	42748, -1000, 1980, -1000, -1000, 19138, 1526, -1000, 19138, -1000,
	-1000, -1000, -1000, -1000, -1000, 5258, 2040, 1304, -1000, -1000,
	589, -1000, 19138, -1000, -1000, -1000, 3162, -1000, -1000, -1000,
	-1000, -1000, 1525, 19138, -1000, -1000, -1000, 1172, 1170, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1516, -1000, -1000,
	-1000, -1000, 302, -397, 1558, 42748, 861, -1000, 1329, 1321,
	281, 165, 1015, 629, 629, 629, 846, 845, 29178, 364,
	-1000, 302, -1000, -141, -142, 1547, -1000, -1000, 1924, -1000,
	-1000, 11443, -1000, -1000, 1511, 1622, -1000, 262, -1000, 1547,
	1547, 1000, -1000, 1547, 1547, 1164, 1139, -1000, -1000, 1314,
	-1000, 995, -1000, 1980, -352, 19138, 26228, -1000, 1984, 1978,
	29768, 29768, 563, 2033, -1000, 19138, 19138, 1763, 888, -1000,
	-1000, -1000, -1000, 1014, 1011, -1000, 1009, -1000, 2067, -1000,
	891, -1000, 165, -1000, 487, 1280, -1000, 1965, 891, 42748,
	891, 40, 1980, -1000, 1547, -1000, 1506, 1506, 1506, 1506,
	1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506,
	1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506,
	1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 42748, 1471,
	-1000, -1000, 1919, 1308, 44, -1000, 1301, -1000, -1000, 127,
	-1000, 19138, -1000, 29178, 1005, 988, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 356, 1292, -1000, 625, 42748, 42748,
	1000, 278, -124, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19138, -352, -1000, -1000, 16778, -1000, -1000, 1290,
	1282, -1000, -1000, -1000, -1000, -1000, 1282, 1282, -1000, -1000,
	891, 1290, -1000, 885, -1000, -1000, -1000, -1000, -1000, 42748,
	1280, 42748, -1000, 1231, 1000, 1506, 1965, -1000, 1212, -1000,
	356, -1000, 1503, 1610, -1000, -1000, -1000, 16188, -1000, -1000,
	-1000, -1000, -119, 11443, 8468, 1209, -1000, -1000, 1740, -112,
	-128, 1419, -1000, -1000, 18548, -1000, 320, -320, -195, 28588,
	-1000, -1000, -1000, -1000, -1000, 1275, -1000, -1000, 25638, 42158,
	-1000, 1661, 921, -119, 19138, 1486, 1000, -1000, 21, -1000,
	-1000, -1000, -1000, -1000, 1555, -1000, 1725, -1000, 1000, 684,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1207, -1000,
	3603, -208, 1660, -1000, 2048, -1000, -1000, -1000, 763, 910,
	-1000, -1000, -1000, -1000, 1254, 42748, -1000, 386, -1000, -1000,
	-121, -122, -1000, 18548, -1000, 42158, -207, 535, 5258, -1000,
	-1000, 2055, 677, 677, -1000, -1000, -408, 1204, 207, -1000,
	-125, -1000, -1000, -1000, 1908, 40, -1000, -1000, -1000, 375,
	886, -1000, -1000, 835, -408, -1000, -131, -209, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 5258, 230, 230, -1000,
	1644, -1000, -1000, 5258, -1000, 1639, -210, -1000, -286, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2506, 2502, 24, 4, 2501, 2497, 2496, 41, 106,
	178, 25, 184, 99, 2495, 2493, 2492, 2491, 2490, 2489,
	2488, 255, 210, 203, 2487, 2486, 2485, 2484, 2483, 2482,
	2481, 2480, 2478, 2477, 208, 162, 175, 2476, 2475, 2474,
	105, 173, 86, 88, 171, 2473, 2472, 81, 2471, 2470,
	2469, 180, 176, 742, 2464, 192, 115, 36, 2463, 2462,
	2461, 2459, 2457, 2456, 2455, 2454, 2453, 2452, 2451, 2450,
	2445, 2444, 2443, 2441, 2440, 204, 2439, 2438, 14, 2437,
	85, 2434, 2433, 2432, 2430, 2429, 13, 2428, 26, 2427,
	2426, 2425, 2422, 125, 2420, 2417, 2416, 2412, 2411, 2409,
	2406, 142, 2404, 2400, 2399, 2395, 181, 2394, 2393, 144,
	107, 108, 2391, 2390, 98, 172, 2389, 117, 2388, 2386,
	2385, 154, 2382, 2479, 2381, 67, 53, 2380, 47, 78,
	49, 50, 21, 9, 2379, 2378, 66, 80, 2377, 100,
	73, 2375, 97, 130, 2373, 2372, 8, 5, 2371, 3,
	2370, 2, 69, 2367, 2366, 118, 2364, 2355, 2352, 94,
	2345, 2343, 5578, 2341, 89, 135, 104, 75, 2338, 38,
	48, 2335, 2334, 2333, 2332, 2330, 44, 2328, 2327, 2326,
	140, 33, 164, 43, 28, 74, 45, 134, 2323, 55,
	82, 2322, 137, 138, 2321, 60, 29, 40, 2315, 95,
	129, 153, 27, 93, 150, 2314, 2313, 37, 76, 2306,
	2303, 2301, 2299, 2297, 2296, 71, 2295, 61, 2292, 206,
	2290, 23, 2286, 46, 34, 2283, 68, 128, 70, 30,
	2281, 165, 2279, 52, 161, 124, 159, 2273, 2271, 2270,
	2269, 174, 310, 2268, 2255, 77, 167, 143, 152, 2246,
	319, 2245, 2243, 91, 1574, 3286, 18, 163, 2240, 2232,
	4848, 141, 35, 15, 2229, 160, 2228, 2226, 2219, 183,
	166, 123, 935, 103, 2215, 11, 2214, 2213, 2211, 2208,
	2206, 2201, 90, 2198, 2196, 2195, 185, 63, 7, 157,
	79, 2193, 2192, 2189, 122, 96, 2187, 158, 156, 132,
	111, 2185, 168, 151, 149, 2184, 58, 2182, 2180, 2175,
	2174, 2172, 92, 2170, 2169, 2164, 2163, 155, 145, 120,
	83, 2162, 84, 116, 148, 146, 39, 2159, 31, 2155,
	2151, 2144, 170, 22, 2143, 20, 59, 65, 19, 102,
	110, 2140, 0, 2131, 12, 169, 308, 147, 2128, 2126,
	6, 2121, 10, 2113, 136, 2102, 2100, 2099, 17, 32,
	16, 1, 2098, 2096, 5657, 3379, 126, 2095, 190,
}

//line sql.y:6866
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 362, 363, 363, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 342, 342,
	342, 345, 345, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 91, 91, 22, 23, 23, 23, 23,
	366, 366, 157, 157, 155, 155, 156, 156, 226, 226,
	24, 25, 25, 236, 236, 235, 235, 235, 237, 237,
	237, 237, 272, 272, 26, 26, 26, 26, 26, 107,
	107, 344, 344, 343, 335, 335, 334, 334, 333, 341,
	341, 340, 340, 339, 38, 39, 48, 48, 48, 48,
	49, 50, 346, 346, 308, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 310, 310, 296,
	296, 309, 309, 309, 309, 309, 309, 309, 295, 295,
	118, 118, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 357, 357, 206, 206, 206, 206, 206,
	206, 127, 127, 136, 136, 136, 136, 136, 125, 125,
	126, 124, 124, 124, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 135, 135, 131,
	131, 131, 132, 132, 132, 133, 133, 358, 358, 358,
	358, 275, 275, 275, 275, 278, 278, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 277, 277, 277, 277,
	277, 279, 279, 279, 279, 279, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 281, 281, 281, 281, 281, 281, 281, 281, 294,
	294, 282, 282, 289, 289, 290, 290, 290, 291, 291,
	291, 292, 292, 287, 287, 287, 287, 287, 287, 288,
	288, 288, 297, 322, 322, 321, 321, 319, 319, 319,
	319, 306, 306, 316, 316, 316, 316, 316, 305, 305,
	301, 301, 301, 302, 302, 303, 303, 300, 300, 304,
	304, 318, 318, 317, 298, 298, 299, 299, 324, 359,
	359, 359, 359, 360, 360, 325, 351, 352, 350, 350,
	350, 350, 350, 80, 80, 80, 249, 249, 249, 314,
	314, 313, 313, 313, 315, 315, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 244, 244, 244, 349, 349, 349,
	349, 349, 349, 348, 348, 348, 311, 311, 311, 347,
	347, 56, 56, 190, 190, 45, 45, 45, 45, 45,
	45, 44, 44, 44, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 93, 93,
	94, 94, 94, 94, 96, 96, 96, 327, 327, 57,
	57, 3, 3, 145, 147, 148, 148, 146, 146, 146,
	146, 146, 146, 59, 59, 58, 58, 150, 149, 151,
	151, 151, 1, 1, 2, 2, 4, 4, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	293, 293, 293, 326, 326, 328, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 330, 330, 330, 60, 60,
	331, 283, 284, 285, 5, 6, 307, 329, 103, 103,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 61,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	243, 243, 251, 251, 242, 242, 265, 265, 265, 245,
	245, 245, 246, 246, 356, 356, 356, 239, 239, 63,
	63, 63, 65, 65, 66, 67, 67, 267, 267, 268,
	268, 68, 69, 81, 81, 81, 81, 81, 81, 92,
	92, 92, 15, 15, 15, 15, 77, 77, 77, 14,
	14, 64, 64, 71, 353, 353, 354, 355, 355, 355,
	355, 72, 74, 31, 31, 31, 31, 31, 31, 113,
	113, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 108, 108, 108, 102, 102, 367, 75,
	76, 76, 106, 106, 106, 99, 99, 99, 105, 105,
	105, 16, 16, 17, 225, 225, 18, 18, 110, 110,
	112, 112, 112, 112, 112, 114, 114, 114, 114, 114,
	114, 114, 109, 109, 111, 111, 111, 111, 258, 258,
	258, 257, 257, 139, 139, 141, 140, 140, 142, 142,
	143, 143, 143, 143, 188, 188, 165, 165, 223, 223,
	221, 221, 222, 222, 224, 224, 224, 224, 227, 227,
	144, 144, 144, 144, 152, 152, 153, 153, 154, 154,
	266, 266, 263, 263, 263, 262, 262, 158, 158, 158,
	160, 159, 159, 159, 159, 161, 161, 163, 163, 162,
	162, 164, 169, 169, 168, 168, 166, 166, 166, 166,
	167, 167, 167, 167, 170, 170, 123, 123, 123, 123,
	123, 123, 123, 134, 134, 134, 134, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 82, 82, 82, 83, 83, 84,
	84, 84, 85, 85, 85, 85, 85, 86, 86, 86,
	88, 88, 87, 87, 183, 183, 89, 89, 90, 90,
	240, 240, 171, 171, 179, 179, 179, 179, 172, 172,
	172, 172, 172, 172, 172, 180, 180, 180, 187, 181,
	181, 177, 177, 177, 177, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 338, 338, 337, 337, 336, 336, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 368, 368,
	286, 286, 286, 286, 178, 178, 178, 178, 178, 104,
	104, 104, 104, 104, 271, 271, 271, 274, 274, 274,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 193, 193, 100, 100, 191,
	191, 192, 194, 194, 189, 189, 189, 174, 174, 174,
	195, 195, 196, 196, 197, 197, 199, 198, 198, 200,
	201, 201, 201, 202, 202, 203, 203, 203, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	115, 115, 115, 115, 117, 117, 116, 116, 78, 78,
	79, 79, 79, 121, 121, 122, 122, 122, 119, 119,
	120, 120, 219, 219, 204, 204, 204, 211, 211, 211,
	207, 207, 209, 209, 209, 210, 210, 210, 208, 216,
	216, 218, 218, 217, 217, 213, 213, 214, 214, 215,
	215, 215, 212, 212, 173, 173, 173, 173, 173, 220,
	220, 220, 220, 228, 228, 184, 184, 186, 186, 185,
	185, 138, 229, 229, 233, 230, 230, 234, 234, 234,
	234, 234, 231, 231, 232, 232, 259, 259, 259, 238,
	238, 250, 250, 247, 247, 248, 248, 241, 241, 252,
	252, 252, 73, 182, 182, 323, 323, 320, 255, 255,
	256, 256, 260, 260, 264, 264, 261, 261, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 364, 365, 269, 270,
	270, 270,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 1, 2, 5, 0, 3, 4, 3, 4, 2,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 6, 6, 6, 4, 4, 4, 7, 8, 6,
	5, 6, 8, 11, 6, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	4, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -362, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -91, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -92, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -364,
	11, 429, 252, 251, 28, -12, 463, 85, -363, 599,
	-219, -204, 22, 33, 29, -203, -199, -106, -204, 20,
	18, 7, -75, -367, -75, -75, 12, 13, -75, -308,
	-310, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -332, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 463, 466, -315, 219, 225, 226, 430,
	122, 121, 75, 221, -312, 353, 569, -55, 571, 101,
	103, 570, 44, 231, 572, 573, 574, 575, 240, 576,
	577, 578, 579, 585, 586, 587, 588, 123, 7, -75,
	-264, -260, -342, -254, 88, 89, 90, 460, 243, 493,
	494, 292, 80, 41, 350, 353, 569, 299, 313, 307,
	334, 326, 461, 495, 295, 244, 280, 563, 324, 131,
	571, 298, 496, 258, 358, 359, 360, 101, 302, 396,
	584, 297, 497, 582, 103, 570, 79, 51, 566, 44,
	253, 322, 227, 318, 572, 281, 498, 471, 274, 122,
	119, 591, 36, 316, 50, 30, 581, 121, 49, 573,
	146, 499, 574, 362, 341, 557, 48, 363, 259, 500,
	83, 264, 465, 565, 364, 317, 365, 291, 580, 224,
	501, 549, 366, 367, 558, 502, 342, 346, 503, 388,
	368, 598, 52, 504, 505, 559, 120, 506, 78, 575,
	311, 312, 507, 289, 242, 390, 338, 442, 449, 450,
	107, 108, 445, 109, 451, 110, 452, 453, 454, 443,
	111, 104, 444, 455, 456, 339, 340, 112, 457, 106,
	105, 446, 448, 113, 458, 240, 35, 369, 462, 293,
	58, 268, 391, 46, 344, 595, 45, 553, 508, 556,
	337, 333, 439, 53, 509, 510, 511, 512, 576, 336,
	310, 332, 590, 4, 286, 577, 62, 226, 348, 347,
	349, 275, 387, 329, 513, 514, 515, 247, 81, 516,
	319, 21, 517, 518, 370, 282, 519, 56, 520, 521,
	394, 256, 522, 54, 578, 39, 261, 592, 579, 523,
	524, 525, 526, 263, 527, 372, 528, 371, 343, 345,
	270, 373, 464, 529, 315, 260, 583, 530, 248, 564,
	262, 267, 255, 395, 249, 531, 532, 533, 534, 535,
	296, 536, 537, 303, 585, 440, 43, 538, 539, 540,
	541, 290, 285, 389, 398, 61, 82, 355, 542, 562,
	309, 283, 543, 300, 55, 586, 587, 588, 277, 589,
	9, 596, 597, 375, 123, 287, 288, 47, 330, 269,
	544, 545, 320, 321, 335, 308, 331, 301, 550, 271,
	376, 441, 257, 546, 397, 284, 351, 356, 468, 276,
	377, 561, 467, 328, 325, 278, 547, 378, 232, 272,
	273, 548, 551, 379, 380, 294, 381, 382, 383, 384,
	385, 386, 279, 466, 306, 323, 357, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 438, 230, -75, 230, -162,
	-260, 230, -231, 359, -251, 361, 374, 369, 379, 367,
	-243, 370, 372, 270, -356, 388, 230, 376, 218, 362,
	371, 380, 381, 294, 382, 386, 279, 383, 384, 385,
	-342, 172, 574, 589, 131, 327, 366, 364, 389, 553,
	-260, 301, -267, 306, -255, -342, -254, 304, -162, -81,
	549, 222, -269, -269, -108, 553, 555, -181, -123, 139,
	-134, -137, -128, -129, -175, -176, -177, -178, -135, -189,
	161, 162, 169, 140, -187, -138, 26, 459, 431, 430,
	172, 31, 214, 68, 69, 433, 434, 142, 57, 406,
	407, -136, 401, 408, 403, 436, 437, 114, 438, 104,
	106, 105, 439, 440, 441, 339, 340, 442, 443, 444,
	107, 108, 109, 110, 111, 112, 113, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -85, -255, -260, 235, 400, 229, 167, 429, -130,
	-126, -8, -185, 399, 404, 405, 409, 402, 470, 472,
	487, 488, 490, -342, -254, -132, -131, -171, 91, 97,
	102, 98, -361, 115, -364, 567, 92, 93, 94, 95,
	96, 116, 117, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 44, 375, 375, -162, -75, -75,
	-75, -75, -197, -106, -199, -10, -8, -364, 8, -75,
	-8, -9, -13, -34, -36, 489, -35, -260, -204, -219,
	12, 157, 42, 50, -202, -203, -12, -8, -123, 19,
	23, 24, -111, 163, -123, -260, -76, -111, -241, 234,
	-75, -75, -230, -272, 301, -234, 389, 388, -256, -232,
	-255, -253, -231, 387, 223, 23, 469, 138, 25, 27,
	141, 172, 126, 19, 142, 37, 225, 327, 241, 171,
	237, 430, 218, 72, 470, 401, 403, 399, 406, 432,
	433, 400, 361, 31, 13, 472, 28, 251, 24, 38,
	165, 220, 145, 473, 254, 26, 252, 114, 117, 475,
	22, 75, 246, 14, 239, 40, 16, 476, 477, 17,
	235, 234, 157, 231, 70, 11, 214, 29, 154, 66,
	478, 133, 479, 480, 481, 482, 127, 68, 155, 20,
	593, 404, 405, 33, 554, 459, 265, 167, 73, 59,
	555, 139, 402, 483, 484, 115, 485, 118, 76, 560,
	135, 18, 71, 42, 486, 266, 487, 236, 594, 488,
	392, 489, 156, 221, 429, 69, 490, 567, 568, 229,
	374, 8, 435, 32, 250, 238, 125, 67, 491, 230,
	144, 436, 437, 233, 128, 116, 7, 132, 34, 12,
	74, 77, 407, 408, 409, 57, 124, 463, 143, 15,
	492, 393, 137, 131, -309, 155, -295, -299, -255, 245,
	-325, 241, -162, -318, -317, -255, -107, -250, 231, 239,
	238, 132, -346, 135, 287, 400, 229, -51, -52, -231,
	171, -93, 262, 266, 86, 86, -299, -298, -297, -347,
	266, 245, -324, -316, 237, 246, -305, 238, 239, -300,
	231, 133, -347, -300, 236, 246, 266, 266, 123, 266,
	123, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	261, -306, 147, -306, 467, 467, -312, -347, -347, -347,
	233, 35, 35, -252, -300, 233, 25, -306, -306, -231,
	171, -306, -306, -306, -306, 274, 274, -306, -306, -306,
	-306, -306, -306, -306, -306, -306, -306, -306, -306, -306,
	-306, -306, 230, -346, -115, 386, 294, 80, -53, 276,
	-37, -162, -250, 231, 232, -346, 263, -162, 215, -162,
	-245, 155, 15, -245, -242, 375, 373, 360, 365, -245,
	-245, -245, -245, 277, 358, -301, 231, 35, 242, 375,
	277, 358, 277, 278, 277, 278, 368, 378, 277, -265,
	14, 157, 400, 363, 367, 270, 230, 271, 232, 377,
	278, -265, 92, -246, 155, 375, 273, -245, -245, -270,
	-364, -256, 327, -342, 556, -270, -270, 32, 89, 233,
	-255, -77, -255, 92, -15, -11, -22, -21, -23, 147,
	-113, 375, -101, 172, 574, 557, 558, 559, 556, 372,
	564, 562, 560, 277, 561, 86, 135, 137, 138, 4,
	-123, 154, -172, 147, 148, 149, 150, 151, 152, 153,
	157, 139, 141, 155, 156, 136, 158, 159, 160, 161,
	162, 163, 164, 166, 165, 167, 168, 171, 216, 217,
	-129, -129, -129, -129, -187, -364, -364, -364, -129, -240,
	-364, -129, -364, -364, -364, -364, -193, -123, -364, -368,
	-364, -368, -368, -286, -364, -286, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, 215, -364, -364, -364, -364, -364,
	-286, -286, -286, -286, -286, 102, 97, 91, -189, 98,
	92, -255, -260, -8, -9, -181, -364, -269, -353, -354,
	-165, -162, -364, 294, -255, -255, 263, -202, -12, -8,
	-197, -203, -199, -8, -75, -99, -112, 63, 64, -114,
	24, 38, 67, 65, 23, -365, 87, -365, -219, -365,
	86, -36, -223, 85, 61, 43, 92, 92, 86, 21,
	-198, -200, -123, 14, -258, 4, -257, 25, -255, 92,
	215, 100, 14, -163, 29, -162, -241, -241, 86, 301,
	-234, -272, -236, -235, 390, 392, 147, -259, -255, 92,
	31, 87, 86, -162, -275, -278, -280, -279, -281, -276,
	-277, 324, 325, 172, 328, 330, 331, 332, 333, 334,
	335, 336, 337, 338, 341, 32, 253, 320, 321, 322,
	323, 342, 343, 344, 345, 346, 347, 348, 349, 307,
	326, 461, 308, 309, 310, 311, 312, 313, 315, 316,
	317, 318, 319, -345, -342, 85, 87, 86, -282, 85,
	-115, 230, -342, 231, 231, 231, -75, 429, -306, -306,
	261, 19, -44, -41, -332, 18, -40, -41, 223, 119,
	120, 220, 85, -295, 85, -304, -345, -342, 85, 133,
	236, 132, -303, -300, -303, -304, -342, -189, -342, 133,
	133, -227, -255, -227, -227, 23, -227, 23, -227, 23,
	94, -255, -227, 23, -227, 23, -227, 23, -227, 23,
	-227, 23, 31, 78, 79, 31, 81, 82, 83, -189,
	-189, -295, -231, -162, -342, 94, 94, -306, -306, 94,
	92, 92, 92, -306, -306, 94, 92, -262, -260, 92,
	-348, 247, 291, 293, 94, 94, 94, 94, 31, 92,
	-349, 31, 581, 580, 582, 583, 584, 94, 31, 94,
	31, 94, -255, 85, -162, -121, 281, 218, 220, 223,
	76, 92, 295, 147, 44, 86, 233, 230, -342, -247,
	235, -247, -255, -261, -260, -253, 92, -123, -302, 14,
	157, -265, -265, -245, -162, -302, -265, -245, -162, -245,
	-245, -245, -245, -265, -265, -265, -245, -260, -260, -162,
	-162, -162, -162, -162, -162, -162, -270, -246, -245, 556,
	92, -239, 14, 76, -270, -270, -268, 304, 338, 550,
	551, 552, 86, 463, -155, -162, 556, 556, 556, 556,
	556, 556, -123, -123, -123, -123, 485, -179, 115, 139,
	116, 117, -137, -180, -185, -187, 99, 157, 141, 155,
	156, -128, -129, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -271, -342, 92, 172,
	-133, -132, 98, -361, -133, -109, -111, -123, -123, -342,
	-255, -109, -109, -123, -105, 24, 38, -191, -192, 143,
	-189, -365, -365, 94, 98, -255, -255, -98, -97, 411,
	412, 413, 414, 416, 417, 418, 421, 422, 426, 427,
	410, 428, 415, 420, 423, 424, 425, 419, 323, -123,
	-123, -123, -123, -123, -123, -82, -123, 126, 127, 128,
	-123, -123, -182, -181, -341, -340, -339, -123, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-365, -110, 24, 38, -109, -256, -261, -253, -109, -110,
	-110, -109, -109, 215, -219, -365, -181, 86, -355, 392,
	393, 554, -263, 266, -262, 25, -182, 92, 14, -225,
	77, -255, -202, -202, 63, 64, 59, -109, -114, -365,
	-35, 25, -221, -255, 62, 92, -287, -231, 350, 351,
	-123, -123, 86, -201, 27, 28, -162, -257, 163, -261,
	-162, -226, 266, -162, -140, -142, -143, -144, -165, -188,
	-364, -145, 481, 478, 14, -155, -156, -164, -260, -234,
	-236, 86, 391, 393, 394, 76, 118, -123, -288, 171,
	-314, -313, -312, -295, -297, -298, -299, 87, -288, -291,
	356, 355, -282, -282, -282, -282, -282, -287, -287, -287,
	-287, 85, 85, -282, -282, -282, -282, -289, 85, -289,
	-289, -290, 85, -290, -325, -123, -322, -321, -319, -320,
	240, 101, 463, 77, -317, -201, 94, -121, -248, 235,
	-323, -320, -342, -342, -342, -248, -342, 92, -342, 92,
	-94, -57, -1, 593, 594, 595, 86, 19, -296, -295,
	-56, 291, -328, -329, 266, -324, -318, -304, 133, -303,
	-304, -304, -342, 86, 29, 123, 123, 123, 123, 463,
	220, 32, -295, -56, -271, 233, -271, -271, 92, 92,
	-244, 589, -155, -117, 283, 147, 272, 272, 230, 230,
	285, -162, 296, 298, 297, 295, 23, 284, 286, 288,
	274, -162, -162, -247, 76, -157, -162, 26, -260, -162,
	-245, -245, -162, -245, -245, -162, -255, -101, 392, 86,
	463, 22, -102, 22, -364, 115, 116, 117, -180, -128,
	-129, -128, 138, 254, 86, -365, 25, 86, 77, -365,
	-365, -365, 86, 14, -109, -194, -192, 145, -123, -365,
	-365, -365, 86, 86, 14, -274, 25, -365, -365, -365,
	-365, -365, -193, -365, 14, 86, 86, -365, -365, 86,
	86, -365, 86, 86, 86, -338, 86, 86, 86, 86,
	-365, -365, -365, -365, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, -365, -90, 486, -365, -109, -109,
	-364, 215, -365, -365, -365, -365, -365, -256, -365, -354,
	553, 393, -169, -168, -166, 74, 234, 75, -364, -262,
	-365, -133, 89, -222, 89, -221, -174, -255, 94, 98,
	-204, -139, -141, 14, -114, -187, 87, 86, -287, -208,
	-213, -242, -255, 92, 172, -200, 215, -170, 15, -173,
	32, 57, -11, -364, -364, 32, 86, -158, -160, -159,
	-161, 66, 70, 72, 67, 68, 69, 73, -266, 25,
	-140, -9, -8, -364, -364, -364, -162, -155, -366, 14,
	77, -366, 86, 215, -235, -237, 395, 392, 398, -342,
	92, -93, 86, -312, -299, -205, -118, 40, -292, 357,
	-287, -287, -294, 92, -294, 94, 94, 87, -47, -42,
	-43, 33, 80, -319, -306, 92, 39, -255, 87, -117,
	-162, 139, 76, -323, -323, -323, -260, -2, 592, 598,
	133, 85, 360, 18, -221, 86, 87, -190, 292, 87,
	-95, -255, 87, 85, -304, -304, -255, -364, 230, 31,
	31, -56, -190, -288, -342, 591, 590, 87, 232, 290,
	-122, 406, -119, 92, 88, -162, -162, -162, -162, -162,
	223, 220, 275, 233, -155, -162, 86, -80, 249, 244,
	-265, -265, 33, -162, 392, 565, 563, -123, 138, 254,
	-137, -129, -111, 460, -273, 172, 324, 253, 322, 318,
	338, 329, 355, 320, 356, 317, 316, 315, -273, -271,
	-123, -123, -197, 146, -123, 144, -123, -123, -123, -365,
	172, 324, 14, -123, -123, -123, -339, -123, -123, -123,
	-337, -336, -133, -189, -365, -337, -123, -123, -336, -336,
	-340, -340, -340, -340, -340, -181, -181, -181, -181, -364,
	-255, -365, -365, -110, -256, -166, -300, -300, -300, -227,
	86, -238, 22, 14, 57, 57, -139, -170, -140, -114,
	-255, -211, 549, -216, 46, -214, -215, 47, -212, 48,
	56, 163, -202, -123, -228, 76, -229, -233, -189, -184,
	-186, -185, -364, -220, -365, -255, -227, -229, -142, -143,
	-143, -142, -143, 66, 66, 66, 71, 66, 71, 66,
	-159, -260, -365, -365, -9, -9, -123, -263, 77, -140,
	-140, -164, -260, 163, 392, 396, 397, -312, -360, 115,
	139, 31, 76, 353, 101, -358, 171, -359, 236, 132,
	133, 248, 25, 41, 87, 86, 87, 86, 87, 86,
	-249, 499, 139, -43, -42, -306, -306, 94, -342, 232,
	26, -162, 76, 76, 76, -96, 596, 94, 85, -3,
	80, -123, 85, 19, -295, -189, -330, -283, -331, -284,
	-285, -5, -6, -307, 57, 101, -60, 44, 231, 576,
	577, 123, 589, -322, -221, -326, -328, -162, -125, -364,
	-124, -126, -130, 161, 162, -190, -162, -116, 281, 289,
	85, -120, 89, -344, 77, 272, 353, 272, -162, -80,
	-47, -162, -245, -245, 33, -342, -365, -137, -129, -364,
	-365, -282, -282, -282, -290, -282, 312, -282, 312, -282,
	-365, -365, 86, -365, 22, -365, -100, 435, -123, 86,
	86, -365, 85, 85, -123, -365, -365, -365, -338, 86,
	-365, 86, -365, 86, -365, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -89, -255, -183, 266, -365,
	-167, 22, -167, -167, -365, 89, -162, -170, -195, 16,
	-208, 51, 330, -218, -217, 55, 47, -215, 19, 49,
	19, 30, -228, 86, 147, 86, -365, -365, 86, 57,
	215, -365, -170, -153, -152, 76, 77, -154, 76, -152,
	66, 66, -223, -365, -365, 86, -226, -140, -170, -170,
	215, 115, -364, -127, -136, -125, 12, 92, 92, -342,
	133, 133, -162, 85, -287, 92, -287, 94, 94, 499,
	31, 81, 82, 83, 31, 78, 79, -162, -162, -162,
	-162, -327, 85, 19, -123, 85, 147, 87, -221, -221,
	268, 157, -306, 574, 274, 274, -306, -306, -306, 87,
	-365, 86, -293, 463, 466, -123, -131, -131, -223, 87,
	-335, 463, -343, -255, -255, -255, -255, -128, -287, -123,
	-123, -202, 92, -123, -123, 94, 94, -365, -365, -337,
	-336, -123, -365, -183, -197, 19, -364, 66, 18, 16,
	-364, -364, -263, -195, -196, 17, 19, -209, 53, -207,
	52, -207, -217, 19, 19, 92, 19, 92, 133, -233,
	-123, -186, 57, -11, -255, -184, -255, -197, -123, 85,
	-123, -133, -170, -170, -123, -176, 438, 104, 106, 105,
	439, 440, 441, 339, 340, 442, 443, 444, 107, 108,
	109, 110, 111, 112, 113, 445, 448, 446, 449, 450,
	451, 456, 457, 452, 453, 454, 455, 458, 85, -123,
	87, 87, -223, -326, -57, 87, -221, 94, 87, 269,
	-185, -364, 92, -306, -306, -306, 94, 94, -262, -359,
	-328, 467, 467, -365, 25, -334, -333, -256, 85, 77,
	-104, 157, 463, -365, -365, -365, -365, -365, 87, 87,
	-365, -365, 86, -197, -88, -87, -83, 568, 594, -181,
	-224, -365, -255, 236, 19, 19, -224, -224, -169, -196,
	-123, -181, -210, 54, 76, 118, 92, 92, 92, 12,
	-184, 215, -202, -221, -147, 360, -197, -365, -221, 87,
	25, 87, 598, 133, 87, -185, -103, -364, 265, -262,
	92, 92, -11, 86, 147, -221, -162, -365, 461, 73,
	464, -123, -88, -86, 141, -84, -123, 566, 546, 86,
	-365, -365, -365, 76, 118, -229, -255, 87, -365, -364,
	-202, 87, -206, -11, 85, -3, 265, -78, 463, -333,
	-311, -256, 92, 94, 87, 62, 462, 465, -338, -86,
	526, 501, 567, 526, 501, -255, 236, -263, -148, -146,
	-255, 513, -351, -352, 76, -360, -357, 115, 139, 101,
	-358, 124, 125, -78, -123, 85, -365, -79, 280, 553,
	-344, 62, -365, 138, -365, 86, 22, -275, -59, 523,
	-352, 76, 13, 12, 115, 92, 87, -221, 241, -335,
	463, -86, -146, 520, -288, -133, -350, 249, 244, 247,
	32, -350, -4, 597, 87, 282, 464, -58, 26, -147,
	243, 31, 115, 94, -4, 465, 523, -133, -150, -149,
	-151, 557, 115, 31, -149, -151, 76, -133, 76, 473,
	557,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 758,
	758, 758, 0, 758, 0, 0, 758, -2, -2, 758,
	1264, 0, 758, 0, 0, -2, 690, 692, 0, 694,
	-2, 0, 0, 703, 1758, 1758, 753, 0, 0, 0,
	0, 0, 758, 758, 758, 758, 1124, 48, 758, 0,
	83, 84, 709, 710, 711, 63, 0, 1756, 1, 3,
	69, 73, 0, 0, 0, 56, 1133, 0, 76, 0,
	0, 762, 0, 760, 0, 1247, 758, 758, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 518, 458, 501, 456, 487, -2, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 351, 351, 0, 0, -2, 449, 449, 449, 0,
	0, 0, 484, 1249, 404, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1150,
	151, 1265, 1262, 1263, 38, 39, 40, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 0, 1241, 0, 618,
	859, 0, 679, 679, 0, 679, 679, 679, 679, 0,
	0, 0, 630, 0, 0, 0, 0, 676, 0, 646,
	647, 0, 676, 0, 682, 0, 657, 679, 679, 660,
	1759, 0, 1759, 1759, 1232, 0, 673, 671, 685, 686,
	689, 693, 0, 698, 701, 1258, 1259, 0, 716, 47,
	1501, 708, 721, 722, 0, 754, 755, 43, 979, 0,
	881, 886, 897, 910, 911, 912, 913, 914, 916, 917,
	0, 0, 0, 0, 922, 923, 0, 0, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 1105, 0, 1068,
	1068, 996, 1068, 1070, 1070, 0, 0, 0, 1755, 1541,
	1549, 1550, 1572, 1655, 1701, 1545, 1546, 1527, 1539, 1542,
	1530, 1531, 1533, 1535, 1540, 1547, 1553, 1532, 1552, 1551,
	0, 1528, 1529, 1534, 1544, 1548, 1536, 1537, 1538, 1543,
	1554, 0, 1114, 0, 0, 0, 0, 0, 0, 257,
	258, 978, 1221, 1070, 1070, 1070, 1070, 1070, 942, 943,
	944, 945, 946, -2, -2, 204, 205, 206, 207, 208,
	209, 210, 0, 200, 0, 0, 262, 263, 259, 260,
	261, 962, 963, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 1758, 0, 731, 0, 0, 0,
	0, 0, 1133, 0, 1125, 1124, 61, 0, 758, -2,
	0, 0, 0, 0, 45, 0, 50, 818, 75, 74,
	1172, 0, 0, 0, 57, 1134, 65, 67, 1135, 0,
	763, 764, 0, 794, 798, 0, 759, 0, 0, 1248,
	1247, 1247, 100, 0, 1697, 1225, -2, -2, 0, 0,
	1260, 1261, 1234, -2, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, -2, 0, 0, 161, 162, 0, 41,
	377, 0, 157, 0, 371, 321, 1150, 0, 0, 0,
	0, 0, 758, 0, 1242, 142, 143, 149, 150, 351,
	351, 498, 0, 0, 151, 151, 465, 466, 467, 0,
	0, -2, 375, 0, 450, 0, 0, 365, 365, 369,
	367, 368, 0, 0, 0, 0, 0, 0, 478, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 352, 0, 496, 497, 405, 0, 0, 0,
	0, 476, 477, 0, 0, 1250, 1251, 0, 0, 351,
	351, 0, 0, 0, 0, 351, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1163, 0, 0, 0, -2, 0,
	610, 0, 0, 0, 1243, 1243, 0, 617, 0, 619,
	620, 0, 0, 621, 0, 676, 676, 674, 675, 623,
	624, 625, 626, 679, 0, 0, 360, 361, 362, 676,
	679, 0, 679, 679, 679, 679, 676, 676, 676, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	682, 679, 0, 653, 0, 654, 655, 658, 659, 661,
	1760, 1761, 1281, 1759, 1759, 665, 669, 1233, 691, 699,
	702, 719, 717, 718, 720, 712, 713, 714, 715, 0,
	733, 734, 739, 0, 0, 0, 0, 745, 746, 747,
	0, 0, 750, 751, 752, 0, 0, 0, 0, 0,
	879, 0, 0, 968, 969, 970, 971, 972, 973, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	918, 919, 920, 921, 924, 0, 0, 0, 929, 930,
	0, 0, 0, 0, 0, 768, 0, 1106, 0, 994,
	0, 995, 997, 998, 0, 999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1253, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 778, 0, 0, 778, 778, 0, 0,
	193, 194, 195, 196, 197, 211, 212, 213, 214, 215,
	264, 1114, 0, 978, 0, 0, 0, 44, 723, 724,
	0, 842, 1253, 0, 0, 774, 0, 55, 64, 66,
	1133, 59, 1133, 0, 780, 0, 0, -2, -2, 781,
	787, 788, 789, 790, 791, 52, 1757, 53, 0, 72,
	0, 46, 0, 0, 0, 0, 333, 1175, 0, 0,
	1126, 1127, 1130, 0, 795, 1583, 799, 0, 801, 802,
	0, 761, 0, 98, 0, 858, 0, 0, 0, 1697,
	1231, 0, 102, 103, 0, 0, 0, 339, 1236, 1237,
	1238, -2, 358, 0, 339, 328, 272, 273, 274, 321,
	276, 321, 321, 321, 321, 333, 333, 333, 333, 304,
	305, 306, 307, 308, 0, 0, 291, 321, 321, 321,
	321, 311, 312, 313, 314, 315, 316, 317, 318, 277,
	278, 279, 280, 281, 282, 283, 284, 285, 323, 323,
	323, 325, 325, 0, 42, 0, 343, 0, 1130, 0,
	1163, 1245, 1255, 0, 0, 0, 1245, 120, 0, 0,
	499, 529, 459, 488, 500, 0, 462, 463, -2, 0,
	0, 449, 0, 451, 0, 359, 0, -2, 0, 369,
	0, 365, 369, 366, 369, 357, 370, 480, 481, 482,
	0, 559, 828, 0, 0, 0, 0, 0, 565, 566,
	567, 0, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 489, 490, 491, 492, 493, 494, 495, 0,
	0, 451, 0, 485, 0, 406, 407, 0, 0, 410,
	411, 412, 413, 0, 0, 416, 417, 418, 845, 846,
	419, 443, 444, 445, 420, 421, 422, 423, 424, 425,
	426, 437, 438, 439, 440, 441, 442, 427, 428, 429,
	430, 431, 434, 0, 135, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 0, 0,
	0, 0, 777, 860, 1266, 1267, 680, 681, 0, 363,
	364, 679, 679, 627, 666, 0, 679, 631, 667, 632,
	634, 633, 635, 648, 649, 679, 638, 677, 678, 639,
	640, 641, 642, 643, 644, 645, 662, 650, 651, 652,
	683, 0, 687, 688, 663, 664, 0, 700, 704, 705,
	706, 707, 0, 0, 736, 94, 741, 742, 743, 744,
	756, 749, 980, 876, 877, 878, 0, 880, 883, 0,
	964, 966, 885, 887, 975, 976, 977, 0, 0, 0,
	0, 0, 891, 895, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 915, 1084, 1085, 1086,
	932, 265, 266, 0, 933, 0, 792, 0, 0, 0,
	931, 0, 0, 0, 0, 769, 770, 1112, 1109, 0,
	0, 1069, 1071, 0, 0, 0, 0, 0, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1087,
	0, 0, 0, 0, 0, 1105, 0, 934, 935, 936,
	0, 0, 0, 1254, 0, 130, 131, 0, 0, 0,
	0, 0, 1041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 779, 1115, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 726, 727,
	729, 0, 862, 0, 843, 0, 0, 732, 0, 773,
	0, 776, 58, 60, 785, 786, 0, 803, 782, 54,
	49, 0, 0, 820, 1173, 333, 1195, 0, 337, 338,
	1136, 1137, 0, 1129, 1131, 1132, 77, 800, 796, 0,
	874, 0, 0, 857, 0, 806, 808, 809, 810, 840,
	0, 813, 0, 0, 0, 0, 0, 96, 859, 1226,
	101, 0, 0, 106, 107, 1227, 1228, 1229, 1230, 0,
	518, -2, 401, 163, 165, 166, 167, 158, -2, 331,
	329, 330, 275, 333, 333, 298, 299, 300, 301, 302,
	303, 0, 0, 292, 293, 294, 295, 286, 0, 287,
	288, 289, 0, 290, 376, 0, 1138, 344, 345, 347,
	351, 0, 0, 0, 372, 373, 0, 1154, 0, 0,
	0, 1256, 1255, 1255, 1255, 0, 153, 154, 155, 156,
	554, 0, 0, 530, 552, 553, 151, 0, 0, 159,
	453, 452, 0, 586, 0, 374, 0, 0, 369, 369,
	354, 355, 483, 0, 0, 561, 562, 563, 564, 0,
	0, 0, 451, 453, 339, 0, 408, 409, 414, 415,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 1151, 1152, 1153,
	0, 0, 611, 0, 0, 393, 92, 1244, 616, 676,
	637, 668, 676, 629, 636, 656, 696, 740, 0, 0,
	0, 0, 748, 0, 0, 884, 965, 967, 888, 0,
	892, 896, 0, 0, 0, 0, 0, 0, 0, 961,
	985, 986, 0, 0, 1124, 0, 1110, 0, 0, 993,
	1072, 1073, 0, 0, 0, 0, 0, 1004, 1005, 1006,
	1007, 1008, 0, 1010, 0, 0, 0, 1014, 1015, 0,
	0, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	1025, 1026, 1027, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1039, 1040, 0, 981, 0, 0,
	778, 0, 1074, 1075, 1076, 1077, 1078, 1115, 1220, 725,
	728, 730, 816, 863, 864, 0, 0, 0, 0, 844,
	1252, 771, 772, 775, -2, 0, 0, 1117, 0, 0,
	803, 874, 804, 0, 783, 51, 819, 0, 1177, 1176,
	1189, 1202, 334, 335, 336, 1128, 0, 1133, 0, 1213,
	0, 0, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 0, 0, 850, 0, 0, 0, 0, 841,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 340,
	341, 144, 151, 403, 164, 383, 0, 0, 271, 332,
	296, 297, 0, 319, 0, 0, 0, 396, 116, 1142,
	1141, 351, 351, 346, 0, 349, 0, 1257, 322, 0,
	134, 0, 0, 0, 0, 0, 140, 524, 0, 0,
	531, 0, 0, 0, 457, 0, 468, 469, 0, 558,
	-2, 607, 343, 0, 353, 356, 829, 0, 0, 470,
	0, 453, 474, 475, 486, 435, 436, 433, 0, 0,
	1164, 1165, 1170, 1168, 1169, 121, 506, 508, 507, 511,
	0, 0, 504, 0, 393, 1138, 0, 615, 394, 395,
	679, 679, 735, 95, 0, 738, 0, 0, 0, 0,
	889, 893, 793, 0, 0, 321, 321, 1092, 321, 325,
	1095, 321, 1097, 321, 1100, 321, 1103, 1104, 0, 0,
	0, 0, 1107, 992, 1113, 0, 0, 0, 0, 1003,
	0, 0, 0, 0, 0, 0, 132, 133, 1041, 0,
	0, 1043, 1045, 1046, 1020, 1042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 954,
	959, 982, 983, 0, 1116, 865, 870, 870, 870, 0,
	0, 0, 1239, 1240, 1118, 1119, 874, 1120, 805, 784,
	821, 1195, 0, 1188, 0, -2, 1197, 0, 0, 0,
	1203, 797, 78, 875, 81, 0, 1213, 1222, 0, 1204,
	1215, 1217, 0, 0, 0, 1209, 0, 874, 807, 836,
	838, 0, 833, 848, 849, 851, 0, 853, 0, 855,
	856, 818, 812, 814, 0, 0, 0, 98, 0, 874,
	874, 97, 0, 861, 108, 109, 110, 402, 168, 173,
	0, 0, 0, 178, 0, 180, 0, 384, 0, 268,
	270, 0, 0, 171, 333, 0, 333, 0, 326, 0,
	385, 397, 0, 1139, 1140, 0, 0, 348, 350, 0,
	1246, 136, 0, 0, 0, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 160, 454, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 351, 0, 0, 0, 351,
	351, 351, 599, 342, 0, 0, 583, 580, 471, 0,
	198, 199, 201, 0, 0, 473, 818, 1155, 1156, 1157,
	0, 1167, 1171, 124, 0, 0, 0, 0, 612, 613,
	614, 93, 622, 628, 737, 757, 882, 890, 894, 0,
	926, 1090, 333, 1093, 1094, 1096, 1098, 1099, 1101, 1102,
	927, 928, 0, 988, 0, 990, 1133, 0, 1111, 0,
	0, 1002, 0, 0, 0, 1011, 1012, 1013, 0, 0,
	1019, 0, 1021, 0, 1024, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 0, 954, 1124, 0, 984,
	0, 0, 0, 0, 842, -2, 62, 1120, 1122, 0,
	1182, 1180, 1180, 1190, 1191, 0, 0, 1198, 0, 0,
	0, 0, 82, 0, 0, 0, 1218, 0, 0, 0,
	0, 99, 1124, 830, 837, 0, 0, 831, 0, 832,
	852, 854, 811, -2, 815, 0, 874, 874, 88, 89,
	0, 174, 0, 176, 191, 192, 0, 179, 181, 182,
	267, 269, 0, 0, 309, 320, 310, 0, 0, 398,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 818, 137, 138,
	139, 519, 0, 529, 0, 0, 0, 522, 0, 460,
	0, 0, 0, 351, 351, 351, 0, 0, 0, 0,
	560, 0, 568, 0, 0, 0, 202, 203, 0, 1166,
	505, 0, 122, 123, 0, 0, 510, 1079, 1091, 0,
	0, 0, 1108, 0, 0, 0, 0, 1009, 1017, 0,
	1044, 0, 958, 1124, 950, 0, 0, 871, 0, 0,
	0, 0, 862, 1122, 80, 0, 0, 1185, 0, 1178,
	1181, 1179, 1192, 0, 0, 1199, 0, 1201, 0, 1223,
	1224, 1216, 0, 1208, 1211, 1207, 1210, 1133, 834, 0,
	839, 0, 1124, 87, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 327, 0, 0, 0, 520, 0, 532, 523, 0,
	597, 0, 601, 0, 0, 0, 604, 605, 606, 378,
	584, 581, 582, 472, 0, 125, 126, 0, 0, 0,
	0, 0, 0, 987, 989, 991, 1000, 1001, 1088, 1089,
	1018, 1022, 0, 950, 957, 951, 0, 937, 938, 955,
	0, 867, 824, 825, 872, 873, 0, 0, 817, 79,
	1123, 1121, 1174, 0, 1183, 1184, 1193, 1194, 1200, 0,
	1206, 0, 85, 0, 0, 0, 1133, 175, 0, 185,
	0, 528, 0, 531, 521, 595, 596, 0, 608, 600,
	602, 603, 1158, 0, 0, 0, 512, 925, 0, 0,
	0, 1041, 956, 952, 0, 947, 0, 1458, 1703, 0,
	866, 868, 869, 1186, 1187, 1214, 1212, 835, 842, 0,
	86, 379, 383, 1158, 0, 0, 0, 502, 1160, 127,
	128, 446, 447, 448, 121, 1080, 0, 1083, 0, 0,
	948, 949, 939, 940, 941, 826, 827, 533, 0, 535,
	0, -2, 380, 381, 0, 169, 186, 187, 0, 0,
	190, 183, 184, 117, 0, 0, 609, 0, 1161, 1162,
	124, 1081, 1023, 0, 534, 0, 0, 339, 0, 544,
	382, 0, 0, 0, 188, 189, 556, 0, 0, 509,
	0, 953, 536, 537, 545, 0, 386, 388, 389, 0,
	0, 387, 525, 0, 556, 1159, 0, 0, 546, 542,
	390, 391, 392, 557, 526, 1082, 0, 538, 539, 540,
	0, 549, 550, 0, 541, 0, 0, 551, 0, 547,
	548,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 599,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:534
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:539
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:544
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:580
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:594
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:599
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:609
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:621
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:625
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:634
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:644
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:650
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:803
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:829
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:853
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:857
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:901
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:911
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:924
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:946
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:960
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:964
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:978
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:982
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:988
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:992
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1024
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1060
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1066
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1086
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1092
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1102
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1108
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1132
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1137
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1144
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1151
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1162
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1173
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1179
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1183
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1207
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1211
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1217
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1221
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1228
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1232
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1238
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1248
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1253
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1262
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1286
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1295
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1304
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1348
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1353
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1358
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1374
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1378
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1457
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1461
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1475
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1496
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1500
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1504
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1508
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1512
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1728
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1732
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1736
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1740
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1971
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1976
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1980
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1988
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1998
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2028
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2055
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2070
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2079
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2085
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2095
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2099
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2104
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2108
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2124
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2128
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2132
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2136
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2140
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2208
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2218
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2224
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2228
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2234
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2238
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2244
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2250
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2254
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2258
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2262
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2271
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2277
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2283
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2289
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2295
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2299
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2303
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2307
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2311
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2316
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2333
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2337
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2346
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2352
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2366
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2376
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2440
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2444
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2448
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2452
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2456
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2460
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2464
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2468
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2472
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2476
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2480
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2484
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2535
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2539
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2548
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2553
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2557
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2561
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2565
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2569
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2573
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2579
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2587
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2601
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2645
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2687
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2691
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2697
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2701
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2705
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2709
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2721
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2725
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2729
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2735
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2742
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2766
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2802
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2806
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2810
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2833
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2855
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2862
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2869
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2887
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2896
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2904
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2913
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2920
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2932
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2941
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2956
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2961
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2965
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2970
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2974
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2980
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2986
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2992
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3002
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3006
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3012
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3018
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3024
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3030
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3036
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3040
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3044
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3048
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3054
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3060
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3066
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3070
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3074
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3080
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3084
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3089
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3093
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3098
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3102
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3108
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3112
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3116
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3120
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3124
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3128
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3132
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3136
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3140
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3144
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3148
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3152
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3156
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3160
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3164
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3168
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3172
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3176
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3180
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3184
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3188
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3192
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3212
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3216
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3222
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3227
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3231
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3236
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3241
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3246
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3251
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3256
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3262
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3268
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3275
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3282
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3289
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3301
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3307
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3313
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3319
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3325
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3331
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3337
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3349
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3371
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3375
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3394
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3398
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3408
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3499
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3503
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3590
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3594
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3610
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = "extended "
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3634
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3638
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3654
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3658
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3672
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3676
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3686
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3692
		{
			yyVAL.empty = struct{}{}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.empty = struct{}{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3760
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3778
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3782
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3786
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3790
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3794
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3798
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.str = yyDollar[1].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3875
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3879
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3885
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3891
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3895
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3899
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3903
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3951
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3957
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3961
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4028
		{
			setAllowComments(yylex, true)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4038
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4042
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4048
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = SQLCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4113
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4132
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			yyVAL.strs = nil
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4145
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4149
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4153
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.str = SQLCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.str = DistinctStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = DistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = StraightJoinHint
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4189
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4199
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4203
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4207
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4211
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4216
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4236
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4240
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4246
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4252
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4256
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4266
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4270
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4274
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4278
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4284
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4288
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4294
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4298
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4307
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4313
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4317
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4323
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4333
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4337
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4351
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4368
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4372
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4376
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4380
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4388
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4394
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4408
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4416
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4429
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4433
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4437
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4443
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4449
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4453
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4457
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4461
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4467
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4471
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4481
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4510
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4516
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4526
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4530
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4534
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4538
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4543
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4547
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4551
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4555
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4572
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4576
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4580
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4584
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4588
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4592
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4596
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4703
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4707
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4711
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4721
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4725
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4729
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4765
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4769
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4773
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4777
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4781
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4785
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4789
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4793
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4817
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4823
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4827
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4831
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4837
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4841
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4847
		{
			yyLOCAL = CurrentRowType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4851
		{
			yyLOCAL = UnboundedPrecedingType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4855
		{
			yyLOCAL = UnboundedFollowingType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4861
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4865
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4869
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4873
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4877
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4883
		{
			yyLOCAL = &FramePoint{Type: yyDollar[1].framePointTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4887
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4891
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4896
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4900
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4906
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4910
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion(), IsBetween: true}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4919
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4925
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent.String(), PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4930
		{
			yyLOCAL = &WindowSpecification{PartitionClause: yyDollar[1].exprsUnion(), OrderClause: yyDollar[2].orderByUnion(), FrameClause: yyDollar[3].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4936
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4940
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4956
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4960
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4967
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4971
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4975
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4979
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4985
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4989
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4993
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4997
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5001
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5005
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5009
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5015
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5019
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5023
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5030
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5036
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5040
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5311
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5317
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5321
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5337
		{
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5339
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5343
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5347
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5351
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5355
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5359
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5363
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5367
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5371
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5375
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5379
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5385
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5389
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5393
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5397
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5401
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5405
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5409
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5413
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5417
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5472
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5476
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5480
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5484
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5488
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5512
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5516
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5522
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5526
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5530
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5534
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5538
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5544
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5548
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5552
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5556
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5560
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5564
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5572
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5576
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5580
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5595
		{
			yyVAL.str = string("")
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5599
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5605
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5609
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5615
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5630
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5634
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5638
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5667
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5685
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5691
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5697
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5701
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5707
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5712
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5716
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5720
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5729
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5735
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5739
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5743
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5752
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5756
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5760
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5764
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5771
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5775
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5779
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5783
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5789
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5793
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5797
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5802
		{
			yyVAL.str = ""
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5806
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5819
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5823
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5829
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5838
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5842
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5847
		{
			yyVAL.str = "cascaded"
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5851
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5855
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5864
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5870
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5876
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5882
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5891
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5900
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5904
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5910
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5914
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5920
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5924
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5928
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5933
		{
			yyVAL.str = ""
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5937
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5941
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5946
		{
			yyVAL.str = ""
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5950
		{
			yyVAL.str = " header"
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5955
		{
			yyVAL.str = ""
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5959
		{
			yyVAL.str = " manifest on"
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5963
		{
			yyVAL.str = " manifest off"
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5968
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5972
		{
			yyVAL.str = " overwrite on"
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = " overwrite off"
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5982
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5987
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5991
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6007
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6016
		{
			yyVAL.str = ""
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6020
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6030
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6036
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6040
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6049
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.str = " optionally"
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6066
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6070
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6074
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6078
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6082
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6088
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6092
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6096
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6100
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6109
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6115
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6125
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6129
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6135
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6139
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6154
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6158
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6164
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6170
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6174
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6180
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6184
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6188
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6192
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6196
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6204
		{
			yyVAL.str = "charset"
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6231
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6233
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6241
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6243
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6251
		{
			yyVAL.empty = struct{}{}
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6253
		{
			yyVAL.empty = struct{}{}
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6255
		{
			yyVAL.empty = struct{}{}
		}
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6259
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6268
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6275
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6279
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6285
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6296
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6306
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6312
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6316
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6836
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6845
		{
			decNesting(yylex)
		}
	case 1758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6850
		{
			skipToEnd(yylex)
		}
	case 1759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6855
		{
			skipToEnd(yylex)
		}
	case 1760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6859
		{
			skipToEnd(yylex)
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6863
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
