// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const EXTRACT = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const OFF = 57448
const DISCARD = 57449
const IMPORT = 57450
const ENABLE = 57451
const DISABLE = 57452
const TABLESPACE = 57453
const VIRTUAL = 57454
const STORED = 57455
const EMPTY_FROM_CLAUSE = 57456
const LOWER_THAN_CHARSET = 57457
const CHARSET = 57458
const UNIQUE = 57459
const KEY = 57460
const EXPRESSION_PREC_SETTER = 57461
const OR = 57462
const XOR = 57463
const AND = 57464
const NOT = 57465
const BETWEEN = 57466
const CASE = 57467
const WHEN = 57468
const THEN = 57469
const ELSE = 57470
const END = 57471
const LE = 57472
const GE = 57473
const NE = 57474
const NULL_SAFE_EQUAL = 57475
const IS = 57476
const LIKE = 57477
const REGEXP = 57478
const IN = 57479
const SHIFT_LEFT = 57480
const SHIFT_RIGHT = 57481
const DIV = 57482
const MOD = 57483
const UNARY = 57484
const COLLATE = 57485
const BINARY = 57486
const UNDERSCORE_ARMSCII8 = 57487
const UNDERSCORE_ASCII = 57488
const UNDERSCORE_BIG5 = 57489
const UNDERSCORE_BINARY = 57490
const UNDERSCORE_CP1250 = 57491
const UNDERSCORE_CP1251 = 57492
const UNDERSCORE_CP1256 = 57493
const UNDERSCORE_CP1257 = 57494
const UNDERSCORE_CP850 = 57495
const UNDERSCORE_CP852 = 57496
const UNDERSCORE_CP866 = 57497
const UNDERSCORE_CP932 = 57498
const UNDERSCORE_DEC8 = 57499
const UNDERSCORE_EUCJPMS = 57500
const UNDERSCORE_EUCKR = 57501
const UNDERSCORE_GB18030 = 57502
const UNDERSCORE_GB2312 = 57503
const UNDERSCORE_GBK = 57504
const UNDERSCORE_GEOSTD8 = 57505
const UNDERSCORE_GREEK = 57506
const UNDERSCORE_HEBREW = 57507
const UNDERSCORE_HP8 = 57508
const UNDERSCORE_KEYBCS2 = 57509
const UNDERSCORE_KOI8R = 57510
const UNDERSCORE_KOI8U = 57511
const UNDERSCORE_LATIN1 = 57512
const UNDERSCORE_LATIN2 = 57513
const UNDERSCORE_LATIN5 = 57514
const UNDERSCORE_LATIN7 = 57515
const UNDERSCORE_MACCE = 57516
const UNDERSCORE_MACROMAN = 57517
const UNDERSCORE_SJIS = 57518
const UNDERSCORE_SWE7 = 57519
const UNDERSCORE_TIS620 = 57520
const UNDERSCORE_UCS2 = 57521
const UNDERSCORE_UJIS = 57522
const UNDERSCORE_UTF16 = 57523
const UNDERSCORE_UTF16LE = 57524
const UNDERSCORE_UTF32 = 57525
const UNDERSCORE_UTF8 = 57526
const UNDERSCORE_UTF8MB4 = 57527
const INTERVAL = 57528
const JSON_EXTRACT_OP = 57529
const JSON_UNQUOTE_EXTRACT_OP = 57530
const CREATE = 57531
const ALTER = 57532
const DROP = 57533
const RENAME = 57534
const ANALYZE = 57535
const ADD = 57536
const FLUSH = 57537
const CHANGE = 57538
const MODIFY = 57539
const DEALLOCATE = 57540
const REVERT = 57541
const SCHEMA = 57542
const TABLE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const KEY_BLOCK_SIZE = 57553
const CHECK = 57554
const INDEXES = 57555
const ACTION = 57556
const CASCADE = 57557
const CONSTRAINT = 57558
const FOREIGN = 57559
const NO = 57560
const REFERENCES = 57561
const RESTRICT = 57562
const SHOW = 57563
const DESCRIBE = 57564
const EXPLAIN = 57565
const DATE = 57566
const ESCAPE = 57567
const REPAIR = 57568
const OPTIMIZE = 57569
const TRUNCATE = 57570
const COALESCE = 57571
const EXCHANGE = 57572
const REBUILD = 57573
const PARTITIONING = 57574
const REMOVE = 57575
const PREPARE = 57576
const EXECUTE = 57577
const MAXVALUE = 57578
const PARTITION = 57579
const REORGANIZE = 57580
const LESS = 57581
const THAN = 57582
const PROCEDURE = 57583
const TRIGGER = 57584
const VINDEX = 57585
const VINDEXES = 57586
const DIRECTORY = 57587
const NAME = 57588
const UPGRADE = 57589
const STATUS = 57590
const VARIABLES = 57591
const WARNINGS = 57592
const CASCADED = 57593
const DEFINER = 57594
const OPTION = 57595
const SQL = 57596
const UNDEFINED = 57597
const SEQUENCE = 57598
const MERGE = 57599
const TEMPORARY = 57600
const TEMPTABLE = 57601
const INVOKER = 57602
const SECURITY = 57603
const FIRST = 57604
const AFTER = 57605
const LAST = 57606
const VITESS_MIGRATION = 57607
const CANCEL = 57608
const RETRY = 57609
const COMPLETE = 57610
const CLEANUP = 57611
const BEGIN = 57612
const START = 57613
const TRANSACTION = 57614
const COMMIT = 57615
const ROLLBACK = 57616
const SAVEPOINT = 57617
const RELEASE = 57618
const WORK = 57619
const BIT = 57620
const TINYINT = 57621
const SMALLINT = 57622
const MEDIUMINT = 57623
const INT = 57624
const INTEGER = 57625
const BIGINT = 57626
const INTNUM = 57627
const REAL = 57628
const DOUBLE = 57629
const FLOAT_TYPE = 57630
const DECIMAL_TYPE = 57631
const NUMERIC = 57632
const TIME = 57633
const TIMESTAMP = 57634
const DATETIME = 57635
const YEAR = 57636
const CHAR = 57637
const VARCHAR = 57638
const BOOL = 57639
const CHARACTER = 57640
const VARBINARY = 57641
const NCHAR = 57642
const TEXT = 57643
const TINYTEXT = 57644
const MEDIUMTEXT = 57645
const LONGTEXT = 57646
const BLOB = 57647
const TINYBLOB = 57648
const MEDIUMBLOB = 57649
const LONGBLOB = 57650
const JSON = 57651
const ENUM = 57652
const GEOMETRY = 57653
const POINT = 57654
const LINESTRING = 57655
const POLYGON = 57656
const GEOMETRYCOLLECTION = 57657
const MULTIPOINT = 57658
const MULTILINESTRING = 57659
const MULTIPOLYGON = 57660
const ASCII = 57661
const UNICODE = 57662
const NULLX = 57663
const AUTO_INCREMENT = 57664
const APPROXNUM = 57665
const SIGNED = 57666
const UNSIGNED = 57667
const ZEROFILL = 57668
const CODE = 57669
const COLLATION = 57670
const COLUMNS = 57671
const DATABASES = 57672
const ENGINES = 57673
const EVENT = 57674
const EXTENDED = 57675
const FIELDS = 57676
const FULL = 57677
const FUNCTION = 57678
const GTID_EXECUTED = 57679
const KEYSPACES = 57680
const OPEN = 57681
const PLUGINS = 57682
const PRIVILEGES = 57683
const PROCESSLIST = 57684
const SCHEMAS = 57685
const TABLES = 57686
const TRIGGERS = 57687
const USER = 57688
const VGTID_EXECUTED = 57689
const VITESS_KEYSPACES = 57690
const VITESS_METADATA = 57691
const VITESS_MIGRATIONS = 57692
const VITESS_REPLICATION_STATUS = 57693
const VITESS_SHARDS = 57694
const VITESS_TABLETS = 57695
const VSCHEMA = 57696
const NAMES = 57697
const GLOBAL = 57698
const SESSION = 57699
const ISOLATION = 57700
const LEVEL = 57701
const READ = 57702
const WRITE = 57703
const ONLY = 57704
const REPEATABLE = 57705
const COMMITTED = 57706
const UNCOMMITTED = 57707
const SERIALIZABLE = 57708
const CURRENT_TIMESTAMP = 57709
const DATABASE = 57710
const CURRENT_DATE = 57711
const CURRENT_TIME = 57712
const LOCALTIME = 57713
const LOCALTIMESTAMP = 57714
const CURRENT_USER = 57715
const UTC_DATE = 57716
const UTC_TIME = 57717
const UTC_TIMESTAMP = 57718
const DAY = 57719
const DAY_HOUR = 57720
const DAY_MICROSECOND = 57721
const DAY_MINUTE = 57722
const DAY_SECOND = 57723
const HOUR = 57724
const HOUR_MICROSECOND = 57725
const HOUR_MINUTE = 57726
const HOUR_SECOND = 57727
const MICROSECOND = 57728
const MINUTE = 57729
const MINUTE_MICROSECOND = 57730
const MINUTE_SECOND = 57731
const MONTH = 57732
const QUARTER = 57733
const SECOND = 57734
const SECOND_MICROSECOND = 57735
const YEAR_MONTH = 57736
const WEEK = 57737
const REPLACE = 57738
const CONVERT = 57739
const CAST = 57740
const SUBSTR = 57741
const SUBSTRING = 57742
const GROUP_CONCAT = 57743
const SEPARATOR = 57744
const TIMESTAMPADD = 57745
const TIMESTAMPDIFF = 57746
const WEIGHT_STRING = 57747
const MATCH = 57748
const AGAINST = 57749
const BOOLEAN = 57750
const LANGUAGE = 57751
const WITH = 57752
const QUERY = 57753
const EXPANSION = 57754
const WITHOUT = 57755
const VALIDATION = 57756
const UNUSED = 57757
const ARRAY = 57758
const CUME_DIST = 57759
const DESCRIPTION = 57760
const DENSE_RANK = 57761
const EMPTY = 57762
const EXCEPT = 57763
const FIRST_VALUE = 57764
const GROUPING = 57765
const GROUPS = 57766
const JSON_TABLE = 57767
const LAG = 57768
const LAST_VALUE = 57769
const LATERAL = 57770
const LEAD = 57771
const MEMBER = 57772
const NTH_VALUE = 57773
const NTILE = 57774
const OF = 57775
const OVER = 57776
const PERCENT_RANK = 57777
const RANK = 57778
const RECURSIVE = 57779
const ROW_NUMBER = 57780
const SYSTEM = 57781
const WINDOW = 57782
const ACTIVE = 57783
const ADMIN = 57784
const BUCKETS = 57785
const CLONE = 57786
const COMPONENT = 57787
const DEFINITION = 57788
const ENFORCED = 57789
const EXCLUDE = 57790
const FOLLOWING = 57791
const GEOMCOLLECTION = 57792
const GET_MASTER_PUBLIC_KEY = 57793
const HISTOGRAM = 57794
const HISTORY = 57795
const INACTIVE = 57796
const INVISIBLE = 57797
const LOCKED = 57798
const MASTER_COMPRESSION_ALGORITHMS = 57799
const MASTER_PUBLIC_KEY_PATH = 57800
const MASTER_TLS_CIPHERSUITES = 57801
const MASTER_ZSTD_COMPRESSION_LEVEL = 57802
const NESTED = 57803
const NETWORK_NAMESPACE = 57804
const NOWAIT = 57805
const NULLS = 57806
const OJ = 57807
const OLD = 57808
const OPTIONAL = 57809
const ORDINALITY = 57810
const ORGANIZATION = 57811
const OTHERS = 57812
const PATH = 57813
const PERSIST = 57814
const PERSIST_ONLY = 57815
const PRECEDING = 57816
const PRIVILEGE_CHECKS_USER = 57817
const PROCESS = 57818
const RANDOM = 57819
const REFERENCE = 57820
const REQUIRE_ROW_FORMAT = 57821
const RESOURCE = 57822
const RESPECT = 57823
const RESTART = 57824
const RETAIN = 57825
const REUSE = 57826
const ROLE = 57827
const SECONDARY = 57828
const SECONDARY_ENGINE = 57829
const SECONDARY_LOAD = 57830
const SECONDARY_UNLOAD = 57831
const SKIP = 57832
const SRID = 57833
const THREAD_PRIORITY = 57834
const TIES = 57835
const UNBOUNDED = 57836
const VCPU = 57837
const VISIBLE = 57838
const FORMAT = 57839
const TREE = 57840
const VITESS = 57841
const TRADITIONAL = 57842
const LOCAL = 57843
const LOW_PRIORITY = 57844
const NO_WRITE_TO_BINLOG = 57845
const LOGS = 57846
const ERROR = 57847
const GENERAL = 57848
const HOSTS = 57849
const OPTIMIZER_COSTS = 57850
const USER_RESOURCES = 57851
const SLOW = 57852
const CHANNEL = 57853
const RELAY = 57854
const EXPORT = 57855
const AVG_ROW_LENGTH = 57856
const CONNECTION = 57857
const CHECKSUM = 57858
const DELAY_KEY_WRITE = 57859
const ENCRYPTION = 57860
const ENGINE = 57861
const INSERT_METHOD = 57862
const MAX_ROWS = 57863
const MIN_ROWS = 57864
const PACK_KEYS = 57865
const PASSWORD = 57866
const FIXED = 57867
const DYNAMIC = 57868
const COMPRESSED = 57869
const REDUNDANT = 57870
const COMPACT = 57871
const ROW_FORMAT = 57872
const STATS_AUTO_RECALC = 57873
const STATS_PERSISTENT = 57874
const STATS_SAMPLE_PAGES = 57875
const STORAGE = 57876
const MEMORY = 57877
const DISK = 57878
const PARTITIONS = 57879
const LINEAR = 57880
const RANGE = 57881
const LIST = 57882
const SUBPARTITION = 57883
const SUBPARTITIONS = 57884
const HASH = 57885

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	561, 140,
	-2, 146,
	-1, 48,
	119, 146,
	159, 146,
	315, 146,
	-2, 447,
	-1, 55,
	33, 626,
	219, 626,
	230, 626,
	265, 640,
	266, 640,
	-2, 628,
	-1, 60,
	221, 651,
	-2, 649,
	-1, 114,
	218, 1125,
	-2, 119,
	-1, 116,
	1, 141,
	561, 141,
	-2, 146,
	-1, 126,
	120, 350,
	224, 350,
	-2, 441,
	-1, 145,
	119, 146,
	159, 146,
	315, 146,
	-2, 456,
	-1, 615,
	203, 1146,
	-2, 1142,
	-1, 616,
	203, 1147,
	-2, 1143,
	-1, 690,
	57, 719,
	-2, 734,
	-1, 727,
	135, 1508,
	-2, 112,
	-1, 728,
	135, 1384,
	-2, 113,
	-1, 734,
	135, 1438,
	-2, 1119,
	-1, 876,
	135, 1315,
	-2, 1116,
	-1, 914,
	229, 41,
	234, 41,
	-2, 361,
	-1, 991,
	1, 495,
	561, 495,
	-2, 146,
	-1, 1194,
	57, 720,
	-2, 739,
	-1, 1195,
	57, 721,
	-2, 740,
	-1, 1247,
	119, 146,
	159, 146,
	315, 146,
	-2, 391,
	-1, 1324,
	120, 350,
	224, 350,
	-2, 441,
	-1, 1333,
	229, 42,
	234, 42,
	-2, 362,
	-1, 1586,
	203, 1151,
	-2, 1145,
	-1, 1667,
	119, 146,
	159, 146,
	315, 146,
	-2, 392,
	-1, 1674,
	23, 165,
	-2, 167,
	-1, 1868,
	84, 39,
	-2, 774,
	-1, 1918,
	75, 94,
	84, 94,
	-2, 794,
	-1, 2088,
	47, 1087,
	-2, 1081,
	-1, 2255,
	84, 39,
	-2, 775,
	-1, 2293,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 767,
}

const yyPrivate = 57344

const yyLast = 35754

var yyAct = [...]int{
	615, 2553, 2547, 2352, 2518, 2504, 2209, 2139, 2146, 1055,
	2099, 2431, 607, 606, 37, 705, 2180, 2102, 96, 2377,
	683, 1173, 2192, 2445, 1856, 2148, 1727, 3, 2191, 1209,
	562, 2103, 2100, 2382, 2264, 1621, 1891, 566, 1600, 588,
	2194, 2258, 1914, 604, 1625, 2284, 618, 605, 1640, 2097,
	2089, 182, 1883, 2250, 182, 1697, 526, 182, 559, 1950,
	1979, 558, 542, 2020, 182, 154, 1951, 1903, 1717, 1178,
	879, 1952, 182, 560, 1702, 38, 1653, 36, 732, 1645,
	1875, 706, 1644, 1196, 922, 1858, 2036, 182, 944, 554,
	1304, 687, 1529, 691, 1536, 685, 1488, 1716, 140, 1769,
	1704, 1664, 1239, 1944, 904, 1736, 1920, 1218, 1580, 542,
	909, 708, 542, 182, 542, 571, 1647, 1602, 729, 95,
	1176, 1506, 1548, 496, 1331, 91, 1074, 1435, 1347, 915,
	1439, 1338, 886, 545, 1421, 883, 1714, 1632, 910, 887,
	1238, 678, 1053, 1693, 912, 911, 1222, 697, 1048, 719,
	1299, 695, 1323, 97, 157, 693, 987, 692, 117, 118,
	1236, 1444, 76, 98, 123, 124, 549, 1144, 1626, 2476,
	1972, 89, 2554, 1140, 2177, 85, 1593, 1729, 1730, 1731,
	1729, 1970, 885, 1999, 1998, 1767, 694, 77, 2028, 8,
	1075, 2029, 1495, 1494, 7, 6, 1493, 713, 1407, 718,
	1492, 125, 119, 184, 185, 186, 1597, 1598, 1491, 1490,
	1477, 949, 926, 90, 1482, 552, 699, 553, 2532, 1854,
	2085, 1885, 880, 890, 499, 2163, 895, 2317, 2427, 2426,
	684, 946, 550, 2345, 1003, 948, 2346, 2563, 957, 78,
	686, 947, 80, 2514, 960, 961, 2557, 964, 965, 966,
	967, 2487, 2546, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 700, 726,
	1583, 119, 925, 707, 78, 901, 900, 733, 178, 1807,
	2353, 2505, 1106, 1755, 2513, 2486, 2035, 102, 902, 2242,
	1313, 950, 951, 952, 990, 1085, 78, 1709, 1894, 2136,
	2137, 78, 120, 2436, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1115, 1114, 1116, 1117, 162, 87, 1855, 2007, 1659,
	1660, 1707, 2006, 1895, 2135, 2027, 962, 1658, 104, 105,
	1577, 108, 1804, 1929, 114, 119, 1928, 179, 894, 1930,
	494, 896, 1039, 1805, 1041, 2395, 1051, 1240, 1599, 1241,
	899, 87, 996, 997, 1022, 677, 676, 1934, 1973, 1032,
	679, 680, 681, 682, 1027, 1028, 690, 1941, 1023, 2062,
	1016, 1010, 159, 87, 160, 178, 1011, 529, 87, 1677,
	1676, 2211, 1038, 1040, 999, 1010, 2261, 177, 1081, 2233,
	1011, 1073, 2231, 1481, 721, 722, 529, 529, 1009, 120,
	1008, 142, 540, 1483, 1484, 1485, 986, 544, 897, 538,
	1397, 529, 162, 1569, 1558, 1559, 1560, 1561, 1571, 1562,
	1563, 1564, 1576, 1572, 1565, 1566, 1573, 1574, 1575, 1567,
	1568, 1570, 1180, 899, 985, 899, 963, 891, 1781, 1778,
	1780, 1779, 1427, 152, 893, 892, 1050, 1024, 141, 1017,
	1706, 903, 1980, 1029, 1398, 1737, 1399, 2002, 2204, 1775,
	2212, 1770, 2556, 1030, 1422, 1075, 2205, 1045, 2533, 159,
	1783, 160, 1784, 1036, 1785, 1025, 1026, 1037, 1031, 992,
	129, 130, 151, 150, 177, 2213, 2015, 1042, 1786, 969,
	968, 1772, 163, 897, 182, 2338, 182, 1774, 989, 182,
	2188, 168, 905, 1740, 1641, 933, 906, 931, 87, 1035,
	906, 942, 1316, 943, 1776, 941, 940, 1043, 898, 939,
	938, 2063, 1118, 937, 936, 935, 930, 542, 542, 542,
	2152, 1183, 1805, 884, 2558, 2019, 1118, 2544, 918, 1773,
	884, 2551, 884, 917, 882, 542, 542, 1436, 1715, 720,
	2016, 1080, 1077, 1078, 1079, 1084, 1086, 1083, 2170, 1082,
	37, 924, 2162, 994, 1337, 1000, 1076, 1020, 1002, 1761,
	1085, 1432, 1061, 530, 1067, 953, 2001, 146, 127, 153,
	134, 126, 1991, 147, 148, 2437, 924, 988, 1311, 163,
	1310, 1309, 530, 530, 1627, 1628, 1433, 1307, 168, 135,
	498, 898, 493, 898, 1757, 2031, 2466, 530, 2475, 1971,
	2298, 2187, 155, 138, 136, 131, 132, 133, 137, 1818,
	2014, 1974, 2004, 2013, 2280, 128, 1119, 1120, 1118, 1925,
	1859, 1861, 1890, 1846, 139, 1428, 1592, 1226, 1044, 2485,
	1171, 1121, 1122, 1123, 1124, 934, 81, 932, 1153, 1708,
	1001, 1129, 924, 1132, 924, 2262, 116, 1665, 1117, 923,
	86, 2134, 1166, 1081, 702, 917, 920, 921, 1336, 884,
	1057, 1058, 959, 914, 918, 1049, 2481, 182, 2423, 2334,
	2022, 542, 542, 2022, 923, 2021, 1806, 111, 2021, 1125,
	924, 1033, 1445, 2055, 913, 86, 2274, 182, 1186, 1184,
	945, 1426, 1190, 1771, 1172, 685, 1189, 1187, 687, 155,
	1429, 1409, 1408, 1410, 1411, 1412, 542, 86, 995, 1242,
	182, 998, 86, 1007, 1071, 542, 1549, 1549, 1832, 1005,
	1963, 542, 1090, 77, 729, 1006, 1070, 1012, 1013, 1014,
	1015, 1068, 1069, 2549, 1089, 1090, 2550, 112, 2548, 2391,
	923, 2309, 923, 1019, 2308, 927, 917, 927, 917, 1146,
	1052, 1142, 1744, 1143, 1021, 928, 1172, 928, 1346, 1188,
	924, 2239, 1345, 95, 1335, 1754, 1159, 1160, 1161, 1162,
	1860, 1752, 1756, 933, 149, 929, 1633, 1634, 923, 1231,
	931, 1237, 2540, 1177, 917, 920, 921, 143, 884, 1227,
	144, 2299, 914, 918, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 2561, 1088, 98, 1089, 1090,
	173, 174, 175, 176, 1034, 1446, 1080, 1077, 1078, 1079,
	1084, 1086, 1083, 1423, 1082, 1424, 1203, 991, 1425, 2559,
	684, 1076, 1174, 2492, 1088, 2524, 1089, 1090, 1208, 1511,
	2542, 1749, 2522, 2057, 184, 185, 186, 686, 1531, 1004,
	1185, 2526, 2527, 1512, 1513, 1510, 2150, 2151, 923, 1205,
	958, 1232, 1233, 2523, 1088, 2418, 1089, 1090, 2493, 182,
	1046, 1753, 1749, 1300, 1088, 2368, 1089, 1090, 1088, 2142,
	1089, 1090, 1308, 733, 1112, 1113, 1115, 1114, 1116, 1117,
	724, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 1751, 542, 2459, 1333, 2560, 173, 174, 175,
	176, 2367, 1203, 1342, 1501, 1503, 1504, 1344, 1532, 1553,
	542, 542, 87, 542, 2143, 542, 542, 2316, 542, 542,
	542, 542, 542, 542, 2315, 1502, 1509, 2178, 1249, 2460,
	1810, 1811, 1812, 542, 2237, 1203, 2168, 182, 1380, 2145,
	1948, 1947, 715, 1343, 1416, 1414, 2140, 629, 630, 631,
	2149, 1712, 1417, 182, 1402, 1401, 1840, 1191, 1828, 1400,
	2150, 2151, 2152, 1329, 542, 1404, 182, 2141, 1375, 1376,
	2245, 1314, 1315, 1088, 1391, 1089, 1090, 1434, 2541, 1385,
	542, 1382, 182, 1381, 1356, 1339, 1339, 1322, 1108, 1109,
	1110, 1111, 1112, 1113, 1115, 1114, 1116, 1117, 182, 2147,
	184, 185, 186, 1377, 2306, 182, 1379, 1415, 1413, 1088,
	555, 1089, 1090, 2463, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 542, 542, 542, 1306, 1341, 1403, 2462,
	1827, 1383, 1384, 1340, 2461, 1420, 2208, 1389, 1390, 1349,
	1319, 1350, 709, 1352, 1354, 1332, 1212, 1358, 1360, 1362,
	1364, 1366, 1320, 1318, 182, 2390, 1088, 1823, 1089, 1090,
	1441, 2388, 1866, 2472, 2149, 1865, 1822, 1450, 1060, 1088,
	1393, 1089, 1090, 2364, 1454, 2313, 2152, 1110, 1111, 1112,
	1113, 1115, 1114, 1116, 1117, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1821, 2305, 1507, 1213, 1216, 1957, 1203, 1530,
	1945, 1088, 1378, 1089, 1090, 1088, 1437, 1089, 1090, 184,
	185, 186, 1539, 542, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1092, 1765, 1489, 1764, 1624, 119, 1606, 542, 542,
	901, 900, 2416, 1534, 1533, 1505, 1088, 2335, 1089, 1090,
	1478, 1442, 1514, 1584, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1550, 1515, 182,
	1451, 1215, 1405, 1312, 542, 1472, 1473, 1474, 1392, 1388,
	1088, 1387, 1089, 1090, 1475, 1088, 1386, 1089, 1090, 2144,
	1214, 1605, 1047, 1611, 1203, 1612, 1881, 2555, 182, 1881,
	2511, 542, 1088, 2244, 1089, 1090, 2444, 1508, 1881, 2498,
	1088, 182, 1089, 1090, 542, 1881, 2496, 2443, 1949, 182,
	2412, 182, 1586, 182, 182, 542, 1584, 101, 542, 94,
	612, 614, 613, 594, 729, 2488, 1203, 729, 100, 542,
	99, 1449, 1088, 95, 1089, 1090, 1881, 2477, 1453, 94,
	1455, 1456, 1457, 1458, 1588, 1589, 1088, 1462, 1089, 1090,
	2343, 2474, 95, 1881, 2419, 1643, 2411, 92, 2343, 1203,
	1617, 1476, 2351, 101, 1585, 184, 185, 186, 93, 1932,
	1635, 184, 185, 186, 100, 1725, 99, 1203, 1639, 1981,
	1642, 1881, 2341, 1489, 542, 1586, 1683, 1684, 1685, 1686,
	1718, 1719, 1720, 1668, 2129, 1722, 1724, 1203, 2098, 1669,
	184, 185, 186, 1805, 1723, 1749, 1203, 92, 2273, 542,
	1651, 699, 2278, 1203, 94, 542, 1342, 1960, 93, 1342,
	1892, 1342, 1203, 2160, 2159, 1750, 1678, 1748, 1679, 1680,
	1681, 1682, 1674, 1738, 1699, 1619, 1673, 1638, 1921, 1672,
	2156, 2157, 2530, 1203, 1689, 1690, 1691, 1692, 1447, 1448,
	1636, 1705, 2156, 2155, 1900, 1203, 1656, 542, 1877, 1530,
	1819, 1203, 1452, 1921, 1530, 1530, 1892, 1671, 100, 1459,
	1460, 1461, 1203, 94, 1670, 1655, 2273, 1535, 2037, 1735,
	1805, 2000, 1749, 733, 1541, 1542, 733, 1303, 1985, 1977,
	1978, 1900, 926, 1881, 1880, 1087, 1203, 1303, 1302, 1899,
	182, 1922, 1339, 1248, 1247, 1587, 2275, 182, 1590, 1591,
	1924, 1087, 182, 182, 2480, 1700, 182, 1881, 182, 1695,
	1696, 1713, 1711, 1710, 1900, 182, 1922, 1758, 2318, 1721,
	1819, 2158, 182, 2073, 1657, 1805, 1819, 2273, 1819, 1837,
	1743, 1836, 1741, 1746, 1616, 1747, 1749, 1742, 1700, 1745,
	1732, 1760, 925, 1900, 1631, 1207, 1762, 1763, 1595, 2039,
	182, 542, 1486, 1759, 1431, 1371, 1234, 908, 907, 1489,
	689, 2501, 87, 2433, 1210, 2409, 1777, 2402, 2319, 2320,
	2321, 1787, 1788, 2333, 2330, 1792, 2311, 2248, 2247, 1305,
	1698, 616, 2206, 2183, 1795, 2179, 1768, 1986, 1694, 1091,
	1688, 1798, 608, 1507, 589, 591, 609, 610, 1687, 587,
	590, 611, 1419, 1334, 1330, 1372, 1373, 1374, 1301, 2181,
	113, 2049, 2048, 2047, 2041, 2322, 2045, 1138, 2040, 1801,
	2038, 1954, 1953, 1368, 990, 2043, 2285, 2286, 592, 593,
	2408, 1789, 183, 2537, 2042, 183, 2210, 87, 183, 2434,
	1814, 1709, 1816, 543, 1609, 183, 2519, 2288, 2175, 2044,
	2046, 2174, 2173, 183, 2098, 1964, 1815, 1790, 1479, 555,
	2120, 2291, 2323, 2324, 2290, 2121, 182, 2117, 183, 1954,
	1369, 1370, 1852, 2118, 182, 2116, 2535, 2512, 2119, 1623,
	542, 1211, 1106, 1803, 2030, 2122, 542, 1909, 1910, 1615,
	543, 2090, 2092, 543, 183, 543, 1508, 542, 2279, 2078,
	2093, 2458, 1813, 2077, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1115, 1114, 1116, 1117, 1869, 2381, 2372, 1983, 2371,
	182, 182, 2266, 2383, 37, 1905, 1908, 1909, 1910, 1906,
	2265, 1907, 1911, 1916, 1201, 1197, 1931, 2269, 1896, 1882,
	1831, 1586, 2087, 1219, 1905, 1908, 1909, 1910, 1906, 1198,
	1907, 1911, 1796, 1797, 2285, 2286, 703, 1799, 1201, 1197,
	1430, 675, 2154, 1939, 704, 1958, 1800, 2370, 955, 1545,
	92, 1878, 954, 1198, 1613, 1614, 1200, 94, 1199, 2220,
	542, 93, 1177, 1546, 1953, 182, 1853, 2025, 1059, 1993,
	1918, 1863, 182, 1585, 1942, 1943, 92, 1915, 1194, 1195,
	1200, 1992, 1199, 1935, 542, 2271, 1879, 93, 120, 1889,
	94, 542, 1874, 101, 2171, 1342, 1342, 1919, 1633, 1634,
	542, 1793, 2473, 2429, 100, 2153, 99, 1913, 1620, 1923,
	1926, 1782, 1997, 711, 712, 94, 2251, 1809, 101, 1976,
	2076, 1933, 1705, 182, 182, 182, 182, 182, 2075, 100,
	1936, 99, 99, 2450, 1962, 2449, 2389, 2387, 2386, 2379,
	182, 182, 1946, 2331, 2270, 1956, 2268, 2184, 1733, 1317,
	101, 710, 100, 2378, 1955, 2259, 182, 1892, 2539, 2538,
	103, 100, 1877, 1961, 1838, 1829, 1965, 1966, 1967, 1607,
	1995, 1228, 1220, 2539, 1530, 106, 107, 2464, 2304, 701,
	88, 1322, 1, 624, 2521, 511, 1596, 1175, 525, 2517,
	1406, 1396, 2008, 2009, 2010, 2011, 2012, 542, 685, 2354,
	2054, 2430, 1843, 1844, 1982, 1739, 2067, 2329, 1703, 1489,
	2018, 916, 1996, 542, 1994, 145, 1666, 1667, 2507, 1987,
	1988, 110, 877, 109, 919, 2026, 1018, 1734, 182, 2032,
	2344, 1940, 542, 1675, 1254, 1252, 2017, 1253, 1251, 1256,
	1255, 542, 2033, 1250, 1839, 1480, 539, 1912, 542, 542,
	2067, 182, 182, 182, 182, 182, 180, 2095, 2104, 2050,
	2110, 691, 2080, 182, 2034, 1243, 2051, 596, 182, 182,
	2081, 182, 1221, 956, 182, 182, 182, 501, 2161, 1766,
	507, 1190, 2101, 1130, 2074, 1927, 730, 2101, 723, 1608,
	1867, 2106, 2263, 2068, 2069, 2070, 2071, 2086, 2088, 1884,
	2091, 2084, 2457, 2380, 2066, 2079, 2499, 2128, 1937, 2169,
	1217, 1830, 2082, 2130, 1137, 182, 2131, 1547, 1443, 1648,
	1604, 597, 1500, 693, 564, 692, 563, 561, 542, 2123,
	1870, 2112, 2113, 2111, 2115, 1893, 2114, 542, 1093, 619,
	1857, 2072, 182, 1229, 1904, 2127, 1902, 1901, 95, 1791,
	2138, 2132, 182, 1652, 1441, 183, 2287, 183, 2283, 1646,
	183, 1876, 572, 565, 557, 617, 2301, 182, 2186, 2165,
	182, 2196, 2190, 2164, 2003, 2207, 2005, 2109, 1938, 2203,
	2221, 1072, 1193, 541, 2172, 551, 889, 2198, 543, 543,
	543, 2197, 2166, 2167, 1544, 2435, 2421, 1808, 2185, 2241,
	1496, 1497, 1498, 1499, 1705, 2201, 543, 543, 1192, 1556,
	2189, 2193, 1557, 2176, 1726, 63, 41, 546, 2531, 1063,
	717, 2202, 32, 31, 542, 182, 30, 29, 2216, 28,
	731, 2215, 23, 881, 22, 888, 2214, 21, 20, 2217,
	1537, 1538, 2222, 19, 25, 18, 17, 2229, 1543, 16,
	115, 50, 47, 45, 122, 2223, 121, 48, 44, 993,
	42, 27, 26, 1578, 1579, 15, 2257, 14, 13, 12,
	11, 10, 9, 5, 2252, 2253, 4, 35, 2226, 2227,
	182, 2228, 34, 33, 2230, 1066, 2232, 2260, 2234, 2267,
	24, 2, 555, 1969, 2256, 1728, 0, 2282, 2307, 2272,
	0, 0, 0, 182, 2292, 2023, 0, 0, 2024, 0,
	2289, 0, 0, 0, 0, 0, 0, 2296, 2297, 0,
	0, 182, 2295, 0, 182, 182, 182, 2294, 1629, 1630,
	0, 0, 2302, 2303, 542, 542, 2198, 0, 183, 0,
	2197, 0, 543, 543, 0, 0, 0, 0, 0, 0,
	2312, 2339, 2314, 0, 0, 1663, 0, 0, 183, 0,
	0, 542, 542, 542, 542, 0, 0, 0, 0, 2336,
	2337, 0, 2310, 0, 0, 0, 0, 543, 0, 0,
	0, 183, 2350, 0, 0, 0, 543, 0, 0, 0,
	2325, 0, 543, 2326, 2327, 2328, 2348, 2349, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 2363, 2218, 2219,
	0, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 2360, 0, 0, 0, 0, 0, 0, 542,
	0, 542, 0, 2359, 0, 0, 0, 0, 2104, 0,
	1106, 37, 2104, 2375, 0, 0, 2384, 2398, 2385, 2376,
	0, 685, 0, 2400, 0, 2396, 2392, 2394, 0, 0,
	0, 2101, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115,
	1114, 1116, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 2404, 2405, 0, 542, 2407, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2420, 0, 0, 542, 2413, 0, 1106, 2415, 2414,
	1102, 0, 1103, 2432, 0, 0, 2425, 2424, 0, 2417,
	542, 529, 0, 0, 542, 542, 1104, 1105, 1101, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1115, 1114, 1116, 1117,
	183, 0, 0, 0, 0, 0, 2454, 2451, 2452, 0,
	2453, 2456, 0, 542, 0, 0, 0, 0, 2104, 0,
	542, 0, 516, 2465, 0, 0, 2467, 0, 0, 0,
	0, 0, 0, 685, 543, 2469, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 182, 0, 0, 2468, 0,
	0, 543, 543, 37, 543, 2471, 543, 543, 0, 543,
	543, 543, 543, 543, 543, 0, 0, 2479, 515, 0,
	0, 0, 0, 0, 543, 0, 0, 542, 183, 2482,
	513, 0, 0, 0, 0, 2494, 0, 0, 0, 0,
	0, 542, 542, 0, 183, 2497, 0, 37, 0, 542,
	2432, 2508, 2506, 2502, 0, 543, 0, 183, 731, 731,
	731, 2500, 2101, 0, 2483, 0, 2528, 2520, 2525, 0,
	510, 543, 1833, 183, 0, 0, 1062, 1064, 2534, 524,
	0, 0, 2536, 0, 0, 0, 0, 0, 0, 183,
	0, 542, 0, 0, 521, 0, 183, 0, 2545, 0,
	0, 0, 2552, 0, 0, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 543, 543, 543, 2562, 0, 0,
	0, 0, 0, 0, 0, 0, 2543, 530, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1115, 1114, 1116, 1117, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 0, 1169, 500, 0, 502,
	517, 0, 532, 0, 531, 506, 0, 504, 508, 518,
	509, 1106, 503, 1817, 514, 0, 0, 505, 519, 520,
	522, 536, 535, 523, 0, 512, 533, 0, 0, 0,
	0, 0, 0, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1115, 1114, 1116, 1117, 543, 178, 0, 0, 0, 0,
	0, 0, 1181, 1182, 0, 0, 1975, 0, 0, 543,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 1224, 0, 0,
	183, 0, 0, 0, 0, 543, 731, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 141, 183,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 543, 0, 0, 0, 159,
	183, 160, 183, 0, 183, 183, 543, 0, 0, 543,
	1325, 1326, 151, 150, 177, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 0,
	2052, 2053, 0, 0, 0, 2056, 0, 0, 0, 2058,
	2059, 2060, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 543, 146, 1327, 153,
	0, 1324, 0, 147, 148, 2096, 0, 120, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	162, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 0, 0,
	0, 1348, 1348, 0, 1348, 0, 1348, 1348, 0, 1357,
	1348, 1348, 1348, 1348, 1348, 0, 0, 0, 0, 0,
	0, 0, 1169, 1169, 881, 0, 0, 159, 0, 160,
	0, 183, 598, 0, 0, 0, 2182, 0, 183, 0,
	0, 0, 177, 183, 183, 0, 0, 183, 0, 183,
	0, 0, 0, 0, 0, 1418, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 1438, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 181, 0, 0, 497, 0, 0, 537,
	0, 183, 543, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 731, 731, 0, 0, 698,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 716, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 163, 0, 0,
	0, 0, 0, 0, 149, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 555, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 0, 183, 0, 0,
	0, 1169, 0, 0, 0, 183, 0, 0, 0, 1554,
	1555, 543, 0, 0, 0, 731, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 2332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 0, 0, 2347, 0,
	0, 183, 183, 0, 0, 0, 0, 155, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 1622, 0, 0, 0, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 1224, 0, 0, 731, 0,
	2361, 0, 2362, 0, 0, 0, 731, 2365, 2366, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 543, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 2393, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 2401, 0,
	0, 2403, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 0, 2406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2410, 888, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 183, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 183, 183, 555, 0, 0, 888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2455, 555, 0, 0, 0, 0, 0, 881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	0, 0, 0, 0, 543, 173, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 555, 0, 0, 0, 183,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 543,
	543, 0, 183, 183, 183, 183, 183, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 497, 0, 497, 183,
	183, 497, 183, 0, 0, 183, 183, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2529, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 120, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 162, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 141, 183, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	160, 0, 0, 0, 0, 0, 0, 1170, 0, 1325,
	1326, 151, 150, 177, 731, 0, 0, 1204, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 543, 183, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 626, 79, 0, 0, 0, 0, 0, 698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 146, 1327, 153, 0,
	1324, 0, 147, 148, 183, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 1959, 183, 0, 0, 183, 183, 183, 0, 0,
	0, 0, 0, 0, 0, 543, 543, 0, 0, 0,
	688, 0, 79, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	688, 1989, 543, 543, 543, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	543, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 1170, 0,
	0, 0, 731, 149, 0, 543, 1169, 0, 0, 2108,
	1348, 1169, 0, 0, 0, 0, 143, 0, 0, 144,
	0, 543, 0, 1170, 1170, 543, 543, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1394, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 497, 0,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 183, 0, 0, 881,
	497, 0, 1169, 0, 0, 0, 0, 497, 1622, 0,
	0, 0, 0, 0, 0, 0, 1463, 1464, 497, 497,
	497, 497, 497, 497, 497, 0, 0, 0, 543, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 1271, 543, 543, 0, 0, 173, 174, 175, 176,
	543, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1551, 0, 0, 0,
	1552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 2083, 0, 1204, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 716, 716, 0, 0,
	0, 0, 1170, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 0, 0, 716, 1440, 716, 716, 716,
	716, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1259, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 1054,
	1054, 1054, 0, 497, 0, 1622, 1622, 0, 0, 1440,
	0, 497, 0, 497, 0, 497, 1654, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2355, 2356, 2357, 2358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 1126, 1127, 1128,
	0, 1131, 1272, 1133, 1134, 1135, 1136, 0, 1139, 1141,
	1141, 0, 1141, 1145, 1145, 1147, 1148, 1149, 1150, 1151,
	1152, 0, 1154, 1155, 1156, 1157, 1158, 0, 0, 0,
	0, 1145, 1145, 1145, 1145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1169, 0, 0, 0, 0,
	2397, 0, 2399, 0, 0, 0, 1285, 1288, 1289, 1290,
	1291, 1292, 1293, 0, 1294, 1295, 1296, 1297, 1298, 1273,
	1274, 1275, 1276, 1257, 1258, 1286, 0, 1260, 0, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 0, 0, 0,
	0, 1179, 0, 0, 0, 1622, 0, 688, 0, 0,
	0, 688, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 2447, 0, 0, 0, 2447, 2447, 0, 0, 84,
	0, 0, 497, 43, 69, 70, 0, 67, 71, 497,
	0, 0, 0, 0, 497, 497, 68, 0, 497, 0,
	1794, 0, 0, 0, 1622, 0, 0, 497, 0, 0,
	0, 1622, 0, 0, 497, 0, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 87, 0, 0, 0,
	1820, 0, 497, 0, 1824, 0, 1825, 1826, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 2495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 731, 1841, 1842, 0, 0, 0, 0,
	2515, 0, 1847, 1848, 1849, 1850, 1851, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1440, 0, 0, 497, 46,
	49, 52, 51, 54, 0, 66, 1394, 0, 75, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 83, 82, 0, 0, 64, 65, 53, 0,
	0, 0, 0, 0, 73, 74, 0, 0, 0, 0,
	0, 0, 497, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1054, 1054, 1054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 497, 497, 497, 497,
	0, 0, 0, 0, 2061, 0, 0, 0, 2064, 2065,
	0, 0, 497, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 0, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2125,
	2126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 0, 0,
	0, 0, 1170, 497, 497, 497, 497, 497, 0, 0,
	0, 0, 0, 0, 0, 2124, 0, 0, 0, 0,
	497, 1394, 0, 497, 0, 1649, 497, 2133, 1440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2225, 0, 1170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 2235, 2236, 2238, 2240, 0,
	0, 0, 0, 0, 497, 2246, 0, 0, 0, 0,
	0, 2249, 0, 0, 0, 0, 0, 2254, 0, 497,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2276, 2277, 0, 0, 2281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2293, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 620, 627, 628,
	629, 630, 631, 621, 623, 0, 0, 0, 622, 0,
	0, 0, 0, 0, 625, 632, 633, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 2342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2199, 2200, 0,
	0, 0, 0, 497, 0, 0, 497, 497, 497, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1170, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2428, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2438, 2439, 2440, 0,
	2441, 2442, 0, 688, 2446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1897, 1898, 0, 0, 0, 0, 0,
	0, 0, 1917, 0, 0, 0, 0, 0, 0, 0,
	0, 2470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2489, 0, 0, 0, 0, 0, 2490, 2491, 0, 0,
	0, 0, 608, 0, 0, 0, 609, 610, 87, 0,
	0, 611, 0, 0, 620, 627, 628, 629, 630, 631,
	621, 623, 0, 2503, 0, 622, 0, 0, 0, 0,
	0, 625, 632, 633, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 0, 0,
	0, 0, 0, 0, 2199, 2200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	79, 0, 0, 1649, 1649, 1649, 1649, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1917, 0, 0, 1649, 0, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2369, 0, 2373, 2374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	79, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	859, 845, 419, 0, 793, 862, 763, 781, 872, 784,
	787, 827, 742, 806, 341, 778, 79, 767, 738, 773,
	739, 765, 795, 244, 762, 847, 810, 861, 297, 241,
	744, 768, 355, 783, 193, 829, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	868, 301, 816, 0, 404, 326, 0, 0, 0, 797,
	851, 804, 841, 792, 828, 752, 815, 863, 779, 824,
	864, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 2509, 0, 2510, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	775, 821, 858, 776, 823, 239, 285, 246, 238, 423,
	869, 850, 0, 0, 209, 860, 799, 0, 826, 0,
	875, 737, 818, 0, 740, 743, 871, 854, 771, 249,
	0, 0, 0, 0, 0, 0, 0, 796, 805, 838,
	790, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	814, 0, 0, 0, 748, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 0,
	0, 751, 0, 770, 839, 0, 735, 268, 745, 327,
	231, 0, 843, 853, 791, 456, 857, 789, 788, 833,
	749, 849, 782, 296, 747, 293, 188, 205, 0, 780,
	337, 378, 384, 848, 766, 774, 229, 772, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 813, 831,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	1056, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 761, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 844, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 836, 874, 350, 383, 219, 442, 403, 756,
	760, 754, 755, 808, 809, 757, 865, 866, 867, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 840, 750,
	0, 758, 759, 0, 846, 855, 856, 492, 812, 187,
	202, 299, 870, 372, 261, 470, 450, 446, 736, 753,
	236, 764, 0, 0, 777, 785, 786, 798, 800, 801,
	802, 803, 323, 819, 820, 822, 830, 832, 835, 837,
	842, 852, 873, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 811, 817, 310, 254, 273, 284,
	825, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	807, 834, 306, 420, 421, 280, 859, 845, 419, 0,
	793, 862, 763, 781, 872, 784, 787, 827, 742, 806,
	341, 778, 0, 767, 738, 773, 739, 765, 795, 244,
	762, 847, 810, 861, 297, 241, 744, 768, 355, 783,
	193, 829, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 868, 301, 816, 0,
	404, 326, 0, 0, 0, 797, 851, 804, 841, 792,
	828, 752, 815, 863, 779, 824, 864, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 775, 821, 858, 776,
	823, 239, 285, 246, 238, 423, 869, 850, 0, 0,
	209, 860, 799, 0, 826, 0, 875, 737, 818, 0,
	740, 743, 871, 854, 771, 249, 0, 0, 0, 0,
	0, 0, 0, 796, 805, 838, 790, 0, 0, 0,
	0, 0, 2134, 0, 769, 0, 814, 0, 0, 0,
	748, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 794, 0, 0, 0, 751, 0, 770,
	839, 0, 735, 268, 745, 327, 231, 0, 843, 853,
	791, 456, 857, 789, 788, 833, 749, 849, 782, 296,
	747, 293, 188, 205, 0, 780, 337, 378, 384, 848,
	766, 774, 229, 772, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 813, 831, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 1056, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 761, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 844, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 836, 874,
	350, 383, 219, 442, 403, 756, 760, 754, 755, 808,
	809, 757, 865, 866, 867, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 840, 750, 0, 758, 759, 0,
	846, 855, 856, 492, 812, 187, 202, 299, 870, 372,
	261, 470, 450, 446, 736, 753, 236, 764, 0, 0,
	777, 785, 786, 798, 800, 801, 802, 803, 323, 819,
	820, 822, 830, 832, 835, 837, 842, 852, 873, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	811, 817, 310, 254, 273, 284, 825, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 807, 834, 306, 420,
	421, 280, 859, 845, 419, 0, 793, 862, 763, 781,
	872, 784, 787, 827, 742, 806, 341, 778, 0, 767,
	738, 773, 739, 765, 795, 244, 762, 847, 810, 861,
	297, 241, 744, 768, 355, 783, 193, 829, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 868, 301, 816, 0, 404, 326, 0, 0,
	0, 797, 851, 804, 841, 792, 828, 752, 815, 863,
	779, 824, 864, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 775, 821, 858, 776, 823, 239, 285, 246,
	238, 423, 869, 850, 0, 0, 209, 860, 799, 0,
	826, 0, 875, 737, 818, 0, 740, 743, 871, 854,
	771, 249, 0, 0, 0, 0, 0, 0, 0, 796,
	805, 838, 790, 0, 0, 0, 0, 0, 2094, 0,
	769, 0, 814, 0, 0, 0, 748, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	0, 0, 0, 751, 0, 770, 839, 0, 735, 268,
	745, 327, 231, 0, 843, 853, 791, 456, 857, 789,
	788, 833, 749, 849, 782, 296, 747, 293, 188, 205,
	0, 780, 337, 378, 384, 848, 766, 774, 229, 772,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	813, 831, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 1056, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 761, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 844, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 836, 874, 350, 383, 219, 442,
	403, 756, 760, 754, 755, 808, 809, 757, 865, 866,
	867, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	840, 750, 0, 758, 759, 0, 846, 855, 856, 492,
	812, 187, 202, 299, 870, 372, 261, 470, 450, 446,
	736, 753, 236, 764, 0, 0, 777, 785, 786, 798,
	800, 801, 802, 803, 323, 819, 820, 822, 830, 832,
	835, 837, 842, 852, 873, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 811, 817, 310, 254,
	273, 284, 825, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 807, 834, 306, 420, 421, 280, 859, 845,
	419, 0, 793, 862, 763, 781, 872, 784, 787, 827,
	742, 806, 341, 778, 0, 767, 738, 773, 739, 765,
	795, 244, 762, 847, 810, 861, 297, 241, 744, 768,
	355, 783, 193, 829, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 868, 301,
	816, 0, 404, 326, 0, 0, 0, 797, 851, 804,
	841, 792, 828, 752, 815, 863, 779, 824, 864, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 775, 821,
	858, 776, 823, 239, 285, 246, 238, 423, 869, 850,
	0, 0, 209, 860, 799, 0, 826, 0, 875, 737,
	818, 0, 740, 743, 871, 854, 771, 249, 0, 0,
	0, 0, 0, 0, 0, 796, 805, 838, 790, 0,
	0, 0, 0, 0, 1637, 0, 769, 0, 814, 0,
	0, 0, 748, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 794, 0, 0, 0, 751,
	0, 770, 839, 0, 735, 268, 745, 327, 231, 0,
	843, 853, 791, 456, 857, 789, 788, 833, 749, 849,
	782, 296, 747, 293, 188, 205, 0, 780, 337, 378,
	384, 848, 766, 774, 229, 772, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 813, 831, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 1056, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	761, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 844, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	836, 874, 350, 383, 219, 442, 403, 756, 760, 754,
	755, 808, 809, 757, 865, 866, 867, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 840, 750, 0, 758,
	759, 0, 846, 855, 856, 492, 812, 187, 202, 299,
	870, 372, 261, 470, 450, 446, 736, 753, 236, 764,
	0, 0, 777, 785, 786, 798, 800, 801, 802, 803,
	323, 819, 820, 822, 830, 832, 835, 837, 842, 852,
	873, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 811, 817, 310, 254, 273, 284, 825, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 807, 834,
	306, 420, 421, 280, 859, 845, 419, 0, 793, 862,
	763, 781, 872, 784, 787, 827, 742, 806, 341, 778,
	0, 767, 738, 773, 739, 765, 795, 244, 762, 847,
	810, 861, 297, 241, 744, 768, 355, 783, 193, 829,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 868, 301, 816, 0, 404, 326,
	0, 0, 0, 797, 851, 804, 841, 792, 828, 752,
	815, 863, 779, 824, 864, 287, 226, 192, 338, 405,
	259, 0, 87, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 775, 821, 858, 776, 823, 239,
	285, 246, 238, 423, 869, 850, 0, 0, 209, 860,
	799, 0, 826, 0, 875, 737, 818, 0, 740, 743,
	871, 854, 771, 249, 0, 0, 0, 0, 0, 0,
	0, 796, 805, 838, 790, 0, 0, 0, 0, 0,
	0, 0, 769, 0, 814, 0, 0, 0, 748, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 794, 0, 0, 0, 751, 0, 770, 839, 0,
	735, 268, 745, 327, 231, 0, 843, 853, 791, 456,
	857, 789, 788, 833, 749, 849, 782, 296, 747, 293,
	188, 205, 0, 780, 337, 378, 384, 848, 766, 774,
	229, 772, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 813, 831, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 1056, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 761, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 844,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 836, 874, 350, 383,
	219, 442, 403, 756, 760, 754, 755, 808, 809, 757,
	865, 866, 867, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 840, 750, 0, 758, 759, 0, 846, 855,
	856, 492, 812, 187, 202, 299, 870, 372, 261, 470,
	450, 446, 736, 753, 236, 764, 0, 0, 777, 785,
	786, 798, 800, 801, 802, 803, 323, 819, 820, 822,
	830, 832, 835, 837, 842, 852, 873, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 811, 817,
	310, 254, 273, 284, 825, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 807, 834, 306, 420, 421, 280,
	859, 845, 419, 0, 793, 862, 763, 781, 872, 784,
	787, 827, 742, 806, 341, 778, 0, 767, 738, 773,
	739, 765, 795, 244, 762, 847, 810, 861, 297, 241,
	744, 768, 355, 783, 193, 829, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	868, 301, 816, 0, 404, 326, 0, 0, 0, 797,
	851, 804, 841, 792, 828, 752, 815, 863, 779, 824,
	864, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	775, 821, 858, 776, 823, 239, 285, 246, 238, 423,
	869, 850, 0, 0, 209, 860, 799, 0, 826, 0,
	875, 737, 818, 0, 740, 743, 871, 854, 771, 249,
	0, 0, 0, 0, 0, 0, 0, 796, 805, 838,
	790, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	814, 0, 0, 0, 748, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 0,
	0, 751, 0, 770, 839, 0, 735, 268, 745, 327,
	231, 0, 843, 853, 791, 456, 857, 789, 788, 833,
	749, 849, 782, 296, 747, 293, 188, 205, 0, 780,
	337, 378, 384, 848, 766, 774, 229, 772, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 813, 831,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	1056, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 761, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 844, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 836, 874, 350, 383, 219, 442, 403, 756,
	760, 754, 755, 808, 809, 757, 865, 866, 867, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 840, 750,
	0, 758, 759, 0, 846, 855, 856, 492, 812, 187,
	202, 299, 870, 372, 261, 470, 450, 446, 736, 753,
	236, 764, 0, 0, 777, 785, 786, 798, 800, 801,
	802, 803, 323, 819, 820, 822, 830, 832, 835, 837,
	842, 852, 873, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 811, 817, 310, 254, 273, 284,
	825, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	807, 834, 306, 420, 421, 280, 859, 845, 419, 0,
	793, 862, 763, 781, 872, 784, 787, 827, 742, 806,
	341, 778, 0, 767, 738, 773, 739, 765, 795, 244,
	762, 847, 810, 861, 297, 241, 744, 768, 355, 783,
	193, 829, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 868, 301, 816, 0,
	404, 326, 0, 0, 0, 797, 851, 804, 841, 792,
	828, 752, 815, 863, 779, 824, 864, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 775, 821, 858, 776,
	823, 239, 285, 246, 238, 423, 869, 850, 0, 0,
	876, 860, 799, 0, 826, 0, 875, 737, 818, 0,
	740, 743, 871, 854, 771, 249, 0, 0, 0, 0,
	0, 0, 0, 796, 805, 838, 790, 0, 0, 0,
	0, 0, 0, 0, 769, 0, 814, 0, 0, 0,
	748, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 794, 0, 0, 0, 751, 0, 770,
	839, 0, 735, 268, 745, 327, 231, 0, 843, 853,
	791, 456, 857, 789, 788, 833, 749, 849, 782, 296,
	747, 293, 188, 205, 0, 780, 337, 378, 384, 848,
	766, 774, 229, 772, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 813, 831, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 746, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 761, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 844, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 734, 728, 727, 294, 303, 836, 874,
	350, 383, 219, 442, 403, 756, 760, 754, 755, 808,
	809, 757, 865, 866, 867, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 840, 750, 0, 758, 759, 0,
	846, 855, 856, 492, 812, 187, 202, 299, 870, 372,
	261, 470, 450, 446, 736, 753, 236, 764, 0, 0,
	777, 785, 786, 798, 800, 801, 802, 803, 323, 819,
	820, 822, 830, 832, 835, 837, 842, 852, 873, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	811, 817, 310, 254, 273, 284, 825, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 807, 834, 306, 420,
	421, 280, 859, 845, 419, 0, 793, 862, 763, 781,
	872, 784, 787, 827, 742, 806, 341, 778, 0, 767,
	738, 773, 739, 765, 795, 244, 762, 847, 810, 861,
	297, 241, 744, 768, 355, 783, 193, 829, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 868, 301, 816, 0, 404, 326, 0, 0,
	0, 797, 851, 804, 841, 792, 828, 752, 815, 863,
	779, 824, 864, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 775, 821, 858, 776, 823, 239, 285, 246,
	238, 423, 869, 850, 0, 0, 876, 860, 799, 0,
	826, 0, 875, 737, 818, 0, 740, 743, 871, 854,
	771, 249, 0, 0, 0, 0, 0, 0, 0, 796,
	805, 838, 790, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 814, 0, 0, 0, 748, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	0, 0, 0, 751, 0, 770, 839, 0, 735, 268,
	745, 327, 231, 0, 843, 853, 791, 456, 857, 789,
	788, 833, 749, 849, 782, 296, 747, 293, 188, 205,
	0, 780, 337, 378, 384, 848, 766, 774, 229, 772,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	813, 831, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 1235, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 746, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 761, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 844, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 734,
	728, 727, 294, 303, 836, 874, 350, 383, 219, 442,
	403, 756, 760, 754, 755, 808, 809, 757, 865, 866,
	867, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	840, 750, 0, 758, 759, 0, 846, 855, 856, 492,
	812, 187, 202, 299, 870, 372, 261, 470, 450, 446,
	736, 753, 236, 764, 0, 0, 777, 785, 786, 798,
	800, 801, 802, 803, 323, 819, 820, 822, 830, 832,
	835, 837, 842, 852, 873, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 811, 817, 310, 254,
	273, 284, 825, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 807, 834, 306, 420, 421, 280, 859, 845,
	419, 0, 793, 862, 763, 781, 872, 784, 787, 827,
	742, 806, 341, 778, 0, 767, 738, 773, 739, 765,
	795, 244, 762, 847, 810, 861, 297, 241, 744, 768,
	355, 783, 193, 829, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 868, 301,
	816, 0, 404, 326, 0, 0, 0, 797, 851, 804,
	841, 792, 828, 752, 815, 863, 779, 824, 864, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 775, 821,
	858, 776, 823, 239, 285, 246, 238, 423, 869, 850,
	0, 0, 876, 860, 799, 0, 826, 0, 875, 737,
	818, 0, 740, 743, 871, 854, 771, 249, 0, 0,
	0, 0, 0, 0, 0, 796, 805, 838, 790, 0,
	0, 0, 0, 0, 0, 0, 769, 0, 814, 0,
	0, 0, 748, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 794, 0, 0, 0, 751,
	0, 770, 839, 0, 735, 268, 745, 327, 231, 0,
	843, 853, 791, 456, 857, 789, 788, 833, 749, 849,
	782, 296, 747, 293, 188, 205, 0, 780, 337, 378,
	384, 848, 766, 774, 229, 772, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 813, 831, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 725, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 746, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	761, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 844, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 734, 728, 727, 294, 303,
	836, 874, 350, 383, 219, 442, 403, 756, 760, 754,
	755, 808, 809, 757, 865, 866, 867, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 840, 750, 0, 758,
	759, 0, 846, 855, 856, 492, 812, 187, 202, 299,
	870, 372, 261, 470, 450, 446, 736, 753, 236, 764,
	0, 0, 777, 785, 786, 798, 800, 801, 802, 803,
	323, 819, 820, 822, 830, 832, 835, 837, 842, 852,
	873, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 811, 817, 310, 254, 273, 284, 825, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 807, 834,
	306, 420, 421, 280, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 1581,
	0, 573, 0, 0, 0, 244, 578, 0, 0, 0,
	297, 241, 0, 1582, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 585, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	87, 0, 0, 184, 185, 186, 620, 627, 628, 629,
	630, 631, 621, 623, 0, 0, 217, 622, 224, 612,
	614, 613, 594, 625, 632, 633, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 556, 570, 0, 584, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 714, 0,
	0, 0, 602, 0, 569, 0, 0, 577, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 601, 0, 0, 456, 0, 0,
	599, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 608, 600, 589, 591, 609, 610, 586, 587, 590,
	611, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	603, 576, 575, 0, 582, 583, 0, 592, 593, 595,
	574, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 573,
	0, 0, 0, 244, 578, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	585, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 580, 581, 0, 0, 0, 0, 0, 0, 1661,
	0, 287, 226, 192, 338, 405, 259, 0, 87, 0,
	0, 184, 185, 186, 620, 627, 628, 629, 630, 631,
	621, 623, 0, 0, 217, 622, 224, 612, 614, 613,
	594, 625, 632, 633, 1662, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 556, 570, 0, 584, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 568, 0, 0, 0, 0,
	602, 0, 569, 0, 0, 577, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 601, 0, 0, 456, 0, 0, 599, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 608,
	600, 589, 591, 609, 610, 586, 587, 590, 611, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 603, 576,
	575, 0, 582, 583, 0, 592, 593, 595, 574, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	78, 419, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 573, 0,
	0, 0, 244, 578, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 585,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 87, 0, 0,
	184, 185, 186, 620, 627, 628, 629, 630, 631, 621,
	623, 0, 0, 217, 622, 224, 612, 614, 613, 594,
	625, 632, 633, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 556, 570, 0, 584, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 0, 0, 0, 0, 602,
	0, 569, 0, 0, 577, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 601, 0, 0, 456, 0, 0, 599, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 608, 600,
	589, 591, 609, 610, 586, 587, 590, 611, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 603, 576, 575,
	0, 582, 583, 0, 592, 593, 595, 574, 187, 202,
	299, 86, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 573, 0, 0, 0,
	244, 578, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 585, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 87, 0, 0, 184, 185,
	186, 620, 627, 628, 629, 630, 631, 621, 623, 0,
	0, 217, 622, 224, 612, 614, 613, 594, 625, 632,
	633, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 556,
	570, 0, 584, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 602, 0, 569,
	0, 0, 577, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 601,
	0, 0, 456, 0, 0, 599, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 2478, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 608, 600, 589, 591,
	609, 610, 586, 587, 590, 611, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 603, 576, 575, 0, 582,
	583, 0, 592, 593, 595, 574, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 573, 0, 0, 0, 244, 578,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 585, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 87, 0, 1203, 184, 185, 186, 620,
	627, 628, 629, 630, 631, 621, 623, 0, 0, 217,
	622, 224, 612, 614, 613, 594, 625, 632, 633, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 556, 570, 0,
	584, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 0, 0, 0, 0, 602, 0, 569, 0, 0,
	577, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 601, 0, 0,
	456, 0, 0, 599, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 608, 600, 589, 591, 609, 610,
	586, 587, 590, 611, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 603, 576, 575, 0, 582, 583, 0,
	592, 593, 595, 574, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 573, 0, 0, 0, 244, 578, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 585, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 87, 0, 0, 184, 185, 186, 620, 627, 628,
	629, 630, 631, 621, 623, 0, 0, 217, 622, 224,
	612, 614, 613, 594, 625, 632, 633, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 556, 570, 0, 584, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 568, 714,
	0, 0, 0, 602, 0, 569, 0, 0, 577, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 601, 0, 0, 456, 0,
	0, 599, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 608, 600, 589, 591, 609, 610, 586, 587,
	590, 611, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 603, 576, 575, 0, 582, 583, 0, 592, 593,
	595, 574, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	573, 0, 0, 0, 244, 578, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 585, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 87,
	0, 0, 184, 185, 186, 620, 627, 628, 629, 630,
	631, 621, 623, 0, 0, 217, 622, 224, 612, 614,
	613, 594, 625, 632, 633, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 556, 570, 0, 584, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 0, 0, 0,
	0, 602, 0, 569, 0, 0, 577, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 601, 0, 0, 456, 0, 0, 599,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	608, 600, 589, 591, 609, 610, 586, 587, 590, 611,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 603,
	576, 575, 0, 582, 583, 0, 592, 593, 595, 574,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 573, 0,
	0, 0, 244, 578, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 585,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 87, 0, 0,
	184, 185, 186, 620, 627, 628, 629, 630, 631, 621,
	623, 0, 0, 217, 622, 224, 612, 614, 613, 594,
	625, 632, 633, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 0, 584, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 0, 0, 0, 0, 602,
	0, 569, 0, 0, 577, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 601, 0, 0, 456, 0, 0, 599, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 608, 600,
	589, 591, 609, 610, 586, 587, 590, 611, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 603, 576, 575,
	0, 582, 583, 0, 592, 593, 595, 574, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 923, 456, 0, 0, 0, 0, 0, 920, 921,
	296, 884, 293, 188, 205, 914, 918, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 1223, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 1088, 0, 1089, 1090, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 1165, 1168, 0,
	0, 0, 0, 1164, 1167, 0, 0, 217, 1163, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 78, 419, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	87, 0, 1203, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 86, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 78, 419, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 86, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 1603, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 1601, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 884, 293, 188, 205, 882, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 1203, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 2448, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 1603, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1395, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1887, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 1872, 0, 0, 0,
	1873, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 1246, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 2516, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 2448, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 0,
	419, 306, 420, 421, 280, 1650, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 1487, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 1367, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 1365, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 1363, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	1361, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 1359, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 1355, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 1353, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 1351, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 1328, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 1230, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1065, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 696, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 547, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 495, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 2255, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	1868, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 0, 0,
	306, 420, 421, 280,
}

var yyPact = [...]int{
	4323, -1000, -390, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1680, 1738, -1000, -1000,
	-1000, -1000, 1815, -1000, 604, 1457, -1000, 1709, 370, -1000,
	34097, 384, -1000, 33549, 382, 2252, 34097, -1000, 120, -1000,
	108, 34097, 115, 33001, -1000, -1000, -303, 14366, 1649, -5,
	-6, 34097, -1000, -1000, -1000, -1000, 1795, 1484, -1000, 295,
	-1000, -1000, -1000, -1000, -1000, -1000, 32453, -1000, -1000, -1000,
	1713, 1706, 1819, 519, 1646, -1000, 1764, 1484, -1000, 14366,
	1784, 1742, 13818, -1000, 13818, 327, -1000, -1000, 10523, -1000,
	-1000, 18752, 34097, 34097, 218, -1000, 1709, -1000, -1000, 292,
	-1000, 252, 1404, -1000, 1403, -1000, 440, 531, 272, 393,
	391, 271, 270, 269, 266, 265, 262, 261, 257, 264,
	-1000, 565, 565, -190, -196, 2828, 318, 318, 318, 354,
	1669, 1665, -1000, 649, -1000, 565, 565, 277, 565, 565,
	565, 565, 228, 227, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 216,
	1709, 215, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34097, 133, 34097, -1000, 447, 34097, 716,
	716, 39, 716, 716, 716, 716, 105, 534, -7, -1000,
	103, 210, 99, 213, 679, 124, 117, -1000, -1000, 201,
	679, 1112, 532, 85, -1000, 716, 8299, 8299, 8299, -1000,
	1688, -1000, -1000, -1000, -1000, -1000, -1000, 1001, -1000, 351,
	-1000, -1000, -1000, -1000, 34097, 31905, 233, 589, -1000, -1000,
	-1000, 30, -1000, -1000, 1347, 693, 14366, 999, -1000, 2233,
	469, -1000, -1000, -1000, -1000, -1000, 422, 14914, 14914, 14914,
	14914, -1000, -1000, 1409, 1409, 1409, 1409, 14914, 1409, 14914,
	1409, 1409, 1409, 1409, 14366, 1409, 1409, 1409, -1000, 1409,
	1409, 1409, 1409, 1409, 1409, 1409, 1409, 1409, 445, 1409,
	1409, 1409, 1409, 1409, -1000, -1000, -1000, -1000, 1409, 1409,
	1409, 1409, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 16558, -1000, 12174, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34097, -1000, 1409, 150,
	34097, 34097, 280, 1764, 1484, -1000, 1795, 1763, 295, -1000,
	1667, 1232, 1307, 1119, 1484, 1391, 34097, -1000, 1411, -1000,
	-1000, -1000, 1552, 1025, 1110, -1000, -1000, -1000, -1000, 1097,
	14366, -1000, -1000, 1810, -1000, 16010, 434, 701, 1809, 31357,
	-1000, 327, 327, 1402, 9967, -28, -1000, -1000, -1000, 584,
	21492, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1688, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1339, 34097, -1000,
	-1000, 3961, 1043, -1000, 1455, -1000, 1333, -1000, 1426, 1476,
	379, 1043, 372, 371, 369, -1000, -123, -1000, -1000, -1000,
	-1000, -1000, 565, 565, -1000, 263, 1782, 370, 3449, -1000,
	-1000, -1000, 30809, 1451, 1043, -1000, 1450, -1000, 653, 444,
	465, 465, 1043, -1000, -1000, 34097, 1043, 651, 647, 34097,
	34097, -1000, 30261, -1000, 29713, 29165, 912, 34097, 28617, 28069,
	27521, 26973, 26425, -1000, 1524, -1000, 1456, -1000, -1000, -1000,
	34097, 34097, 34097, 278, -1000, -1000, 34097, 1043, -1000, -1000,
	911, 909, 565, 565, 907, 1106, 1101, 1099, 565, 565,
	902, 1098, 23684, 175, 887, 883, 882, 956, 1092, 169,
	936, 935, 880, 34097, 1449, 34097, -1000, 195, 627, 352,
	575, 1709, 1648, 1400, 350, 378, 1043, 324, 324, 34097,
	-1000, 8855, -1000, -1000, 1071, 14366, -1000, 680, 679, 679,
	-1000, -1000, -1000, -1000, -1000, -1000, 716, 34097, 680, -1000,
	-1000, -1000, 679, 716, 34097, 716, 716, 716, 716, 679,
	679, 679, 716, 34097, 34097, 34097, 34097, 34097, 34097, 34097,
	34097, 34097, 8299, 8299, 8299, 532, 716, -311, -1000, 1070,
	-1000, 1514, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 101, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -112, 1398, 25877, -1000, -312, -313, -321, -325, -1000,
	-1000, -1000, -328, -329, -1000, -1000, -1000, 14366, 14366, 14366,
	14366, -1000, 818, 14914, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 849, 720, 14914, 14914, 14914, 14914, 14914, 14914, 14914,
	14914, 14914, 14914, 14914, 14914, 14914, 14914, 14914, 768, 1064,
	1063, 469, 469, 469, 469, -1000, 13818, 14366, 14366, 469,
	-1000, 1043, 25329, 13818, 13818, 14366, 1677, 596, 693, 34097,
	-1000, 1119, -1000, -1000, -1000, 837, -1000, 34097, 34097, 19,
	14366, 14366, 11077, 8855, 13818, 13818, 13818, 13818, 13818, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	433, 1278, 1257, 1331, -1000, 1394, -1000, -171, 18204, 14366,
	1057, 1807, 1499, 34097, -1000, -1000, -1000, 1764, -1000, 1764,
	1278, 1643, 1562, 13818, -1000, -1000, 1643, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1212, -1000, 34097, 1391, 1735,
	34097, 1549, 1055, 258, -1000, 14366, 14366, 1390, -1000, 761,
	34097, -1000, -1000, 24781, -1000, -1000, 7743, -1000, 34097, 250,
	34097, -1000, 23136, 24233, 9411, -28, -1000, 9411, 1370, -1000,
	-49, -59, 11625, 498, -1000, -1000, -1000, 2828, 15462, 1271,
	498, 38, -1000, -1000, -1000, 1426, -1000, 1426, 1426, 1426,
	1426, 258, 258, 258, 258, -1000, -1000, -1000, -1000, -1000,
	1445, 1437, -1000, 1426, 1426, 1426, 1426, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1435, 1435, 1435, 1427, 1427, 313,
	-1000, 14366, 222, 34097, 1723, 879, 195, 325, 1496, 1043,
	1043, 1043, 325, -1000, 1234, 1205, -1000, -378, 1386, -1000,
	-1000, 1781, -1000, -1000, 569, 676, 669, 533, 34097, 176,
	249, -1000, 304, -1000, 34097, 1043, 641, 465, 1043, -1000,
	1043, -1000, -1000, -1000, -1000, -1000, 1043, 1382, -1000, 1318,
	798, 667, 767, 661, 1382, -1000, -1000, -144, 1382, -1000,
	1382, -1000, 1382, -1000, 1382, -1000, 1382, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 574, 34097, 176, 768, -1000,
	348, -1000, -1000, 768, 768, -1000, -1000, -1000, -1000, 1054,
	1052, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -366, 34097,
	-1000, 190, 568, 231, 279, 241, 34097, 155, 1740, 198,
	226, 34097, 34097, 324, 1513, 34097, 1727, 34097, -1000, -1000,
	-1000, -1000, -1000, 693, 34097, -1000, -1000, 716, 716, -1000,
	-1000, 34097, 716, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 716, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34097,
	34097, -1000, -1000, -1000, -1000, -1000, 305, -45, 259, -1000,
	-1000, -1000, -1000, -1000, 1747, -1000, 693, 619, 606, -1000,
	-1000, -1000, 844, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	849, 14914, 14914, 14914, 2487, 377, 2166, 2422, 861, 948,
	948, 743, 743, 502, 502, 502, 502, 502, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1296, -1000, 1089, 1002, 1119,
	-1000, 1296, 1296, 966, 13818, -1000, -1000, 595, -1000, 14366,
	1119, -1000, -1000, 1119, 1377, 1375, 1802, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 953, 1033,
	1119, 13818, 13818, 1374, 1409, 430, -1000, 1296, 1119, 1119,
	1296, 1296, 8855, 1119, -1000, 34097, -1000, -299, -1000, -61,
	558, 1409, -1000, 23684, 1119, 1347, -1000, 995, -1000, 35193,
	-1000, -1000, -1000, -1000, -1000, 20944, 1366, 1643, -1000, -1000,
	1409, 1329, -1000, -1000, 258, 25, 20396, -1000, -1000, 693,
	693, 14366, -1000, -1000, -1000, -1000, -1000, -1000, 429, 1794,
	268, 1409, -1000, 1389, 1591, -1000, -1000, -1000, 1734, 17656,
	34097, 1371, 1346, -1000, 426, -1000, 1370, -28, -44, -1000,
	-1000, -1000, -1000, 693, -1000, 1199, 256, 273, -1000, 311,
	-1000, -1000, -1000, -1000, 1655, 24, -1000, -1000, -1000, 258,
	258, -1000, -1000, -1000, -1000, -1000, -1000, 1030, 1030, -1000,
	-1000, -1000, -1000, -1000, 869, -1000, -1000, -1000, 868, -1000,
	-1000, 1143, 1521, 222, -1000, -1000, 565, 1027, 1658, 34097,
	-1000, -1000, 1252, 190, 34097, 603, 1511, -1000, 1496, 1496,
	1496, 34097, -1000, -1000, -1000, -1000, -373, 49, 275, -1000,
	-1000, -1000, 2640, 34097, 1325, -1000, 172, -1000, 1214, 1593,
	34097, -1000, 1323, 1434, 1043, 1043, -1000, -1000, -1000, 34097,
	1409, -1000, -1000, -1000, -1000, 364, 1702, 1690, 176, 172,
	498, 1043, -1000, -1000, -1000, -1000, -1000, -369, 1316, 356,
	179, 232, 34097, 34097, 34097, 34097, 34097, 412, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 223, 329, -1000, 34097,
	34097, 451, -1000, -1000, -1000, 679, -1000, -1000, 679, -1000,
	-1000, -1000, -1000, -1000, 1686, 34097, -52, -342, -1000, -337,
	-1000, -1000, -1000, -1000, 1488, 363, 2166, 14914, 14914, 13818,
	-138, 1238, 1238, 768, -1000, -1000, -1000, 14366, 14366, 1372,
	559, -1000, 14366, 721, -1000, -1000, 14366, 14366, 14366, 1119,
	209, -1000, -1000, 1296, 1296, 13818, 8855, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 558, -1000, 465,
	465, 465, 34097, -1000, -1000, -1000, -1000, -1000, -1000, 1369,
	1758, -1000, 1578, 1574, 1800, 1794, -1000, 23136, 1643, -1000,
	-1000, 34097, -294, -1000, 1628, 1576, -1000, -1000, -1000, -1000,
	7187, 1764, 14366, 1510, 34097, 1409, -1000, 17107, 34097, 34097,
	23136, 23136, 23136, 23136, 23136, -1000, 1541, 1533, -1000, 1539,
	1526, 1551, 34097, -1000, 1290, 1119, 1763, 17656, 19848, 1239,
	23136, -1000, -1000, 23136, 34097, 6631, -1000, -1000, -53, -82,
	-1000, -1000, -1000, -1000, 2828, -1000, -1000, 860, 1732, 1653,
	-1000, -1000, -1000, -1000, 1288, -1000, 1276, 1367, 1259, 98,
	-1000, 1473, 1683, 565, 565, -1000, 864, -1000, 1043, -1000,
	-1000, 338, -1000, 1720, 34097, 1508, 1507, 1504, -1000, -384,
	855, 1432, 1461, 14366, 1430, 1780, 1353, 34097, -1000, -1000,
	34097, -1000, -1000, 355, -1000, 222, 34097, -1000, -1000, -1000,
	249, 34097, -1000, 5255, 172, -1000, -1000, -1000, -1000, -1000,
	-1000, 34097, 189, -1000, 1429, 969, -1000, -1000, 1491, -1000,
	-1000, -1000, -1000, 121, 225, -1000, 34097, 448, 1521, 34097,
	-1000, -1000, -1000, 716, 716, -1000, -1000, 1678, -1000, 1043,
	14914, 14914, -1000, 469, -1000, 1409, 1119, 1426, 1426, -1000,
	1426, 1427, -1000, 1426, 92, 1426, 89, 1426, -1000, -1000,
	1119, 1119, 870, 751, -130, -1000, 693, 14366, 1129, 906,
	1033, -1000, 1425, 1424, -1000, -1000, 1119, -1000, -1000, 1746,
	1746, 1746, 1241, 34645, 34097, -1000, -1000, -1000, -1000, 1794,
	1791, 1360, -1000, -1000, 25, 337, -1000, 1607, 1576, -1000,
	1779, 1620, 1777, -1000, -1000, -1000, 693, -1000, 1707, 1244,
	-1000, 561, 1342, -1000, -1000, 13270, 1248, 1573, 421, 1241,
	1373, 1591, 1482, 1503, 1610, -1000, -1000, -1000, -1000, 1530,
	-1000, 1527, -1000, -1000, 1411, -1000, -1000, 1257, 250, 23136,
	1327, 1327, -1000, 407, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 695, 4948, 1818, -1000, 1023, -1000, 934, -1000, 633,
	630, -1000, 34097, 1423, -1000, 258, 1005, 258, 852, -1000,
	845, -1000, -1000, -237, -1000, -1000, 1419, 1516, -1000, -1000,
	34097, -1000, -1000, 34097, 34097, 34097, 1421, 1776, -1000, 14366,
	1420, 544, 1072, 34097, 34097, -1000, -1000, 238, 1409, -1000,
	1217, 1194, -1000, -194, -1000, 14366, -1000, -1000, -1000, 875,
	875, -1000, 1411, -1000, -1000, -1000, 1197, -1000, -1000, -147,
	34097, 34097, 34097, 34097, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 469, 14914, -1000, -1000, 258, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14366, -1000, 14366,
	-1000, 1764, 1003, 693, 14366, 14366, -1000, 829, 793, -1000,
	1409, 1633, 1409, 1409, 19848, -1000, -1000, 1791, 1788, 1772,
	1595, 1603, 1603, 1607, -1000, 1771, 1770, -1000, 991, 1769,
	985, 628, -1000, 34097, 14366, 1409, -1000, 290, 34097, 1409,
	34097, -1000, 1786, -1000, -1000, 14366, 1414, -1000, 14366, -1000,
	-1000, -1000, -1000, -1000, 1794, 1327, -1000, -1000, 510, -1000,
	14366, -1000, -1000, -1000, 1138, -1000, -1000, -1000, -1000, -1000,
	1412, 14366, -1000, -1000, -1000, 1191, 1145, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1411, -1000, -1000, -1000, -1000,
	249, -375, 1067, 34097, 783, -1000, 1189, 1353, 425, -1000,
	14366, 294, -1000, 249, -1000, -202, -203, 1033, -1000, -1000,
	1730, -1000, -1000, 8855, -1000, -1000, 1410, 1494, -1000, 158,
	-1000, 1033, 1033, 1119, -1000, 1033, 1033, 1142, 1131, 19300,
	-1000, 1768, 1766, 22588, 22588, 558, 1788, -1000, 14366, 14366,
	1579, 840, -1000, -1000, -1000, -1000, 964, 959, -1000, 943,
	-1000, 1817, -1000, 693, -1000, 1409, -1000, 403, 1342, -1000,
	1764, 693, 34097, 693, 1786, -1000, 1033, -1000, 1409, 34097,
	998, -1000, -1000, 1729, 1186, 48, -1000, 1172, -1000, -1000,
	-1000, -1000, 12722, -1000, -1000, -1000, -1000, -1000, -1000, 295,
	1350, -1000, 541, 34097, 34097, 1119, 214, -177, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1161, -1000, -1000, -1000, -1000,
	-1000, 1161, 1161, -1000, -1000, 693, 1347, -1000, 769, -1000,
	-1000, -1000, -1000, -1000, 34097, 1342, 34097, -1000, 1141, 1764,
	-1000, 1134, -1000, 295, -1000, 1408, 1461, -1000, 1119, -146,
	8855, 6075, 1125, -1000, -1000, 1547, -142, -186, 22040, -1000,
	-1000, -1000, -1000, -1000, 1312, -1000, -1000, -1000, 1502, 746,
	-146, 14366, 1279, -1000, -1000, -50, -1000, -1000, -1000, -1000,
	-1000, 1491, -1000, 1546, -1000, -1000, -1000, 1489, -1000, 1798,
	-1000, -1000, -1000, 686, 908, -1000, -1000, -1000, -1000, 765,
	34097, 308, -1000, -1000, -147, -175, -1000, 1813, 511, 511,
	-1000, -1000, -387, 1122, 192, -1000, -182, -1000, -1000, -1000,
	303, 810, -1000, -1000, 723, -387, -1000, -192, -1000, -1000,
	-1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2145, 2143, 16, 1, 2141, 13, 77, 162, 27,
	175, 75, 2140, 2135, 2133, 2132, 2127, 2126, 2123, 195,
	194, 189, 2122, 2121, 2120, 2119, 2118, 2117, 2115, 2112,
	2111, 2110, 186, 147, 151, 2109, 2108, 2107, 98, 152,
	66, 71, 165, 2106, 2104, 59, 2103, 2102, 2101, 159,
	158, 656, 2100, 154, 105, 26, 2099, 2096, 2095, 2094,
	2093, 2088, 2087, 2084, 2082, 2079, 2077, 2076, 2073, 2072,
	287, 2070, 2069, 5, 2068, 63, 2067, 2066, 2065, 104,
	2064, 2063, 2062, 2059, 2058, 2049, 126, 2047, 2046, 2045,
	2044, 153, 2036, 2035, 270, 108, 94, 2032, 2031, 83,
	156, 2029, 99, 2028, 2026, 2025, 134, 2024, 962, 2021,
	40, 47, 2016, 58, 73, 43, 46, 2015, 2014, 2013,
	39, 61, 2012, 80, 42, 2011, 82, 79, 2009, 45,
	2008, 2006, 96, 2003, 1999, 1997, 67, 1996, 1994, 69,
	1993, 76, 116, 85, 53, 1990, 24, 36, 1989, 1988,
	1985, 1980, 1977, 30, 1976, 1974, 1972, 121, 21, 1970,
	17, 12, 31, 115, 1969, 37, 60, 1967, 122, 1964,
	1961, 41, 19, 20, 1960, 18, 107, 137, 15, 81,
	125, 1958, 1956, 33, 52, 1953, 1952, 1951, 1950, 1949,
	1948, 50, 1947, 34, 1942, 176, 1941, 35, 1940, 29,
	23, 1939, 48, 128, 49, 10, 1938, 168, 1936, 32,
	160, 102, 140, 1935, 1934, 1933, 149, 221, 1930, 1929,
	234, 148, 127, 136, 1928, 223, 1927, 1923, 78, 1511,
	1971, 9, 146, 1922, 1917, 1915, 2932, 130, 117, 38,
	1906, 359, 1897, 1896, 1895, 166, 142, 92, 791, 86,
	1894, 1893, 1890, 1889, 1888, 1887, 1885, 1884, 90, 167,
	44, 101, 143, 55, 1883, 1881, 1880, 103, 70, 1877,
	145, 138, 110, 84, 1876, 161, 131, 124, 1874, 88,
	1873, 1872, 1871, 1868, 65, 1867, 1866, 1865, 1861, 139,
	132, 100, 68, 1858, 74, 97, 129, 135, 28, 1857,
	22, 1855, 1854, 164, 11, 1851, 3, 0, 1849, 6,
	150, 226, 144, 1841, 1840, 2, 1839, 4, 1838, 1837,
	120, 1836, 1835, 1834, 8, 25, 7, 1833, 1832, 1830,
	3622, 2874, 106, 1810, 173,
}

//line sql.y:6226
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 328, 329, 329, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 307, 307,
	307, 310, 310, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 77, 77, 20, 21, 21, 21, 21,
	332, 332, 134, 134, 132, 132, 133, 133, 202, 202,
	22, 23, 23, 212, 212, 211, 211, 211, 213, 213,
	213, 213, 248, 248, 24, 24, 24, 24, 24, 92,
	92, 309, 309, 308, 306, 306, 305, 305, 304, 36,
	37, 46, 46, 46, 46, 47, 48, 311, 311, 280,
	52, 52, 51, 51, 51, 51, 53, 53, 50, 50,
	49, 49, 282, 282, 269, 269, 281, 281, 281, 281,
	281, 281, 281, 268, 268, 103, 103, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 323, 323,
	182, 182, 182, 182, 182, 182, 112, 112, 120, 120,
	120, 120, 110, 110, 111, 109, 109, 109, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 119, 119, 116, 116, 116, 117, 117, 117, 324,
	324, 324, 324, 251, 251, 251, 251, 254, 254, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 253, 253,
	253, 253, 253, 255, 255, 255, 255, 255, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 257, 257, 257, 257, 257, 257, 257,
	257, 267, 267, 258, 258, 262, 262, 263, 263, 263,
	264, 264, 264, 265, 265, 260, 260, 260, 260, 260,
	260, 261, 261, 261, 270, 294, 294, 293, 293, 291,
	291, 291, 291, 279, 279, 288, 288, 288, 288, 288,
	278, 278, 274, 274, 274, 275, 275, 276, 276, 273,
	273, 277, 277, 290, 290, 289, 271, 271, 272, 272,
	296, 325, 325, 325, 325, 326, 326, 297, 316, 317,
	315, 315, 315, 315, 315, 75, 75, 75, 224, 224,
	224, 286, 286, 285, 285, 285, 287, 287, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 219, 219, 219, 314,
	314, 314, 314, 314, 314, 313, 313, 313, 283, 283,
	283, 312, 312, 54, 54, 166, 166, 43, 43, 43,
	43, 43, 43, 42, 42, 42, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 44,
	44, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	79, 79, 80, 80, 80, 80, 81, 81, 81, 299,
	299, 55, 55, 3, 3, 1, 1, 2, 2, 4,
	4, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 266, 266, 266, 298, 298, 300, 302,
	302, 302, 302, 301, 88, 88, 26, 35, 35, 27,
	27, 27, 27, 28, 28, 56, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 318, 318, 218, 218, 226, 226,
	217, 217, 241, 241, 241, 220, 220, 220, 221, 221,
	322, 322, 322, 58, 58, 58, 60, 60, 61, 62,
	62, 243, 243, 244, 244, 63, 64, 76, 76, 76,
	76, 76, 76, 78, 78, 78, 13, 13, 13, 13,
	72, 72, 72, 12, 12, 59, 59, 66, 319, 319,
	320, 321, 321, 321, 321, 67, 69, 29, 29, 29,
	29, 29, 29, 98, 98, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 93, 93, 93,
	87, 87, 333, 70, 71, 71, 91, 91, 91, 84,
	84, 84, 90, 90, 90, 14, 14, 15, 201, 201,
	16, 16, 95, 95, 97, 97, 97, 97, 97, 99,
	99, 99, 99, 99, 99, 99, 94, 94, 96, 96,
	96, 96, 233, 233, 233, 232, 232, 123, 123, 125,
	124, 124, 126, 126, 127, 127, 127, 164, 142, 142,
	199, 199, 197, 197, 198, 198, 200, 200, 200, 200,
	203, 203, 128, 128, 128, 128, 129, 129, 130, 130,
	131, 131, 242, 242, 239, 239, 239, 238, 238, 135,
	135, 135, 137, 136, 136, 136, 136, 138, 138, 140,
	140, 139, 139, 141, 146, 146, 145, 145, 143, 143,
	143, 143, 144, 144, 144, 144, 147, 147, 108, 108,
	108, 108, 108, 108, 118, 118, 118, 118, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 215, 215, 148, 148, 156,
	156, 156, 156, 149, 149, 149, 149, 149, 149, 149,
	157, 157, 157, 163, 158, 158, 154, 154, 154, 154,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	234, 234, 234, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 334, 334, 259, 259, 259, 155,
	155, 155, 155, 155, 89, 89, 89, 89, 89, 247,
	247, 247, 250, 250, 250, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	169, 169, 85, 85, 167, 167, 168, 170, 170, 165,
	165, 165, 151, 151, 151, 171, 171, 172, 172, 173,
	173, 175, 174, 174, 176, 177, 177, 177, 178, 178,
	179, 179, 179, 45, 45, 45, 45, 45, 40, 40,
	40, 40, 41, 41, 41, 100, 100, 100, 100, 102,
	102, 101, 101, 73, 73, 74, 74, 74, 106, 106,
	107, 107, 107, 104, 104, 105, 105, 195, 195, 180,
	180, 180, 187, 187, 187, 183, 183, 185, 185, 185,
	186, 186, 186, 184, 192, 192, 194, 194, 193, 193,
	189, 189, 190, 190, 191, 191, 191, 188, 188, 150,
	150, 150, 150, 150, 196, 196, 196, 196, 204, 204,
	160, 160, 162, 162, 161, 122, 205, 205, 209, 206,
	206, 210, 210, 210, 210, 210, 207, 207, 208, 208,
	235, 235, 235, 214, 214, 225, 225, 222, 222, 223,
	223, 216, 216, 227, 227, 227, 68, 159, 159, 295,
	295, 292, 230, 230, 231, 231, 236, 236, 240, 240,
	237, 237, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 330,
	331, 245, 246, 246, 246,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 5, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 1,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	7, 5, 6, 6, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	4, 4, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 3, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 5, 5, 6,
	4, 4, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 5, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 2, 2, 0, 3, 0, 2, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -328, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -77, -31, 30, -36, -46, 206, -47, -37, 207,
	-48, 209, 208, 245, 210, 238, 72, 287, 288, 290,
	291, 292, 293, -78, 243, 244, 212, 34, 43, 31,
	32, 35, 216, 251, 252, 215, -8, -32, 6, -330,
	9, 413, 240, 239, 26, -10, 427, 83, -329, 561,
	-195, -180, 20, 31, 27, -179, -175, -91, -180, 18,
	16, 5, -70, -333, -70, -70, 10, 11, -70, -280,
	-282, 83, 143, 83, -70, -52, -51, -50, -49, -53,
	29, -43, -44, -303, -42, -39, 211, 208, 255, 110,
	111, 245, 246, 247, 210, 229, 244, 248, 243, 264,
	-38, 78, 31, 427, 430, -287, 207, 213, 214, 414,
	113, 112, 73, 209, -284, 339, 531, -53, 533, 99,
	101, 532, 42, 219, 534, 535, 536, 537, 228, 538,
	539, 540, 541, 547, 548, 549, 550, 114, 5, -70,
	-240, -236, -307, -229, 86, 87, 88, 424, 231, 458,
	459, 280, 78, 39, 336, 339, 531, 287, 301, 295,
	322, 314, 425, 460, 283, 232, 268, 528, 312, 119,
	533, 286, 461, 246, 344, 345, 346, 99, 290, 381,
	546, 285, 462, 544, 101, 532, 77, 49, 42, 241,
	310, 215, 306, 534, 269, 463, 435, 262, 113, 110,
	553, 34, 304, 48, 28, 543, 112, 47, 535, 134,
	464, 536, 348, 327, 522, 46, 349, 247, 465, 81,
	252, 429, 530, 350, 305, 351, 279, 542, 212, 466,
	514, 352, 353, 523, 467, 328, 332, 468, 373, 354,
	560, 50, 469, 470, 524, 111, 471, 76, 537, 299,
	300, 472, 277, 230, 375, 326, 228, 33, 355, 426,
	281, 56, 256, 376, 44, 330, 557, 43, 518, 473,
	521, 325, 321, 51, 474, 475, 476, 477, 538, 324,
	298, 320, 552, 447, 274, 539, 60, 214, 334, 333,
	335, 263, 372, 317, 478, 479, 480, 235, 79, 481,
	307, 19, 482, 483, 356, 270, 484, 54, 485, 486,
	379, 244, 487, 52, 540, 37, 249, 554, 541, 488,
	489, 490, 491, 251, 492, 358, 493, 357, 329, 331,
	258, 359, 428, 494, 303, 248, 545, 495, 236, 529,
	250, 255, 243, 380, 237, 496, 497, 498, 499, 500,
	284, 501, 502, 291, 547, 41, 503, 504, 505, 506,
	278, 273, 374, 383, 59, 80, 341, 507, 527, 297,
	271, 508, 288, 53, 548, 549, 550, 265, 551, 7,
	558, 559, 361, 114, 275, 276, 45, 318, 257, 509,
	510, 308, 309, 323, 296, 319, 289, 515, 259, 362,
	245, 511, 382, 272, 337, 342, 432, 264, 363, 526,
	431, 316, 313, 266, 512, 364, 220, 260, 261, 513,
	516, 365, 366, 282, 367, 368, 369, 370, 371, 267,
	430, 294, 311, 343, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 422, 218, -70, 218, -139, -236, 218, -207,
	345, -226, 347, 360, 355, 365, 353, -218, 356, 358,
	258, -322, 373, 218, 362, 206, 160, 348, 357, 366,
	367, 282, 368, 371, 267, -318, -307, 536, 551, 119,
	315, 352, 350, 374, 518, 370, 369, -236, 289, -243,
	294, -230, -307, -229, 292, -139, -76, 514, 210, -245,
	-245, -93, 518, 520, -158, -108, 127, -118, -121, -113,
	-114, -152, -153, -154, -155, -119, -165, 149, 150, 157,
	128, -163, -122, 24, 423, 415, 414, 160, 29, 202,
	66, 67, 417, 418, 130, 55, 390, 391, -120, 386,
	392, 387, 420, 421, 105, 422, -234, -230, -236, 223,
	385, 217, 155, 413, -115, -111, -6, -161, 384, 388,
	389, 393, 102, 104, 103, -307, -229, -117, -116, -148,
	89, 95, 100, 96, -327, 106, -330, 90, 91, 92,
	93, 94, 107, 108, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 42, 361, 361, -139, -70,
	-70, -70, -70, -173, -91, -175, -8, -6, -330, 6,
	-70, -6, -7, -11, -32, -34, 454, -33, -236, -180,
	-195, 10, 145, 40, 48, -178, -179, -10, -6, -108,
	17, 21, 22, -96, 151, -108, -236, -71, -96, -216,
	222, -70, -70, -206, -248, 289, -210, 374, 373, -231,
	-208, -230, -228, -207, 372, 211, 433, 126, 23, 25,
	129, 160, 17, 130, 35, 213, 315, 229, 159, 225,
	414, 206, 70, 434, 386, 387, 384, 390, 416, 417,
	385, 347, 29, 11, 436, 26, 239, 22, 36, 153,
	208, 133, 242, 24, 240, 105, 108, 439, 20, 73,
	234, 12, 227, 38, 14, 440, 441, 15, 223, 222,
	145, 219, 68, 9, 202, 27, 142, 64, 442, 121,
	443, 444, 445, 446, 66, 143, 18, 555, 388, 389,
	31, 519, 423, 253, 155, 71, 57, 520, 127, 448,
	449, 106, 450, 109, 74, 525, 123, 16, 69, 40,
	451, 254, 452, 224, 556, 453, 377, 454, 144, 209,
	413, 67, 455, 217, 360, 6, 419, 30, 238, 226,
	116, 65, 456, 218, 132, 420, 421, 221, 107, 5,
	120, 32, 10, 72, 75, 391, 392, 393, 55, 115,
	427, 131, 13, 457, 378, 125, 119, -281, 143, -268,
	-272, -230, 233, -297, 229, -139, -290, -289, -230, -92,
	-225, 219, 227, 226, 120, -311, 123, 275, 385, 217,
	-49, -50, -207, 159, -79, 250, 254, 84, 84, -272,
	-271, -270, -312, 254, 233, -296, -288, 225, 234, -278,
	226, 227, -273, 219, 121, -312, -273, 224, 234, 254,
	254, 114, 254, 114, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 249, -279, 135, -279, 431, 431, -284,
	-312, -312, -312, 221, 33, 33, -227, -273, 221, 23,
	-279, -279, -207, 159, -279, -279, -279, -279, 262, 262,
	-279, -279, -279, -279, -279, -279, -279, -279, -279, -279,
	-279, -279, -279, -279, -279, 218, -311, -100, 371, 282,
	78, -51, 264, -35, -139, -225, 219, 220, -311, 251,
	-139, 203, -139, -220, 143, 13, -220, -217, 361, 359,
	346, 351, -220, -220, -220, -220, 265, 344, -274, 219,
	33, 230, 361, 265, 344, 265, 266, 265, 266, 354,
	364, 265, -241, 12, 145, 385, 349, 353, 258, 218,
	259, 220, 363, -307, 521, 266, -241, 90, -221, 143,
	361, 261, -220, -246, -330, -231, 315, -246, -246, 30,
	87, 221, -230, -72, -230, 90, -13, -9, -20, -19,
	-21, 135, -98, 361, -86, 160, 536, 522, 523, 524,
	521, 358, 529, 527, 525, 265, 526, 84, 123, 125,
	126, -108, 142, -149, 135, 136, 137, 138, 139, 140,
	141, 145, 127, 129, 143, 144, 124, 146, 147, 148,
	149, 150, 151, 152, 154, 153, 155, 156, 159, 204,
	205, -114, -114, -114, -114, -163, -330, -330, -330, -114,
	-215, -330, -114, -330, -330, -330, -330, -169, -108, -330,
	-334, -330, -334, -334, -259, -330, -259, -330, -330, -330,
	-330, -330, -330, 203, -330, -330, -330, -330, -330, -259,
	-259, -259, -259, 100, 95, 89, -165, 96, 90, -230,
	-236, -6, -7, -158, -245, -319, -320, -142, -139, -330,
	282, -230, -230, 251, -178, -10, -6, -173, -179, -175,
	-6, -70, -84, -97, 61, 62, -99, 22, 36, 65,
	63, 21, -331, 85, -331, -195, -331, 84, -34, -199,
	83, 59, 41, 90, 90, 84, 19, -174, -176, -108,
	12, -233, -232, 23, -230, 90, 203, 98, 12, -140,
	27, -139, -216, -216, 84, 289, -210, -248, -212, -211,
	375, 377, 135, -235, -230, 90, 29, 85, 84, -139,
	-251, -254, -256, -255, -257, -252, -253, 312, 313, 160,
	316, 318, 319, 320, 321, 322, 323, 324, 325, 326,
	327, 30, 241, 308, 309, 310, 311, 328, 329, 330,
	331, 332, 333, 334, 335, 295, 314, 425, 296, 297,
	298, 299, 300, 301, 303, 304, 305, 306, 307, -310,
	-307, 83, 85, 84, -258, 83, -100, 218, -307, 219,
	219, 219, -70, 413, -279, -279, 249, 17, -42, -39,
	-303, 16, -38, -39, 211, 110, 111, 208, 83, -268,
	83, -277, -310, -307, 83, 121, 224, 120, -276, -273,
	-276, -277, -307, -165, -307, 121, 121, -203, -230, -203,
	-203, 21, -203, 21, -203, 21, 92, -230, -203, 21,
	-203, 21, -203, 21, -203, 21, -203, 21, 29, 76,
	77, 29, 79, 80, 81, -165, -165, -268, -207, -139,
	-307, 92, 92, -279, -279, 92, 90, 90, 90, -279,
	-279, 92, 90, -238, -236, 90, -313, 235, 279, 281,
	92, 92, 92, 92, 29, 90, -314, 29, 543, 542,
	544, 545, 546, 92, 29, 92, 29, 92, -230, 83,
	-139, -106, 269, 206, 208, 211, 74, 90, 283, 135,
	42, 84, 221, 218, -307, -222, 223, -222, -230, -237,
	-236, -228, 90, -108, -275, 12, 145, -241, -241, -220,
	-139, -275, -241, -220, -139, -220, -220, -220, -220, -241,
	-241, -241, -220, -236, -236, -139, -139, -139, -139, -139,
	-139, -139, -246, -246, -246, -221, -220, 521, 90, 74,
	-244, 292, 326, 515, 516, 517, 84, 427, -132, -139,
	521, 521, 521, 521, 521, 521, -108, -108, -108, -108,
	-156, 106, 127, 107, 108, -121, -157, -161, -163, 97,
	145, 129, 143, 144, -113, -114, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -113, -113, -113, -247,
	-307, 90, 160, 90, 90, -94, -96, -108, -108, -307,
	-230, -94, -94, -108, -90, 22, 36, -167, -168, 131,
	-165, -331, -331, 92, -230, -230, -83, -82, 395, 396,
	397, 398, 400, 401, 402, 405, 406, 410, 411, 394,
	412, 399, 404, 407, 408, 409, 403, 311, -108, -108,
	-95, 22, 36, -94, -231, -237, -228, -94, -95, -95,
	-94, -94, 203, -195, -331, 84, -321, 377, 378, 519,
	-239, 254, -238, 23, -159, -158, 90, 12, -201, 75,
	-230, -178, -178, 61, 62, 57, -94, -99, -331, -33,
	23, -197, -230, 60, 90, -260, -207, 336, 337, -108,
	-108, 84, -177, 25, 26, -139, -232, 151, -237, -139,
	-202, 254, -139, -124, -126, -127, -128, -142, -164, -330,
	12, -132, -133, -141, -236, -210, -212, 84, 376, 378,
	379, 74, 109, -108, -261, 159, -286, -285, -284, -268,
	-270, -271, -272, 85, -261, -264, 342, 341, -258, -258,
	-258, -258, -258, -260, -260, -260, -260, 83, 83, -258,
	-258, -258, -258, -262, 83, -262, -262, -263, 83, -263,
	-297, -108, -294, -293, -291, -292, 228, 99, 427, 75,
	-289, -177, 92, -106, -223, 223, -295, -292, -307, -307,
	-307, -223, -307, 90, -307, 90, -80, -55, -1, 555,
	556, 557, 84, 17, -269, -268, -54, 279, -300, -301,
	254, -296, -290, -277, 121, -276, -277, -277, -307, 84,
	27, 114, 114, 114, 114, 427, 208, 30, -268, -54,
	-247, 221, -247, -247, 90, 90, -219, 551, -132, -102,
	271, 135, 260, 260, 218, 218, 273, -139, 284, 286,
	285, 283, 21, 272, 274, 276, 262, -139, -139, -222,
	74, -134, -139, 24, -236, -139, -220, -220, -139, -220,
	-220, -139, -230, -86, 377, 84, 427, 20, -87, 20,
	106, 107, 108, -157, -113, -114, -113, 126, 242, 84,
	-331, 23, 84, 75, -331, -331, -331, 84, 12, -94,
	-170, -168, 133, -108, -331, -331, 84, 84, 12, -250,
	23, -331, -331, -94, -94, -330, 203, -331, -331, -331,
	-331, -331, -231, -320, 518, 378, -146, -145, -143, 72,
	222, 73, -330, -238, -331, 90, 87, -198, 87, -197,
	-151, -230, 92, 96, -180, -123, -125, 12, -99, -163,
	85, 84, -260, -184, -189, -217, -230, 90, 160, -176,
	203, -147, 13, -150, 30, 55, -9, -330, -330, 30,
	84, -135, -137, -136, -138, 64, 68, 70, 65, 66,
	67, 71, -242, 23, -124, -7, -6, -330, -139, -132,
	-332, 12, 75, -332, 84, 203, -211, -213, 380, 377,
	383, -307, 90, -79, 84, -284, -272, -181, -103, 38,
	-265, 343, -260, -260, -267, 90, -267, 92, 92, 85,
	-45, -40, -41, 31, 78, -291, -279, 90, 37, -230,
	85, -102, -139, 127, 74, -295, -295, -295, -236, -2,
	554, 560, 121, 83, 346, 16, -197, 84, 85, -166,
	280, 85, -302, 55, -230, 85, 83, -277, -277, -230,
	-330, 218, 29, 29, -54, -166, -261, -307, 553, 552,
	85, 220, 278, -107, 390, -104, 90, 86, -139, -139,
	-139, -139, -139, 211, 208, 263, 221, -132, -139, 84,
	-75, 237, 232, -241, -241, 31, -139, 377, 530, 528,
	126, 242, -121, -114, -96, 424, -249, 160, 312, 241,
	310, 306, 326, 317, 341, 308, 342, 305, 304, 303,
	-249, -247, -108, -108, -173, 134, -108, 132, -108, -108,
	-108, -331, 160, 312, -331, -331, -95, -231, -143, -273,
	-273, -273, -203, 84, -214, 20, 12, 55, 55, -123,
	-147, -124, -99, -230, -187, 514, -192, 44, -190, -191,
	45, -188, 46, 54, 151, -178, -108, -204, 74, -205,
	-209, -165, -160, -162, -161, -330, -196, -331, -230, -203,
	-205, -126, -127, -127, -126, -127, 64, 64, 64, 69,
	64, 69, 64, -136, -236, -331, -331, -7, -239, 75,
	-124, -124, -141, -236, 151, 377, 381, 382, -284, -326,
	106, 127, 29, 74, 339, 99, -324, 159, -325, 224,
	120, 121, 236, 23, 39, 85, 84, 85, 84, 85,
	84, -224, 464, 127, -41, -40, -279, -279, 92, -307,
	220, 24, -139, 74, 74, 74, -81, 558, 92, 83,
	-3, 78, -108, 83, 17, -268, -165, 256, 145, -294,
	-197, -298, -300, -139, -110, -330, -109, -111, -115, 149,
	150, -166, -139, -101, 269, 277, 83, -105, 87, -309,
	75, 260, 339, 260, -139, -75, -45, -139, -220, -220,
	31, -307, -121, -114, -330, -331, -258, -258, -258, -263,
	-258, 300, -258, 300, -258, -331, -331, 84, -331, 20,
	-331, -85, 419, -108, 84, 84, -331, 83, 83, -331,
	-144, 20, -144, -144, -331, 87, -139, -147, -171, 14,
	-184, 49, 318, -194, -193, 53, 45, -191, 17, 47,
	17, 28, -204, 84, 135, 84, -331, -331, 84, 55,
	203, -331, -147, -130, -129, 74, 75, -131, 74, -129,
	64, 64, -199, -331, -202, -124, -147, -147, 203, 106,
	-330, -112, -120, -110, 10, 90, 90, -307, 121, 121,
	-139, 83, -260, 90, -260, 92, 92, 464, 29, 79,
	80, 81, 29, 76, 77, -139, -139, -139, -139, -299,
	83, 17, -108, 83, 135, 85, -197, -197, 257, -161,
	-330, 85, -331, 84, -266, 427, 430, -108, -116, -116,
	-199, 85, -306, 427, -308, -230, -230, -230, -230, -113,
	-260, -108, -108, -178, 90, -108, -108, 92, 92, -330,
	64, 16, 14, -330, -330, -239, -171, -172, 15, 17,
	-185, 51, -183, 50, -183, -193, 17, 17, 90, 17,
	90, 121, -209, -108, -162, 55, -9, -230, -160, -230,
	-173, -108, 83, -108, -147, -147, -108, -153, 422, 83,
	-108, 85, 85, -199, -298, -55, 85, -197, 92, 85,
	-161, -88, -330, 253, -325, -300, 431, 431, -331, 23,
	-305, -304, -231, 83, 75, -89, 145, 427, -331, -331,
	-331, -331, -331, 85, 85, -200, -331, -230, 224, 17,
	17, -200, -200, -146, -172, -108, -158, -186, 52, 74,
	109, 90, 90, 90, 10, -160, 203, -178, -197, -173,
	-331, -197, 85, 23, 85, 560, 121, 85, 253, -9,
	84, 135, -197, -139, -331, 425, 71, 428, 84, -331,
	-331, -331, 74, 109, -205, -230, 85, -178, 85, -182,
	-9, 83, -3, -331, -73, 427, -304, -283, -231, 90,
	92, 85, 60, 426, 429, -230, 224, -316, -317, 74,
	-326, -323, 106, 127, 99, -324, 115, 116, -73, -108,
	83, -74, 268, 518, -309, 60, -317, 74, 11, 10,
	106, 90, 85, -197, 229, -306, 427, -315, 237, 232,
	235, 30, -315, -4, 559, 85, 270, 428, 231, 29,
	106, 92, -4, 429,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 712,
	712, 712, 0, 712, 0, 0, 712, -2, -2, 712,
	1148, 0, 712, 0, 0, -2, 644, 646, 0, 648,
	-2, 0, 0, 657, 1601, 1601, 707, 0, 0, 0,
	0, 0, 712, 712, 712, 712, 1009, 48, 712, 0,
	83, 84, 663, 664, 665, 63, 0, 1599, 1, 3,
	69, 73, 0, 0, 0, 56, 1018, 0, 76, 0,
	0, 716, 0, 714, 0, 1131, 712, 712, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 510, 450, 493, 448, 479, -2, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 343, 343, 0, 0, -2, 441, 441, 441, 0,
	0, 0, 476, 1133, 396, 343, 343, 0, 343, 343,
	343, 343, 0, 0, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 1035,
	146, 1149, 1146, 1147, 38, 39, 40, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 0, 1125, 0, 574, 811, 0, 635,
	635, 0, 635, 635, 635, 635, 0, 0, 0, 586,
	0, 0, 0, 0, 632, 0, 0, 605, 607, 0,
	632, 0, 638, 0, 619, 635, 1602, 1602, 1602, 1116,
	0, 629, 627, 641, 642, 624, 625, 643, 647, 0,
	652, 655, 1142, 1143, 0, 670, 47, 1376, 662, 675,
	676, 0, 708, 709, 43, 904, 0, 833, 837, 848,
	861, 862, 863, 864, 865, 867, 868, 0, 0, 0,
	0, 873, 874, 0, 0, 0, 0, 0, 885, 0,
	0, 0, 0, 0, 990, 0, 954, 954, 921, 954,
	956, 956, 0, 0, 0, 1598, 0, 999, 0, 0,
	0, 0, 0, 0, 251, 252, 903, 1105, 956, 956,
	956, 956, 930, 931, 932, -2, -2, 198, 199, 200,
	201, 202, 203, 204, 0, 194, 0, 256, 257, 253,
	254, 255, 887, 888, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 1601, 0, 685, 0, 0,
	0, 0, 0, 1018, 0, 1010, 1009, 61, 0, 712,
	-2, 0, 0, 0, 0, 45, 0, 50, 770, 75,
	74, 1057, 0, 0, 0, 57, 1019, 65, 67, 1020,
	0, 717, 718, 0, 748, 752, 0, 713, 0, 0,
	1132, 1131, 1131, 100, 0, 1542, 1109, -2, -2, 0,
	0, 1144, 1145, 1118, -2, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, -2, 0, 0, 156,
	157, 0, 41, 369, 0, 152, 0, 363, 313, 1035,
	0, 0, 0, 0, 0, 712, 0, 1126, 137, 138,
	144, 145, 343, 343, 490, 0, 0, 146, 146, 457,
	458, 459, 0, 0, -2, 367, 0, 442, 0, 0,
	357, 357, 361, 359, 360, 0, 0, 0, 0, 0,
	0, 470, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 344, 0, 488, 489, 397,
	0, 0, 0, 0, 468, 469, 0, 0, 1134, 1135,
	0, 0, 343, 343, 0, 0, 0, 0, 343, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 1048, 0, 0,
	0, -2, 0, 566, 0, 0, 0, 1127, 1127, 0,
	573, 0, 575, 576, 0, 0, 577, 0, 632, 632,
	630, 631, 579, 580, 581, 582, 635, 0, 0, 352,
	353, 354, 632, 635, 0, 635, 635, 635, 635, 632,
	632, 632, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 1602, 1602, 638, 635, 0, 615, 0,
	616, 617, 620, 621, 1603, 1604, 1163, 622, 623, 1117,
	645, 653, 656, 673, 671, 672, 674, 666, 667, 668,
	669, 0, 687, 688, 693, 0, 0, 0, 0, 699,
	700, 701, 0, 0, 704, 705, 706, 0, 0, 0,
	0, 831, 0, 0, 893, 894, 895, 896, 897, 898,
	899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 870, 871, 872, 875, 0, 0, 0, 880,
	881, 0, 0, 0, 0, 0, 722, 0, 991, 0,
	919, 0, 920, 922, 923, 0, 924, 0, 0, 0,
	0, 0, 732, 0, 0, 732, 732, 0, 0, 188,
	189, 190, 191, 205, 206, 207, 208, 209, 258, 999,
	0, 903, 0, 0, 44, 677, 678, 0, 794, 1137,
	0, 0, 728, 0, 55, 64, 66, 1018, 59, 1018,
	0, 734, 0, 0, -2, -2, 735, 741, 742, 743,
	744, 745, 52, 1600, 53, 0, 72, 0, 46, 0,
	0, 0, 0, 325, 1060, 0, 0, 1011, 1012, 1015,
	0, 749, 753, 0, 755, 756, 0, 715, 0, 98,
	0, 810, 0, 0, 0, 1542, 1115, 0, 102, 103,
	0, 0, 0, 331, 1120, 1121, 1122, -2, 350, 0,
	331, 320, 264, 265, 266, 313, 268, 313, 313, 313,
	313, 325, 325, 325, 325, 296, 297, 298, 299, 300,
	0, 0, 283, 313, 313, 313, 313, 303, 304, 305,
	306, 307, 308, 309, 310, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 315, 315, 315, 317, 317, 0,
	42, 0, 335, 0, 1015, 0, 1048, 1129, 1139, 0,
	0, 0, 1129, 120, 0, 0, 491, 521, 451, 480,
	492, 0, 454, 455, -2, 0, 0, 441, 0, 443,
	0, 351, 0, -2, 0, 361, 0, 357, 361, 358,
	361, 349, 362, 472, 473, 474, 0, 532, 780, 0,
	0, 0, 0, 0, 538, 539, 540, 0, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 481, 482,
	483, 484, 485, 486, 487, 0, 0, 443, 0, 477,
	0, 398, 399, 0, 0, 402, 403, 404, 405, 0,
	0, 408, 409, 410, 797, 798, 411, 435, 436, 437,
	412, 413, 414, 415, 416, 417, 418, 429, 430, 431,
	432, 433, 434, 419, 420, 421, 422, 423, 426, 0,
	130, 1039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 731, 812,
	1150, 1151, 636, 637, 0, 355, 356, 635, 635, 583,
	606, 0, 635, 587, 608, 588, 590, 589, 591, 610,
	611, 635, 594, 633, 634, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 612, 613, 614, 639, 0,
	0, 654, 658, 659, 660, 661, 0, 0, 690, 94,
	695, 696, 697, 698, 710, 703, 905, 828, 829, 830,
	832, 834, 0, 889, 891, 836, 838, 900, 901, 902,
	0, 0, 0, 0, 0, 842, 846, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 866,
	969, 970, 971, 883, 884, 0, 746, 0, 0, 0,
	882, 0, 0, 0, 0, 723, 724, 997, 994, 0,
	0, 955, 957, 0, 0, 0, 0, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 972, 0,
	0, 0, 0, 733, 1000, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 680, 681, 683, 0,
	814, 0, 795, 0, 0, 1138, 686, 0, 727, 0,
	730, 58, 60, 739, 740, 0, 757, 736, 54, 49,
	0, 0, 772, 1058, 325, 1080, 0, 329, 330, 1021,
	1022, 0, 1014, 1016, 1017, 77, 754, 750, 0, 826,
	0, 0, 809, 0, 760, 762, 763, 764, 792, 0,
	0, 0, 0, 96, 811, 1110, 101, 0, 0, 106,
	107, 1111, 1112, 1113, 1114, 0, 510, -2, 393, 158,
	160, 161, 162, 153, -2, 323, 321, 322, 267, 325,
	325, 290, 291, 292, 293, 294, 295, 0, 0, 284,
	285, 286, 287, 278, 0, 279, 280, 281, 0, 282,
	368, 0, 1023, 336, 337, 339, 343, 0, 0, 0,
	364, 365, 0, 1039, 0, 0, 0, 1140, 1139, 1139,
	1139, 0, 148, 149, 150, 151, 527, 0, 0, 522,
	525, 526, 146, 0, 0, 154, 445, 444, 0, 559,
	0, 366, 0, 0, 361, 361, 346, 347, 475, 0,
	0, 534, 535, 536, 537, 0, 0, 0, 443, 445,
	331, 0, 400, 401, 406, 407, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 506,
	507, 508, 509, 1036, 1037, 1038, 0, 0, 567, 0,
	0, 385, 92, 1128, 572, 632, 593, 609, 632, 585,
	592, 618, 650, 694, 0, 0, 0, 0, 702, 0,
	835, 890, 892, 839, 0, 843, 847, 0, 0, 0,
	0, 0, 0, 0, 886, 910, 911, 0, 0, 1009,
	0, 995, 0, 0, 918, 958, 0, 0, 0, 0,
	0, 929, 906, 0, 0, 732, 0, 959, 960, 961,
	962, 963, 1000, 679, 682, 684, 768, 815, 816, 0,
	0, 0, 0, 796, 1136, 725, 726, 729, -2, 0,
	0, 1002, 0, 0, 757, 826, 758, 0, 737, 51,
	771, 0, 1062, 1061, 1074, 1087, 326, 327, 328, 1013,
	0, 1018, 0, 1098, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 799, 0, 0, 802, 0,
	0, 0, 0, 793, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 332, 333, 139, 146, 395, 159, 375, 0, 0,
	263, 324, 288, 289, 0, 311, 0, 0, 0, 388,
	116, 1027, 1026, 343, 343, 338, 0, 341, 0, 1141,
	314, 0, 129, 0, 0, 0, 0, 0, 135, 516,
	0, 0, 523, 0, 0, 0, 449, 0, 460, 461,
	0, 531, 558, 0, 563, 335, 0, 345, 348, 781,
	0, 0, 462, 0, 445, 466, 467, 478, 427, 428,
	425, 0, 0, 1049, 1050, 1055, 1053, 1054, 121, 498,
	500, 499, 503, 0, 0, 496, 0, 385, 1023, 0,
	571, 386, 387, 635, 635, 689, 95, 0, 692, 0,
	0, 0, 840, 844, 747, 0, 0, 313, 313, 977,
	313, 317, 980, 313, 982, 313, 985, 313, 988, 989,
	0, 0, 0, 0, 992, 917, 998, 0, 0, 0,
	0, 928, 0, 0, 907, 908, 0, 1001, 817, 822,
	822, 822, 0, 0, 0, 1123, 1124, 1003, 1004, 826,
	1005, 759, 738, 773, 1080, 0, 1073, 0, -2, 1082,
	0, 0, 0, 1088, 751, 78, 827, 81, 0, 1098,
	1106, 0, 1089, 1100, 1102, 0, 0, 0, 1094, 0,
	826, 761, 788, 790, 0, 785, 800, 801, 803, 0,
	805, 0, 807, 808, 770, 766, 767, 0, 98, 0,
	826, 826, 97, 0, 813, 108, 109, 110, 394, 163,
	168, 0, 0, 0, 173, 0, 175, 0, 376, 0,
	260, 262, 0, 0, 166, 325, 0, 325, 0, 318,
	0, 377, 389, 0, 1024, 1025, 0, 0, 340, 342,
	0, 1130, 131, 0, 0, 0, 519, 0, 528, 0,
	0, 0, 0, 0, 0, 155, 446, 0, 0, 334,
	0, 0, 556, 553, 463, 0, 192, 193, 195, 0,
	0, 465, 770, 1040, 1041, 1042, 0, 1052, 1056, 124,
	0, 0, 0, 0, 568, 569, 570, 93, 578, 584,
	691, 711, 841, 845, 0, 877, 975, 325, 978, 979,
	981, 983, 984, 986, 987, 878, 879, 0, 913, 0,
	915, 1018, 0, 996, 0, 0, 927, 0, 0, 909,
	0, 0, 0, 0, 794, -2, 62, 1005, 1007, 0,
	1067, 1065, 1065, 1075, 1076, 0, 0, 1083, 0, 0,
	0, 0, 82, 0, 0, 0, 1103, 0, 0, 0,
	0, 99, 1009, 782, 789, 0, 0, 783, 0, 784,
	804, 806, 765, -2, 826, 826, 88, 89, 0, 169,
	0, 171, 186, 187, 0, 174, 176, 177, 259, 261,
	0, 0, 301, 312, 302, 0, 0, 390, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 770, 132, 133, 134, 511,
	0, 521, 0, 0, 0, 514, 0, 452, 0, 562,
	0, 0, 533, 0, 541, 0, 0, 0, 196, 197,
	0, 1051, 497, 0, 122, 123, 0, 0, 502, 964,
	976, 0, 0, 0, 993, 0, 0, 0, 0, 0,
	823, 0, 0, 0, 0, 814, 1007, 80, 0, 0,
	1070, 0, 1063, 1066, 1064, 1077, 0, 0, 1084, 0,
	1086, 0, 1107, 1108, 1101, 0, 1093, 1096, 1092, 1095,
	1018, 786, 0, 791, 1009, 87, 0, 172, 0, 0,
	0, 316, 319, 0, 0, 0, 512, 0, 524, 515,
	560, 561, 0, 564, 370, 557, 554, 555, 464, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 912, 914,
	916, 925, 926, 973, 974, 0, 819, 776, 777, 824,
	825, 0, 0, 769, 79, 1008, 1006, 1059, 0, 1068,
	1069, 1078, 1079, 1085, 0, 1091, 0, 85, 0, 1018,
	170, 0, 180, 0, 520, 0, 523, 513, 0, 1043,
	0, 0, 0, 504, 876, 0, 0, 0, 0, 818,
	820, 821, 1071, 1072, 1099, 1097, 787, 86, 371, 375,
	1043, 0, 0, 565, 494, 1045, 127, 128, 438, 439,
	440, 121, 965, 0, 968, 778, 779, 372, 373, 0,
	164, 181, 182, 0, 0, 185, 178, 179, 117, 0,
	0, 0, 1046, 1047, 124, 966, 374, 0, 0, 0,
	183, 184, 529, 0, 0, 501, 0, 378, 380, 381,
	0, 0, 379, 517, 0, 529, 1044, 0, 382, 383,
	384, 530, 518, 967,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 128, 3, 3, 3, 154, 146, 3,
	83, 85, 151, 149, 84, 150, 203, 152, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 561,
	136, 135, 137, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 124, 3, 157,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 125,
	126, 127, 129, 130, 131, 132, 133, 134, 138, 139,
	140, 141, 142, 143, 144, 145, 147, 148, 153, 155,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:476
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:481
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:486
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:541
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:551
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:557
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:563
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:567
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:576
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:582
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:586
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:592
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:598
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:646
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:666
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:745
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:751
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:771
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:795
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:799
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:811
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:828
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:829
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:833
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:843
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:853
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:857
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:866
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:878
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:888
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:898
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:902
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:906
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:912
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:916
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:930
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:934
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:953
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:973
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:977
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:982
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:997
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1002
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1008
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1025
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1032
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1039
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1044
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1049
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1054
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1061
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1068
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1079
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1090
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1096
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1100
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1114
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1124
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1134
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1138
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1145
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1149
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1155
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1165
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1170
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1179
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1203
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1212
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1234
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1238
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1244
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1250
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1255
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1260
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1265
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1270
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1275
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1291
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1295
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1309
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1315
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1333
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1340
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1363
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1370
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1374
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1409
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1413
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.str = Armscii8Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.str = ASCIIStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = Big5Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = UBinaryStr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = Cp1250Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = Cp1251Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = Cp1256Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp1257Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp850Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp852Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp866Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Cp932Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Dec8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = EucjpmsStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = EuckrStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = Gb18030Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = Gb2312Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = GbkStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Geostd8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = GreekStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = HebrewStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Hp8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Keybcs2Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Koi8rStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Koi8uStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Latin1Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Latin2Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Latin5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Latin7Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = MacceStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = MacromanStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = SjisStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = Swe7Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Tis620Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Ucs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = UjisStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Utf16Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Utf16leStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Utf32Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Utf8mb4Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1631
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1635
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1639
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1643
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1649
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1865
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1874
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1879
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1883
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1891
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1895
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1909
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1913
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1973
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1982
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1988
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1998
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2002
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2007
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2011
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2027
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2031
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2035
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2039
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2043
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = yyDollar[2].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = "key"
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.str = yyDollar[1].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2111
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2121
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2127
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2131
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2137
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2141
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2147
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2153
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2157
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2161
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2165
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2174
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2180
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2186
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2192
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2198
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2202
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2206
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2210
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2214
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2236
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2249
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2255
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2269
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2279
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2283
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2287
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2291
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2295
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2299
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2303
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2307
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2311
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2315
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2319
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2323
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2327
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2331
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2343
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2451
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2456
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2460
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2464
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2468
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2476
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2482
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2490
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2496
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2500
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2504
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2508
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2512
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2516
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2520
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2524
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2528
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2532
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2536
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2540
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2544
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2548
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2552
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2556
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2560
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2564
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2590
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2638
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2645
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2652
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2665
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2669
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2676
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2683
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2705
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2709
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2713
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2751
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2779
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2790
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2799
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2807
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2816
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2823
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2835
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2844
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2859
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2873
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2877
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2883
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2887
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2892
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2896
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2901
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2905
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2911
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2915
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2919
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2923
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2927
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2931
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2935
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2939
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2943
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2947
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2951
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2955
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2959
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2963
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2967
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2971
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2975
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2979
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2983
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2987
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2991
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2995
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3000
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3015
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3034
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3041
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3048
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3057
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3073
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3079
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3083
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3324
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3344
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.str = "extended "
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3374
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3378
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3392
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3396
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3406
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3412
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3416
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3420
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3460
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3465
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3470
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3472
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3488
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3492
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3496
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3500
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3504
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3508
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3532
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3545
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3585
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3595
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3601
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3605
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3609
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3613
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3657
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3716
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3738
		{
			setAllowComments(yylex, true)
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3748
		{
			yyVAL.strs = nil
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3758
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3762
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3766
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3771
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = SQLCacheStr
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3784
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3788
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3792
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3817
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3836
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.strs = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3857
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = SQLCacheStr
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = DistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = DistinctStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = StraightJoinHint
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3893
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3897
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3903
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3907
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3911
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3915
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3920
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3928
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3940
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3944
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3950
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3956
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3970
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3974
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3978
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3984
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3990
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3994
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4003
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4009
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4019
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4029
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4033
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4037
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4041
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4047
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4051
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4064
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4068
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4072
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4076
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4082
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4084
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4088
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4094
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4096
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4099
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4104
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4125
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4129
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4133
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4139
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4145
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4149
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4153
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4157
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4163
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4167
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4206
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4212
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4222
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4226
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4230
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4234
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4239
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4243
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4247
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4251
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4261
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4268
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4272
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4276
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4280
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4284
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4288
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4295
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4299
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4317
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4329
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4333
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4337
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4341
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4349
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4353
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4383
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4387
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4399
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4403
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4407
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4417
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4421
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4425
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4429
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4441
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4481
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4493
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4497
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4505
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4526
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4530
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4537
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4541
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4545
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4549
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4555
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4559
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4563
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4567
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4571
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4575
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4579
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4585
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4589
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4593
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4600
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4606
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4610
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4620
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4624
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4642
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4646
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4650
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4654
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4658
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4689
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4693
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4703
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4708
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4712
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &JSONUtilityExpr{Name: yyDollar[1].colIdent, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4750
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4754
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4758
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4762
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4766
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4770
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4774
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4778
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4782
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4786
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4790
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4796
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4800
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4804
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4808
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4812
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4816
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4820
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4824
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4828
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4846
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4856
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4860
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4864
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4868
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4872
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4878
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4882
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4886
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4890
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4894
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4918
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4922
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4928
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4932
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4936
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4940
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4944
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4950
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4954
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4958
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4962
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4966
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4970
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = string("")
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5011
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5015
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5021
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5036
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5040
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5044
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5073
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5087
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5091
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5097
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5103
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5107
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5113
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5118
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5122
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5126
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5135
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5141
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5145
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5149
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5158
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5162
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5166
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5170
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5177
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5181
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5185
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5189
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5195
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5199
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5203
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = ""
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5225
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5235
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5239
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5244
		{
			yyVAL.str = ""
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5248
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = "cascaded"
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5270
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5276
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5282
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5288
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5306
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5316
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5320
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5326
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5330
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5334
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = ""
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5352
		{
			yyVAL.str = ""
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5356
		{
			yyVAL.str = " header"
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5361
		{
			yyVAL.str = ""
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5365
		{
			yyVAL.str = " manifest on"
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = " manifest off"
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5374
		{
			yyVAL.str = ""
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = " overwrite on"
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = " overwrite off"
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5388
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = ""
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5413
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5422
		{
			yyVAL.str = ""
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5436
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.str = " optionally"
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5472
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5476
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5480
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5484
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5488
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5494
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5498
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5502
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5506
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5515
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5521
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5525
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5531
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5535
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5541
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5556
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5560
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5566
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5572
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5582
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5586
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5590
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5594
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5598
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5606
		{
			yyVAL.str = "charset"
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5633
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5635
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5638
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5650
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5653
		{
			yyVAL.empty = struct{}{}
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5655
		{
			yyVAL.empty = struct{}{}
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.empty = struct{}{}
		}
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5661
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5670
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5677
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5681
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5691
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5704
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5708
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6206
		{
			decNesting(yylex)
		}
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6211
		{
			skipToEnd(yylex)
		}
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6216
		{
			skipToEnd(yylex)
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6220
		{
			skipToEnd(yylex)
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6224
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
